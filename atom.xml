<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>GISerDaiShaoqing&#39;s Blog</title>
  
  <subtitle>Urban·Ecology·GIS</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://giserdaishaoqing.github.io/"/>
  <updated>2018-07-16T06:27:12.215Z</updated>
  <id>https://giserdaishaoqing.github.io/</id>
  
  <author>
    <name>Dai Shaoqing</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Coding and Paper Letter（六）</title>
    <link href="https://giserdaishaoqing.github.io/2018/07/13/Coding-and-Paper-Letter%EF%BC%88%E5%85%AD%EF%BC%89/"/>
    <id>https://giserdaishaoqing.github.io/2018/07/13/Coding-and-Paper-Letter（六）/</id>
    <published>2018-07-13T07:15:00.000Z</published>
    <updated>2018-07-16T06:27:12.215Z</updated>
    
    <content type="html"><![CDATA[<script src="\assets\js\APlayer.min.js"> </script><p>资源整理<a id="more"></a></p><h1 id="1-coding"><a href="#1-Coding：" class="headerlink" title="1 Coding："></a>1 Coding：</h1><p>1.Python工程，使用networkx，geopandas，mplleaflet在地图上可视化网络流。</p><p><a href="https://github.com/yonghah/map-network" target="_blank" rel="external">map-network</a></p><p><img src="http://pbl6hpz34.bkt.clouddn.com/1531466295187iikr2zuk.png?imageslim" alt=""></p><p>2.R语言包rsample, 用于创建和汇总不同类型的重采样对象的类和函数。</p><p><a href="https://github.com/tidymodels/rsample" target="_blank" rel="external">rsample</a></p><p>3.R语言包lomm，lomm软件包为透明且可重现的工作流程，获取和处理空间（地球观测）数据提供了完整的工具链。 它为景观生态问题提供了一种基于证据的方法。</p><p><a href="https://github.com/EhrmannS/lomm" target="_blank" rel="external">lomm</a></p><p>4.R语言包deckard，它为Uber刚刚开源的deck.gl数据可视化框架提供了一个接口。它允许用户：</p><blockquote><ul><li>从R交互式渲染数百万个点。</li><li>在浏览器中可视化数据，无需专门的软件即可提供富有表现力的可视化。</li><li>使用矢量tilesets而不是raster tilesets。</li><li>创建非地理空间数据的自定义可视化。</li></ul></blockquote><p><a href="https://github.com/ihansel/deckard" target="_blank" rel="external">deckard</a></p><p><img src="http://pbl6hpz34.bkt.clouddn.com/15314666144185duvkfuj.png?imageslim" alt=""></p><p>5.R语言包googleway,提供访问各种Google Maps API的机制，包括从R绘制Google Map并使用形状和标记覆盖它，以及从地点，方向，道路，距离，地理编码，高程和时区API检索数据。</p><p><a href="https://github.com/SymbolixAU/googleway" target="_blank" rel="external">googleway</a></p><p><img src="http://pbl6hpz34.bkt.clouddn.com/1531466790674anofv0iu.png?imageslim" alt=""></p><p>6.将深度神经网络中的一些模型 进行统一的图示，便于大家对模型的理解。</p><p><a href="https://github.com/weslynn/AlphaTree-graphic-deep-neural-network" target="_blank" rel="external">AlphaTree graphic deep neural network</a></p><p>7.精选的ETL（提取，转换，加载）框架，库和软件的精选列表。ETL是大数据的关键一步。</p><p><a href="https://github.com/pawl/awesome-etl" target="_blank" rel="external">awesome-etl</a></p><p>8.Chawanda等人，2018年EMS中提出的用于建立SWAT模型的自动化工作流程。</p><p><a href="https://github.com/VUB-HYDR/2018_Chawanda_etal_EMS" target="_blank" rel="external">2018 Chawanda etal EMS</a></p><p>9.Python项目Urbansprawl。urbansprawl项目提供了一个开源框架，用于使用开放数据计算空间城市蔓延指数，评估城市蔓延。 它使用OpenStreetMap（OSM）数据来计算其蔓延指数。并使用开放数据进行分解人口估计（降尺度）</p><p><a href="https://github.com/lgervasoni/urbansprawl" target="_blank" rel="external">urbansprawl</a></p><p><img src="http://pbl6hpz34.bkt.clouddn.com/15314671673900c5lht2d.png?imageslim" alt=""></p><p><img src="http://pbl6hpz34.bkt.clouddn.com/1531467195825o1q524s3.png?imageslim" alt=""></p><p>10.微软开源项目DMTK。分布式机器学习工具包。</p><blockquote><ul><li>DMTK框架（Multiverso）：用于分布式机器学习的参数服务器框架。</li><li>LightLDA：用于大规模主题建模的可扩展，快速和轻量级系统。</li><li>LightGBM：LightGBM是一种基于决策树算法的快速，分布式，高性能梯度增强（GBDT，GBRT，GBM或MART）框架，用于排名，分类和许多其他机器学习任务。</li><li>分布式字嵌入：在multiverso上实现的字嵌入分布式算法。</li></ul></blockquote><p><a href="https://github.com/Microsoft/DMTK" target="_blank" rel="external">DMTK</a></p><p>11.Python书籍。又名“黑客贝叶斯方法”：介绍贝叶斯方法+概率编程与计算/理解 - 第一，数学 - 第二观点。 全部都是纯Python）。</p><p><a href="https://github.com/CamDavidsonPilon/Probabilistic-Programming-and-Bayesian-Methods-for-Hackers" target="_blank" rel="external">Probabilistic-Programming-and-Bayesian-Methods-for-Hackers</a></p><p>12.R语言包stplanr,</p><p><a href="https://github.com/ropensci/stplanr" target="_blank" rel="external">stplanr</a></p><p><img src="http://pbl6hpz34.bkt.clouddn.com/15314681476126twwd7ar.png?imageslim" alt=""></p><p>13.Python库pygwr，Python中的地理加权回归（GWR）。</p><p><a href="https://github.com/mkordi/pygwr" target="_blank" rel="external">pygwr</a></p><p>14.R-Shiny工程GWR。</p><p><a href="https://github.com/KozlowskiMariusz/GWR" target="_blank" rel="external">GWR</a></p><p>15.R语言包lidR，用于林业应用的机载激光雷达数据处理和可视化的R包。</p><p><a href="https://github.com/Jean-Romain/lidR" target="_blank" rel="external">lidR</a></p><p><img src="http://pbl6hpz34.bkt.clouddn.com/1531469174282r1707bnm.png?imageslim" alt=""></p><p>16.R语言包gwrr，适合使用诊断工具的地理加权回归模型。</p><p><a href="https://github.com/cran/gwrr" target="_blank" rel="external">gwrr</a></p><p>17.R语言包spnetwork,地理空间网络分析包，使用SpatialLines作为网络的edge。</p><p><a href="https://github.com/edzer/spnetwork" target="_blank" rel="external">spnetwork</a></p><p>18.UrbanSim的新版本，一个为大都市房地产市场建模的平台</p><p><a href="https://github.com/UDST/urbansim" target="_blank" rel="external">urbansim</a></p><p><img src="http://pbl6hpz34.bkt.clouddn.com/1531469364688g3an76lc.png?imageslim" alt=""></p><p>19.Python库folium，Python的Leaflet可视化库。</p><p><a href="https://github.com/python-visualization/folium" target="_blank" rel="external">folium</a></p><p>20.Python库spandex，Spandex是一个对pandas的数据框和空间数据进行操作的函数库。UrbanSim的数据处理和归集步骤。</p><p><a href="https://github.com/UDST/spandex" target="_blank" rel="external">spandex</a></p><h1 id="2-paper"><a href="#2-Paper" class="headerlink" title="2 Paper:"></a>2 Paper:</h1><p>1.<a href="https://www.sciencedirect.com/science/article/pii/S0049089X1500157X?via%3Dihub" target="_blank" rel="external">Patterns of local segregation: Do they matter for neighborhood crime?/地方隔离的模式：它们对邻里犯罪有影响吗？</a></p><p>本文通过概念化，测量和描述种族 - 种族和经济状况的地方隔离，并检查这些条件与邻里暴力水平的联系，扩展了最近关于城市犯罪的隔离空间测量,财产犯罪和空间动态的研究。 该分析基于86个美国大城市样本中的所有8895个人口普查区域。 使用了包含地方隔离措施的多层次犯罪模型。 结果显示，除了城市层面和邻里特征外，白黑区域隔离与较低的暴力和财产犯罪有关。 相比之下，高收入家庭的低收入地方隔离与较高的犯罪，特别是邻里暴力有关。犯罪地理学近年来更为关注的都是邻里模式的小尺度犯罪研究。值得学习。</p><p>2.<a href="https://www.nature.com/articles/s41586-018-0280-2" target="_blank" rel="external">China’s response to a national land-system sustainability emergency/中国对国家土地系统可持续发展突发事件的响应</a></p><p>由景观生态领域大牛邬建国老师参与的一个研究。具体的中文介绍见<a href="https://mp.weixin.qq.com/s/FoR51byamB4Es8kHJktlow" target="_blank" rel="external">此</a>。可以说可持续科学当下是一个研究热点，同时这个学科又需要跨学科合作。</p><p>3.<a href="http://advances.sciencemag.org/content/advances/3/7/e1700300.full.pdf" target="_blank" rel="external">Urbanization-induced population migration has reduced ambient PM2.5 concentrations in China/中国城市化引起的人口迁移降低了人们对PM2.5暴露的浓度</a></p><p>去年11月在广州参加景观生态研讨会的时候，生态中心的韩立建老师也有类似的研究。非常有意思的主题。</p><p>4.<a href="https://www.sciencedirect.com/science/article/pii/S0034425718303080?via%3Dihub" target="_blank" rel="external">Estimation of ultrahigh resolution PM 2.5 concentrations in urban areas using 160 m Gaofen-1 AOD retrievals/使用160 m Gaofen-1 AOD反演估算城市地区的超高分辨率PM 2.5浓度</a></p><p>发表于遥感领域Top期刊Remote Sensing of Environment的一篇关于PM2.5反演的文章。这项研究中，主要使用新的AOD数据估算每日PM 2.5浓度，其中通过Gaofen-1（GF）宽视场（WFV）反演的160 m空间分辨率以及嵌套线性混合效应模型和来自的辅助变量来自天气研究和预报（WRF）气象模拟数据。该实验在武汉，北京和上海进行，近年来遭受严重的大气细颗粒污染。所提出的模型对于GF和中分辨率成像光谱仪（MODIS）都表现良好，具有轻微的过拟合和很小的空间自相关。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;资源整理
    
    </summary>
    
      <category term="Personal" scheme="https://giserdaishaoqing.github.io/categories/Personal/"/>
    
    
      <category term="Consideration of Ecology and Geography" scheme="https://giserdaishaoqing.github.io/tags/Consideration-of-Ecology-and-Geography/"/>
    
      <category term="Summary" scheme="https://giserdaishaoqing.github.io/tags/Summary/"/>
    
      <category term="Theory" scheme="https://giserdaishaoqing.github.io/tags/Theory/"/>
    
  </entry>
  
  <entry>
    <title>Coding and Paper Letter（五）</title>
    <link href="https://giserdaishaoqing.github.io/2018/07/11/Coding-and-Paper-Letter%EF%BC%88%E4%BA%94%EF%BC%89/"/>
    <id>https://giserdaishaoqing.github.io/2018/07/11/Coding-and-Paper-Letter（五）/</id>
    <published>2018-07-11T13:38:00.000Z</published>
    <updated>2018-07-11T14:12:54.719Z</updated>
    
    <content type="html"><![CDATA[<script src="\assets\js\APlayer.min.js"> </script><p>资源整理<a id="more"></a></p><h1 id="1-coding"><a href="#1-Coding：" class="headerlink" title="1 Coding："></a>1 Coding：</h1><p>1.Python模块libpysal，pysal的核心组件。与pysal的区别目前没有明确。有空研究一下。功能都是Python空间分析的模块。</p><p><a href="https://github.com/pysal/libpysal" target="_blank" rel="external">libpysal</a></p><p>2.R语言包mongrel，多项逻辑斯蒂-正态线性回归模型。</p><p><a href="https://github.com/jsilve24/mongrel" target="_blank" rel="external">mongrel</a></p><p>3.R语言工程SLATRRA——Satellite Latency Assessment Tools for Real-time River Applications，用于实时河流应用的卫星延迟评估工具。包含Allen等人的数据分析和数字和表格的制作，“河流波浪传播时间的全球估计和低延迟卫星数据的影响”。代码的最基本部分包括：</p><blockquote><ul><li>计算河流坡度；</li><li>将兴趣点（POI：城市，水坝和仪表）连接到河网；</li><li>模拟流量波动和计算行程时间；</li><li>使用基于仪表的快速估算来验证模型；</li><li>生成图表，并计算论文中提供的各种统计数据。</li></ul></blockquote><p><a href="https://github.com/geoallen/SLATRRA" target="_blank" rel="external">SLATRRA</a></p><p>4.R语言工程RSSA——统计分析用于估算GRWL数据库中的全球河流和河流表面积。</p><p><a href="https://github.com/geoallen/RSSA" target="_blank" rel="external">RSSA</a></p><p>5.R语言包nassR。通过R下快速统计载各种USDA数据的方法。</p><p><a href="https://github.com/rdinter/nassR" target="_blank" rel="external">nassR</a></p><p>6.书籍《社会空间数据科学书》。</p><p><a href="https://github.com/chris-prener/SSDSBook" target="_blank" rel="external">SSDSBook</a></p><p>7.R语言包getSpatialData。通过R可以轻松查询，预览，下载和预处理多种空间数据（包括MODIS, Landsat等卫星）。</p><p><a href="https://github.com/16EAGLE/getSpatialData" target="_blank" rel="external">getSpatialData</a></p><p><img src="http://pbl6hpz34.bkt.clouddn.com/1531317030675o5aprzpa.png?imageslim" alt=""></p><p>8.R语言包blockCV,包创建空间或环境分离的训练和测试K折数据用以进行交叉验证，以在空间结构化环境中提供稳健的误差估计。</p><p><a href="https://github.com/rvalavi/blockCV" target="_blank" rel="external">blockCV</a></p><p><img src="http://pbl6hpz34.bkt.clouddn.com/1531317134579enja0cu3.png?imageslim" alt=""></p><p>9.R-Shiny工程hikeR,用于轻松规划下一次徒步旅行或骑自行车旅行。</p><p><a href="https://github.com/EricKrg/hikeR" target="_blank" rel="external">hikeR</a></p><p><img src="http://pbl6hpz34.bkt.clouddn.com/1531317208861kxvzqoac.png?imageslim" alt=""></p><p>10.R-Shiny示例工程。使用Electron封装Shiny WebApp作为独立应用程序的演示和教学材料。</p><p><a href="https://github.com/ksasso/useR_electron_meet_shiny" target="_blank" rel="external">useR_electron_meet_shiny</a></p><p>11.Python工程senti_analysis，利用Python实现酒店评论的中文情感分析。</p><p><a href="https://github.com/AimeeLee77/senti_analysis" target="_blank" rel="external">senti_analysis</a></p><p><img src="http://pbl6hpz34.bkt.clouddn.com/1531317327866mitusw47.png?imageslim" alt=""></p><p>12.Python软件包PyMC3，Python中的概率编程：使用Theano进行贝叶斯建模和概率机器学习。PyMC3是一个用于贝叶斯统计建模和概率机器学习的Python软件包，侧重于高级马尔可夫链蒙特卡罗（MCMC）和变分推理（VI）算法。 其灵活性和可扩展性使其适用于大量问题。</p><p><a href="https://github.com/pymc-devs/pymc3" target="_blank" rel="external">pymc3</a></p><p>13.深度学习库tensorflow的可视化工具tensorboard。</p><p><a href="https://github.com/tensorflow/tensorboard" target="_blank" rel="external">tensorboard</a></p><p><img src="http://pbl6hpz34.bkt.clouddn.com/1531317551504f1oqz8qd.png?imageslim" alt=""></p><p>14.R语言包geodist，超轻量级，超快速计算地理距离。</p><p><a href="https://github.com/hypertidy/geodist" target="_blank" rel="external">geodist</a></p><p>15.深度学习和机器学习研究人员使用的参照表</p><p><a href="https://github.com/kailashahirwar/cheatsheets-ai" target="_blank" rel="external">cheatsheets-ai</a></p><p>16.数据科学家的空间可视化养成手册。</p><p><a href="https://github.com/stamen/spatial-dataviz-for-data-scientists" target="_blank" rel="external">spatial dataviz for data scientists</a></p><h1 id="2-paper"><a href="#2-Paper：" class="headerlink" title="2 Paper："></a>2 Paper：</h1><p>1.<a href="https://agupubs.onlinelibrary.wiley.com/doi/abs/10.1029/2018JD028432" target="_blank" rel="external">Role of Groundwater in the Dryland Ecohydrological System: A Case Study of the Heihe River Basin/地下水在旱地生态水文系统中的作用 - 以黑河流域为例</a></p><p>地下水维持旱地的粮食生产和生态系统健康。地下水影响相互关联的水文过程和生态状态，然而，生态水文系统中地下水的功能尚未明确量化。在这项研究中，我们使用具有多个独立数据库的区域尺度综合模型评估地下水在黑河流域生态水文系统中的作用。事实上很多生态系统服务测算的时候在地下水这块考虑明显不足（以InVEST模型来说基本忽略地下水部分）。</p><p>2.<a href="http://www.lightingjournal.org/index.php/path/article/view/79" target="_blank" rel="external">Changes in outdoor lighting in Germany from 2012-2016/2012 - 2016年德国户外照明的变化</a></p><p>使用可见红外成像辐射计套件的白天和夜晚波段调查了2012 - 2016年德国联邦州总光照区域和稳定照明区域的光度变化。 大多数州的照明区域和光泽都增加了。本文还讨论了遥感夜间数据在可持续照明环境中的作用。事实上目前光污染的问题也是一个城市研究较少的问题，去年esri杯开发竞赛地理分析组一等奖也是以灯光污染为题，我想这是一个很有前景的方向。</p><p>3.<a href="http://www.progressingeography.com/CN/abstract/abstract40371.shtml" target="_blank" rel="external">基于随机森林和时空核密度方法的不同周期犯罪热点预测对比</a></p><p>推荐柳林老师团队的一篇犯罪地理的论文，用目前新兴的机器学习算法随机森林与时空统计算法时空核密度对犯罪热点进行预测比较。结果发现：在各时间周期上,随机森林分类热点预测方法的面积和案件量命中率均比时空核密度方法准确性高;并且2种方法均能有效地识别犯罪热点中的高发区域,其中在较小范围较短时间内随机森林识别热点中的高发区效率更高,而在较大范围较长时间周期上时空核密度方法识别高发区更优。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;资源整理
    
    </summary>
    
      <category term="Personal" scheme="https://giserdaishaoqing.github.io/categories/Personal/"/>
    
    
      <category term="Consideration of Ecology and Geography" scheme="https://giserdaishaoqing.github.io/tags/Consideration-of-Ecology-and-Geography/"/>
    
      <category term="Summary" scheme="https://giserdaishaoqing.github.io/tags/Summary/"/>
    
      <category term="Theory" scheme="https://giserdaishaoqing.github.io/tags/Theory/"/>
    
  </entry>
  
  <entry>
    <title>Coding and Paper Letter（四）</title>
    <link href="https://giserdaishaoqing.github.io/2018/07/10/Coding-and-Paper-Letter%EF%BC%88%E5%9B%9B%EF%BC%89/"/>
    <id>https://giserdaishaoqing.github.io/2018/07/10/Coding-and-Paper-Letter（四）/</id>
    <published>2018-07-10T06:32:00.000Z</published>
    <updated>2018-07-10T08:14:17.123Z</updated>
    
    <content type="html"><![CDATA[<script src="\assets\js\APlayer.min.js"> </script><p>资源整理<a id="more"></a></p><h1 id="1-coding"><a href="#1-Coding：" class="headerlink" title="1 Coding："></a>1 Coding：</h1><p>1.与Ecological Forecast这本书以及研究生相关的实践活动。</p><p><a href="https://github.com/EcoForecast/EF_Activities" target="_blank" rel="external">EF_Activities</a></p><p>2.h2o的R示例，h2o是一个机器学习的平台。</p><p><a href="https://github.com/navdeep-G/h2o-r-examples" target="_blank" rel="external">h2o-r-examples</a></p><p>3.R语言包rnassqs，是NOAA快速API的R接口。</p><p><a href="https://github.com/potterzot/rnassqs" target="_blank" rel="external">rnassqs</a></p><p>4.Python模块spatiallist，用于空间数据处理的模块，从<a href="https://github.com/johntruckenbrodt/pyroSAR" target="_blank" rel="external">pyroSAR</a>项目中提取。Ubuntu系统上，基于GDAL以及sqlite和spatialite。</p><p><a href="https://github.com/johntruckenbrodt/spatialist" target="_blank" rel="external">spatialist</a></p><p>5.R语言包rayshader,用来将DEM生成各式各样的山体阴影数据。</p><p><a href="https://github.com/tylermorganwall/rayshader" target="_blank" rel="external">rayshader</a></p><p><img src="http://pbl6hpz34.bkt.clouddn.com/1531205006424d5ziwhfk.png?imageslim" alt=""></p><p>6.Scipy2018年关于地理空间数据的Workshop资料。</p><p><a href="https://github.com/geopandas/scipy2018-geospatial-data" target="_blank" rel="external">scipy2018-geospatial-data</a></p><p>7.R语言包HydroData，可以获取大量开放的地球系统观测数据、矢量数据、栅格数据。</p><p><a href="https://github.com/mikejohnson51/HydroData" target="_blank" rel="external">HydroData</a></p><p><img src="http://pbl6hpz34.bkt.clouddn.com/15312053164735zlrdqfd.png?imageslim" alt=""></p><p>8.R语言包fredr，美国联邦银行经济数据的Restful API接口简单封装的包。</p><p><a href="https://github.com/sboysel/fredr" target="_blank" rel="external">fredr</a></p><p>9.R语言包ncdump,简化我们在R中处理NetCDF的方式的一个包。</p><p><a href="https://github.com/hypertidy/ncdump" target="_blank" rel="external">ncdump</a></p><p>10.《用R做地理计算》书籍。基于gitbook的书籍。讲述了如何用R做地理计算。包括源码以及书籍的在线阅读。</p><p><a href="https://github.com/Robinlovelace/geocompr" target="_blank" rel="external">geocompr</a></p><p>11.R语言包leaflet，开源地图库leaflet的R语言接口。用于R语言中地图数据的交互可视化。</p><p><a href="https://github.com/rstudio/leaflet" target="_blank" rel="external">leaflet</a></p><p><img src="http://pbl6hpz34.bkt.clouddn.com/1531205795095jneq37ze.png?imageslim" alt=""></p><p>12.R语言包FRK,针对大数据的固定秩克里金插值算法。FRK算法的论文发表于统计学顶刊Journal of Statisticial Software。以后有空来学习和介绍。</p><p><a href="https://github.com/andrewzm/FRK" target="_blank" rel="external">FRK</a></p><p>13.pandoc，通用的文档转换开源方案。</p><p><a href="https://github.com/jgm/pandoc" target="_blank" rel="external">pandoc</a></p><p>14.R语言包ggthemr,可以设定固定的几种ggplot2的绘图风格。</p><p><a href="https://github.com/cttobin/ggthemr" target="_blank" rel="external">ggthemr</a></p><p>15.R语言包alluvial，用于绘制如下的类似于平行坐标图的图。</p><p><a href="https://github.com/mbojan/alluvial" target="_blank" rel="external">alluvial</a></p><p><img src="http://pbl6hpz34.bkt.clouddn.com/15312064648834m1i98xx.png?imageslim" alt=""></p><p>16.R语言包ggResponse，用于绘制不同模型的响应曲线。</p><p><a href="https://github.com/rvalavi/ggResponse" target="_blank" rel="external">ggResponse</a></p><p><img src="http://pbl6hpz34.bkt.clouddn.com/1531206627766lzknxads.png?imageslim" alt=""></p><h1 id="2-paper"><a href="#2-Paper" class="headerlink" title="2 Paper:"></a>2 Paper:</h1><p>1.<a href="http://europepmc.org/abstract/MED/29615383" target="_blank" rel="external">HIV Clustering in Mississippi: Spatial Epidemiological Study to Inform Implementation Science in the Deep South/密西西比州的艾滋病毒聚类：空间流行病学研究，以便在南方深入了解实施科学</a></p><p>近年来，美国一半以上的新艾滋病病毒感染发生在美国东南部的非洲裔美国人中。空间流行病学分析可以通过识别与聚类相关的HIV热点和社区层面因素，为深南地区的公共卫生应对提供信息。这项研究的目的是通过分析州级HIV监测数据来识别和描述密西西比州的HIV群集。我们结合使用空间流行病学和统计模型来识别和描述2008年至2014年密西西比州人口普查区（n = 658）的艾滋病病毒热点。</p><p>2.<a href="https://arxiv.org/abs/1806.05129" target="_blank" rel="external">What Is It Like Down There? Generating Dense Ground-Level Views and Image Features From Overhead Imagery Using Conditional Generative Adversarial Networks/它在那里是什么样的？利用条件生成对抗网络从正射图像生成密集的地平面视图和图像特征</a></p><p>本文研究条件生成对抗网络（cGAN），以克服使用地理标记媒体进行地理发现的基本限制，即其稀疏和不均匀的空间分布。我们训练cGAN以生成给定顶部图像的位置的地平面视图。我们展示的“假”地平面图像看起来很自然，并且在结构上与真实图像相似。更重要的是，我们显示生成的图像代表了位置，并且cGAN学习的表示是提供信息的。我想条件生成对抗网络是深度学习和机器学习一个很重要的研究方向，这篇文章很好的结合了地理信息做了研究。值得学习。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;资源整理
    
    </summary>
    
      <category term="Personal" scheme="https://giserdaishaoqing.github.io/categories/Personal/"/>
    
    
      <category term="Consideration of Ecology and Geography" scheme="https://giserdaishaoqing.github.io/tags/Consideration-of-Ecology-and-Geography/"/>
    
      <category term="Summary" scheme="https://giserdaishaoqing.github.io/tags/Summary/"/>
    
      <category term="Theory" scheme="https://giserdaishaoqing.github.io/tags/Theory/"/>
    
  </entry>
  
  <entry>
    <title>Coding and Paper Letter（三）</title>
    <link href="https://giserdaishaoqing.github.io/2018/07/09/Coding%20and%20Paper%20Letter%EF%BC%883%EF%BC%89/"/>
    <id>https://giserdaishaoqing.github.io/2018/07/09/Coding and Paper Letter（3）/</id>
    <published>2018-07-08T16:00:00.000Z</published>
    <updated>2018-07-09T14:19:23.685Z</updated>
    
    <content type="html"><![CDATA[<script src="\assets\js\APlayer.min.js"> </script><p>资源整理<a id="more"></a></p><h1 id="1-coding"><a href="#1-Coding：" class="headerlink" title="1 Coding："></a>1 Coding：</h1><p>1.变化检测专题。</p><p><a href="https://github.com/dsqx71/Change-Detection-in-Remote-Sensing-Images" target="_blank" rel="external">Change-Detection-in-Remote-Sensing-Images</a>遥感影像变化检测的Python代码。</p><p><a href="https://github.com/amanahuja/change-detection-tutorial" target="_blank" rel="external">change-detection-tutorial</a>时间序列数据的变化检测。</p><p><a href="https://github.com/fouronnes/SAR-change-detection" target="_blank" rel="external">SAR-change-detection</a>SAR影像的变化监测。</p><p><a href="https://github.com/IMMM-SFA/demeter" target="_blank" rel="external">demeter</a>土地利用土地覆盖分解和变化检测模型，demeter是一个开源Python包，旨在分解由综合评估模型（IAM）生成的未来土地分配预测。</p><p><a href="https://github.com/klsmith-usgs/lcmap-ccdc" target="_blank" rel="external">lcmap-ccdc</a>LCMAP-ccdc - Python连续变化检测和分类库。</p><p><a href="https://github.com/GreatEmerald/cglops-change-detection" target="_blank" rel="external">cglops-change-detection</a>通过土地覆盖变化检测增强CGLOPS。</p><p><a href="https://github.com/aalukin/Land-use-change-detection" target="_blank" rel="external">Land-use-change-detection</a>利用多传感器卫星数据进行土地利用变化检测。</p><p><a href="https://github.com/ekoshelev/REU-AcceleratedChangeDetectioninSARImages" target="_blank" rel="external">REU-AcceleratedChangeDetectioninSARImages</a>用于合成孔径雷达（SAR）图像变化检测的深度神经网络算法。</p><p><a href="https://github.com/gabrieag/bayesian-change-detection" target="_blank" rel="external">bayesian-change-detection</a>基于贝叶斯模型的变化检测Python模块。</p><p><a href="https://github.com/abhijeet3922/Change-Detection-in-Satellite-Imagery" target="_blank" rel="external">Change-Detection-in-Satellite-Imagery</a>采用主成分分析（PCA）和差分图像上的K-Means来检测多时相图像卫星图像的变化。</p><p><a href="https://github.com/bheliom/Temporal-Changes-Detection-in-3D-scenes" target="_blank" rel="external">Temporal-Changes-Detection-in-3D-scenes</a>使用VisualSfM重建的3D场景中的时间变化检测。</p><p><a href="https://github.com/mohitkharb/Opticks_Gsoc2013" target="_blank" rel="external">Opticks_Gsoc2013</a>用于Opticks的基于对象的图像融合和变化检测工具。</p><p><a href="https://github.com/cran/ChangeAnomalyDetection" target="_blank" rel="external">ChangeAnomalyDetection</a>CRAN上的R语言包，变化检测。</p><p><a href="https://github.com/pxb0702/VGG-net-for-photo-change-detection" target="_blank" rel="external">VGG-net-for-photo-change-detection</a>用VGG Net训练检测照片。</p><p><a href="https://github.com/USGS-EROS/matlab-ccdc" target="_blank" rel="external">matlab-ccdc</a>用于CCDC相关处理的原始Matlab代码。</p><p><a href="https://github.com/GERSL/CCDC" target="_blank" rel="external">CCDC</a>使用所有可用的Landsat数据为土地覆盖的连续变化检测和分类（CCDC）开发的算法。</p><p><a href="https://github.com/USGS-EROS/lcmap-ccdc" target="_blank" rel="external">lcmap-ccdc</a>基于Apache Spark的LCMAP变化检测和分类。</p><p><a href="https://github.com/mortcanty/CRCPython" target="_blank" rel="external">CRCPython</a>遥感影像分析，分类和变化检测。</p><p><a href="https://github.com/xjtang/NRT_Validation" target="_blank" rel="external">NRT_Validation</a>在遥感影像中验证近实时变化检测产品。</p><p><a href="https://github.com/mortcanty/CRC4Docker" target="_blank" rel="external">CRC4Docker</a>用于书“遥感影像分析，分类和变化检测，第四修订版”的Python脚本。</p><p>2.数据科学可视化项目，有非常多有趣的项目。</p><p><a href="https://github.com/BayAreaMetro/Data-And-Visualization-Projects" target="_blank" rel="external">Data-And-Visualization-Projects</a></p><p>3.Python的一个库，用线要素和三维组合来表达地理要素。</p><p><a href="https://github.com/Brideau/GeospatialLineGraphs" target="_blank" rel="external">GeospatialLineGraphs</a></p><p><img src="http://pbl6hpz34.bkt.clouddn.com/QQ%E6%88%AA%E5%9B%BE20180709111523.jpg" alt=""></p><p>4.R语言包raster的教程说明。</p><p><a href="https://github.com/etiennebr/visualraster" target="_blank" rel="external">visualraster</a></p><p><img src="http://pbl6hpz34.bkt.clouddn.com/QQ%E6%88%AA%E5%9B%BE20180709111850.jpg" alt=""></p><p>5.R语言包sparsebn，用于通过稀疏正则化从高维数据中学习稀疏贝叶斯网络和其他图形模型。</p><p><a href="https://github.com/itsrainingdata/sparsebn" target="_blank" rel="external">sparsebn</a></p><p>6.Docker的实践资源，关于Docker是啥的可以去翻我前面的博客，有简单介绍以及如何安装。</p><p><a href="https://github.com/yeasy/docker_practice" target="_blank" rel="external">docker_practice</a></p><p><a href="https://giserdaishaoqing.github.io/2017/11/06/Win7%E4%B8%8B%E8%93%9D%E9%B2%B8%E9%B1%BC%E5%AE%89%E8%A3%85%E4%BB%A5%E5%8F%8AXshell%E8%BF%9E%E6%8E%A5%E6%93%8D%E4%BD%9C/">Win7下蓝鲸鱼安装以及Xshell连接操作</a><br>)</p><p> <a href="https://giserdaishaoqing.github.io/2017/11/08/%E8%8A%B1%E5%BC%8F%E5%AE%89%E8%A3%85%E8%93%9D%E9%B2%B8%E9%B1%BC%E6%9C%AD%E8%AE%B0/">花式安装蓝鲸鱼札记</a></p><p>7.Processing的R拓展。Processing是一个基于Java的动态可视化库，提供了R的接口（接口不一定对，但是就是可以利用R来写Processing）。</p><p><a href="https://github.com/processing-r/Processing.R" target="_blank" rel="external">Processing.R</a></p><p><img src="http://pbl6hpz34.bkt.clouddn.com/QQ%E6%88%AA%E5%9B%BE20180709113620.jpg" alt=""></p><p>8.R Shiny的资源，Shiny是R语言的神器，通过R的代码可以设计html的网页。</p><p><a href="https://github.com/grabear/awesome-rshiny" target="_blank" rel="external">awesome-rshiny</a></p><p>9.MapD Core是一个内存中的列存储SQL关系数据库。</p><p><a href="https://github.com/mapd/mapd-core" target="_blank" rel="external">mapd-core</a></p><p>10.想要熟练使用Python for GIS的GIS分析师的进步路径：从学徒到大师</p><p><a href="https://github.com/AlexArcPy/python-for-gis-progression-path" target="_blank" rel="external">python-for-gis-progression-path</a></p><p>11.基于贝叶斯方法的pm2.5预测（R语言），从抓取、数据分析到预测。</p><p><a href="https://github.com/KehaoWu/PredictPM25" target="_blank" rel="external">PredictPM25</a></p><p>12.Python库Geopandas，Pandas包的地理扩展。</p><p><a href="https://github.com/geopandas/geopandas" target="_blank" rel="external">geopandas</a></p><p>13.用于空间/地理Python探索的笔记和库，UCL CASA的课程资源。</p><p><a href="https://github.com/urschrei/Geopython" target="_blank" rel="external">Geopython</a></p><p><img src="http://pbl6hpz34.bkt.clouddn.com/QQ%E6%88%AA%E5%9B%BE20180709143514.jpg" alt=""></p><p>14.自动化GIS流程课程的课程信息</p><p><a href="https://github.com/Automating-GIS-processes/Course-information" target="_blank" rel="external">Course-information</a></p><p>15.R语言包baidumap，百度地图的R语言接口。</p><p><a href="https://github.com/badbye/baidumap" target="_blank" rel="external">baidumap</a></p><h1 id="2-paper"><a href="#2-Paper" class="headerlink" title="2 Paper:"></a>2 Paper:</h1><p>1.<a href="https://www.frontiersin.org/articles/10.3389/fpls.2018.00866" target="_blank" rel="external">Deep Learning: Individual Maize Segmentation From Terrestrial Lidar Data Using Faster R-CNN and Regional Growth Algorithms/深度学习：使用更快的R-CNN和区域增长算法从地面激光雷达数据中分割玉米</a></p><p>深度学习在LiDAR中的应用。在对象检测，分类和分割方面表现出很高的性能。在这项研究中，我们提出了一种结合深度倾斜和区域生长算法从地面激光雷达数据中分割单个玉米的方法。训练场地的扫描3D点被切成行和行，具有固定的3D窗口。窗口内的点被压缩成深度图像，用于训练更快的R-CNN（基于区域的卷积神经网络）模型以学习检测玉米茎的能力。使用不同种植密度的三个地点来测试该方法。</p><p>2.<a href="https://www.researchgate.net/publication/326250247_Challenging_the_Establishment_of_Cartography_and_GIS" target="_blank" rel="external">Challenging the Establishment of Cartography and GIS/地图学与地理信息系统建立的挑战</a></p><p>2018年7月6-8日中国兰州第六届全国青年学者地理空间信息论坛，江斌老师的汇报。针对大数据与传统地理学理论的一个新思考。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;资源整理
    
    </summary>
    
      <category term="Personal" scheme="https://giserdaishaoqing.github.io/categories/Personal/"/>
    
    
      <category term="Consideration of Ecology and Geography" scheme="https://giserdaishaoqing.github.io/tags/Consideration-of-Ecology-and-Geography/"/>
    
      <category term="Summary" scheme="https://giserdaishaoqing.github.io/tags/Summary/"/>
    
      <category term="Theory" scheme="https://giserdaishaoqing.github.io/tags/Theory/"/>
    
  </entry>
  
  <entry>
    <title>Coding and Paper Letter（二）</title>
    <link href="https://giserdaishaoqing.github.io/2018/07/08/Coding%20and%20Paper%20Letter%EF%BC%882%EF%BC%89/"/>
    <id>https://giserdaishaoqing.github.io/2018/07/08/Coding and Paper Letter（2）/</id>
    <published>2018-07-07T16:00:00.000Z</published>
    <updated>2018-07-10T01:46:51.134Z</updated>
    
    <content type="html"><![CDATA[<script src="\assets\js\APlayer.min.js"> </script><p>资源整理<a id="more"></a></p><h1 id="1-coding"><a href="#1-Coding：" class="headerlink" title="1 Coding："></a>1 Coding：</h1><p>1.近期高光谱遥感的论文和开源代码。</p><p><a href="https://github.com/Santara/LandcoverClassification_BaselineEvaluation" target="_blank" rel="external">LandcoverClassification_BaselineEvaluation GitHub</a>基于高光谱数据对土地覆被进行分类的代码。</p><p><a href="https://github.com/junjun-jiang/JSaCR" target="_blank" rel="external">Matlab code for hyperspectral image classification based on JSaCR GitHub</a>发表于IEEE TGRS Letter上论文的源码。</p><p><a href="https://github.com/Penn000/Multiview-Marginal-Discriminant-Projection-for-Hyperspectral-Images-Classification" target="_blank" rel="external">Multiview Marginal Discriminant Projection for Hyperspectral Images Classification<br>Introduction GitHub</a>NCIG 2018的论文，高光谱影像分类。</p><p><a href="https://github.com/stefpant/HSIclassification" target="_blank" rel="external">Supervised classification of hyperspectral image(HSI) GitHub</a>高光谱影像的监督分类器。</p><p><a href="https://github.com/hetul-patel/hyspeclib" target="_blank" rel="external">Deep learning library for hyperspectral image classification GitHub</a>Python的开源库hyspeclib，基于高光谱影像分类的深度学习库。</p><p><a href="https://github.com/liubing220524/ResNet-for-hyperspectral-image-classification" target="_blank" rel="external">ResNet-for-hyperspectral-image-classification GitHub</a>基于残差神经网络的高光谱分类代码。</p><p><a href="https://github.com/SleepyBrain/Remote-Sensing" target="_blank" rel="external">Undergraduate thesis work on hyperspectral image classification GitHub</a>研究高光谱影像的毕业论文。</p><p><a href="https://github.com/FelineFiles/hyperspectral-classification-with-svm" target="_blank" rel="external">hyperspectral-classification-with-svm GitHub</a>基于SVM的高光谱影像分类。该仓库还提供了与最小二乘法的对比。</p><p><a href="https://github.com/linlinle/Hyperspectral-classification-CNN" target="_blank" rel="external">Hyperspectral-classification-CNN GitHub</a>基于CNN的高光谱分类。</p><p><a href="https://github.com/AlphaNext/Hyperspectral-Imagery-Classification" target="_blank" rel="external">Hyperspectral-Imagery-Classification GitHub</a>发表于IEEE Remote Sensing Letter的关于高光谱影像分类的文章的代码。</p><p><a href="https://github.com/computervisionlearner/Hyperspectral-image-classification" target="_blank" rel="external">2018 IEEE GRSS Data Fusion Contest GitHub</a>IEEE的数据融合竞赛。主要提供高光谱、LiDAR和高分辨率RGB影像。</p><p><a href="https://github.com/irkingmaker/Hyperspectral-Image-Classification" target="_blank" rel="external">Hyperspectral-Image-Classification GitHub</a>高光谱影像分类的代码（Tensorflow）。</p><p><a href="https://github.com/xen0f0n/hyperspectral_data_classification" target="_blank" rel="external">hyperspectral_data_classification GitHub</a>高光谱影像分类开源代码。</p><p><a href="https://github.com/zhangjinyangnwpu/HSI_Classification" target="_blank" rel="external">HSI_Classification GitHub</a>高光谱影像的分类代码。方法包括knn, svm, 1D-CNN, 2D-CNN, 3D-CNN, DPPN, DCPN。</p><p><a href="https://github.com/ytongbai/Hyperspectral-Classification" target="_blank" rel="external">Hyperspectral classification using DNN improved by attention and inception structure GitHub</a>使用DNN改进的高光谱分类开源代码。</p><p><a href="https://github.com/spectralpython/spectral" target="_blank" rel="external">spectral GitHub</a>Python用于高光谱影像处理的模块spectral。</p><p><a href="https://github.com/danqu130/Indian_pines_classification" target="_blank" rel="external">Indian_pines_classification GitHub</a>一个使用CNN与keras的简单分类器用于印度松树高光谱图像分类。</p><p><a href="https://github.com/syamkakarla98/Dimensionality-reduction-and-classification-on-Hyperspectral-Images-Using-Python" target="_blank" rel="external">Dimensionality reduction and classification on Hyperspectral Image Using Python GitHub</a>基于Python的高光谱图像降维与分类。</p><p><a href="https://github.com/XericZephyr/hsic_toolbox" target="_blank" rel="external">Matlab Hyperspectral Image Classification Toolbox</a>Matlab的高光谱影像分类工具箱。</p><p>2.激光雷达与高光谱在森林遥感中应用。</p><p><a href="https://github.com/weecology/DeepForest" target="_blank" rel="external">DeepForest GitHub</a>利用激光雷达和高光谱数据与卷积神经网络进行树分割和分类。</p><p>3.R语言包compareDF。用于比较两个数据框。</p><p><a href="https://github.com/alexsanjoseph/compareDF" target="_blank" rel="external">compareDF</a></p><p><img src="http://pbl6hpz34.bkt.clouddn.com/QQ%E6%88%AA%E5%9B%BE20180708153042.jpg" alt=""></p><p>4.基于PyQGIS的加权Voronoi算法实现。这个也是比较有意思的一个算法。后面可以来考虑介绍下这个内容。</p><p><a href="https://github.com/HichamZouarhi/Weighted-Voronoi-PyQGIS" target="_blank" rel="external">Weighted-Voronoi-PyQGIS</a></p><p>5.R语言包cartogram，R语言中变形地图的包。后面会针对不同软件实现变形地图做些介绍。</p><p><a href="https://github.com/sjewo/cartogram" target="_blank" rel="external">cartogram</a></p><p><img src="http://pbl6hpz34.bkt.clouddn.com/QQ%E6%88%AA%E5%9B%BE20180708153924.jpg" alt=""></p><p>6.R语言包spdplyr。R语言数据清洗与重构神器dplyr的空间拓展。</p><p><a href="https://github.com/mdsumner/spdplyr" target="_blank" rel="external">spdplyr</a></p><p>7.R语言与ArcGIS的桥接库。也先挖坑吧，这个也是想介绍的内容之一。</p><p><a href="https://github.com/R-ArcGIS/r-bridge" target="_blank" rel="external">R-ArcGIS bridge</a></p><p>8.R语言包ggspatial。ggplot2对空间要素的扩展。</p><p><a href="https://github.com/paleolimbot/ggspatial" target="_blank" rel="external">ggspatial</a></p><p><img src="http://pbl6hpz34.bkt.clouddn.com/QQ%E6%88%AA%E5%9B%BE20180708154305.jpg" alt=""></p><p>9.基于SportUV数据对NBA球员的分析代码。</p><p><a href="https://github.com/linouk23/NBA-Player-Movements" target="_blank" rel="external">NBA-Player-Movements</a></p><p><img src="http://pbl6hpz34.bkt.clouddn.com/QQ%E6%88%AA%E5%9B%BE20180708154453.jpg" alt=""></p><p>10.一个NASA开放数据的简单Python接口pyNASA。</p><p><a href="https://github.com/bmtgoncalves/pyNASA" target="_blank" rel="external">pyNASA</a></p><p>11.R语言包rnoaa，可以连接许多NOAA数据的API接口。</p><p><a href="https://github.com/ropensci/rnoaa" target="_blank" rel="external">rnoaa</a></p><p>12.Markdown中绘制流程图的两种方式。</p><p><a href="https://github.com/knsv/mermaid" target="_blank" rel="external">1 mermaid</a></p><p><a href="https://github.com/adrai/flowchart.js" target="_blank" rel="external">2 flowchart.js</a></p><p>13.R语言包velox。R语言中快速操作栅格的包，运行速度快于raster等。</p><p><a href="https://github.com/hunzikp/velox" target="_blank" rel="external">velox</a></p><h1 id="2-paper"><a href="#2-Paper" class="headerlink" title="2 Paper:"></a>2 Paper:</h1><p>1.<a href="https://www.researchgate.net/publication/326136049_Inference_in_multiscale_geographically_weighted_regression" target="_blank" rel="external">Inference in multiscale geographically weighted regression/多尺度GWR的推论</a></p><p>最近的一篇论文（Fotheringham et al.2017）通过允许GWR中的带宽或平滑因子为模型中的每个协变量分别导出，显着扩展了众所周知的地理加权回归（GWR）框架—— 一个称为多尺度GWR的框架（MGWR）。然而，MGWR框架的一个限制是，到目前为止，没有关于局部参数估计的推断是可能的。本文通过将GWR重新设计为广义加法模型（GAM）来解决此限制，将此框架扩展到MGWR，然后导出MGWR中本地参数的标准误差。</p><p>2.<a href="https://www.researchgate.net/publication/326137577_Spatially-correlated_Multilevel_Models_A_Generic_Specification_with_Spatially-Local_Regularization" target="_blank" rel="external">Spatially-correlated Multilevel Models: A Generic Specification with Spatially-Local Regularization/空间相关的多层次模型：具有空间局部正则化的通用规范</a></p><p>多层次（或方差分量）模型已应用于区域科学，流行病学和polimetrics的许多领域。它们最常用于模拟政策制度中的非平稳性处理，这是一种空间过程异质性。具有空间相关分量的多级模型越来越多地用于模拟空间异质性和空间依赖性的存在。在本文中，开发了用于空间相关多层次模型的通用Gibbs采样器，并在癌症筛查模型中检查其性质。</p><p>3.<a href="http://www.mdpi.com/1660-4601/14/7/750" target="_blank" rel="external">Assessing the Potential of Land Use Modification to Mitigate Ambient NO2 and Its Consequences for Respiratory Health/评估土地利用变化减少环境NO2及其对呼吸系统健康的影响的潜力</a></p><p>这篇文章使用了波特兰 - 希尔斯伯勒 - 温哥华（美国）的夏季和冬季NO2空间密集观测来建模，并且使用随机森林（一种集合数据学习技术）研究NO2与LULC的空间变化。随机森林模型与BenMAP一起进一步用于更好地理解LULC，环境NO2和呼吸系统健康之间的关系。还使用灵敏度分析研究了土地利用改变对环境NO2的影响，并且如何影响呼吸健康。结果显示与道路和树冠区相关的NO2可能影响4-12岁儿童哮喘急性发作的年发病率。</p><p>4.<a href="http://link.springer.com/10.1007/s11356-018-1478-4" target="_blank" rel="external">Quantifying particulate matter accumulated on leaves by 17 species of urban trees in Beijing, China/量化中国北京17种城市树木积累的颗粒物质</a></p><p>这项研究使用洗涤和称重方法来量化17种城市植物物种（包括4种灌木和13种树木）叶片表面和叶子蜡质内水溶性离子和不溶性PM的积累。沉积的PM以三种尺寸分数确定：细（0.2-2.5μm），粗（2.5-10μm）和大（&gt;10μm）。在各种物种中检测到PM积累的显着差异。侧柏（Platycladus orientalis）和华山松（Pinus armandi）的叶子是捕获PM的最有效的。在整个物种中，65％和35％的PM平均分别沉积在叶片表面和蜡质中。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;资源整理
    
    </summary>
    
      <category term="Personal" scheme="https://giserdaishaoqing.github.io/categories/Personal/"/>
    
    
      <category term="Consideration of Ecology and Geography" scheme="https://giserdaishaoqing.github.io/tags/Consideration-of-Ecology-and-Geography/"/>
    
      <category term="Summary" scheme="https://giserdaishaoqing.github.io/tags/Summary/"/>
    
      <category term="Theory" scheme="https://giserdaishaoqing.github.io/tags/Theory/"/>
    
  </entry>
  
  <entry>
    <title>Coding and Paper Letter（一）</title>
    <link href="https://giserdaishaoqing.github.io/2018/07/07/Coding%20and%20Paper%20Letter%EF%BC%881%EF%BC%89/"/>
    <id>https://giserdaishaoqing.github.io/2018/07/07/Coding and Paper Letter（1）/</id>
    <published>2018-07-06T16:00:00.000Z</published>
    <updated>2018-07-10T01:44:54.007Z</updated>
    
    <content type="html"><![CDATA[<script src="\assets\js\APlayer.min.js"> </script><p>最近发现需要在快速阅读背景下，对快餐式资源做整理与收集。以Coding（以Github）和Paper（自己看到的一些论文，论文一般主要看题目和摘要做些简单小结）的资源为主。<a id="more"></a></p><h1 id="1-coding"><a href="#1-Coding：" class="headerlink" title="1 Coding："></a>1 Coding：</h1><p>1.QGIS上的变形地图插件，我后面会专门来介绍变形地图这个主题的内容。</p><p><a href="https://github.com/informeren/qgis-cartogram" target="_blank" rel="external">qgis-cartogram源码</a></p><p><img src="http://pbl6hpz34.bkt.clouddn.com/QQ%E6%88%AA%E5%9B%BE20180707093757.jpg" alt=""></p><p>2.火星坐标与地球坐标转换开源代码。</p><p><a href="https://github.com/wandergis/coordtransform-cli" target="_blank" rel="external">命令行版</a></p><p><a href="https://github.com/wandergis/coordTransform_py" target="_blank" rel="external">Python版</a></p><p><a href="https://github.com/wandergis/coordtransform" target="_blank" rel="external">项目与说明</a></p><p>3.空间统计开源软件GeoDa资源。</p><p><a href="https://github.com/GeoDaCenter/geoda" target="_blank" rel="external">GeoDa 源码</a></p><p><img src="http://pbl6hpz34.bkt.clouddn.com/QQ%E6%88%AA%E5%9B%BE20180707094617.jpg" alt=""></p><p>4.空间统计分析开源Python库——PySAL。</p><p><a href="https://github.com/pysal/pysal" target="_blank" rel="external">PySAL GitHub</a></p><p><img src="http://pbl6hpz34.bkt.clouddn.com/QQ%E6%88%AA%E5%9B%BE20180707094551.jpg" alt=""></p><p>5.GIS资源链接整理。</p><p><a href="https://github.com/sshuair/awesome-gis" target="_blank" rel="external">Awesome GIS</a></p><p>6.R语言包（rasterVIS）。一个专门针对栅格做可视化的包。十分强大。</p><p><a href="https://github.com/oscarperpinan/rastervis" target="_blank" rel="external">rasterVIS GitHub</a></p><p><img src="http://pbl6hpz34.bkt.clouddn.com/QQ%E6%88%AA%E5%9B%BE20180707095148.jpg" alt=""></p><p>7.基于CityEngine开发的地理设计工具箱。这个项目讨论了一系列工具，这些工具旨在使数据驱动设计能够支持大规模方案规划项目。这些工具旨在集成GIS和CityEngine，以支持创建大量3D内容，以支持城市规划/地理设计项目。创建的内容可用于创建图像作为剪切图纸的一部分（与数据驱动页面一起使用），或链接到Web地图中的Web内容（通过提供弹出窗口或Web场景链接到的内容）。这里提出的工作流程的重点是街道，但脚本也支持与建筑物/批次/分区可视化相关的项目。意图：这些工具的目的是通过结合使用GIS和CityEngine，实现大规模的数据驱动设计。</p><p><a href="https://github.com/Holisticnature/geodesign-toolkit-gis-cityengine-integration-tools" target="_blank" rel="external">CityEngineToolKit-GeodesignToolkit GitHub</a></p><p>8.深度照片风格转换。基于深度学习的照片风格转换。</p><p><a href="https://github.com/luanfujun/deep-photo-styletransfer" target="_blank" rel="external">deep-photo-styletransfer 源码</a></p><p><img src="http://pbl6hpz34.bkt.clouddn.com/QQ%E6%88%AA%E5%9B%BE20180707101254.jpg" alt=""></p><p>9.R语言包（scanstatistics）。时空扫描统计算法的R包实现，这个算法最早由哈佛大学学者提出，用于疾病的空间统计分析。</p><p><a href="https://github.com/BenjaK/scanstatistics" target="_blank" rel="external">scanstatistics GitHub</a></p><p><img src="http://pbl6hpz34.bkt.clouddn.com/QQ%E6%88%AA%E5%9B%BE20180707102448.jpg" alt=""></p><h1 id="2-paper"><a href="#2-Paper" class="headerlink" title="2 Paper:"></a>2 Paper:</h1><p>1.<a href="https://link.springer.com/article/10.1186/s12889-018-5615-2" target="_blank" rel="external">Outdoor air pollution, green space, and cancer incidence in Saxony: A semi-individual cohort study/萨克森州的室外空气污染，绿色空间和癌症发病率：半个体的队列研究</a>。</p><p>这是目前比较有意思的一个方向，空气污染的人群暴露、绿色空间与疾病三者的关系。使用的是萨克森州的保健数据（主要研究了口腔和咽喉，皮肤——非黑色素瘤皮肤癌 - NMSC的癌症事件（2010-2014），前列腺癌，乳腺癌和结肠直肠癌等疾病），室外空气污染主要考虑PM10和NO2，绿色空间使用NDVI做表征，模型选用的是多层次泊松回归模型。结论主要是高空气污染会增加癌症患病风险，而增加住宅绿色空间则可以降低。</p><p>2.<a href="https://arxiv.org/abs/1802.07452" target="_blank" rel="external">Spatial Morphing Kernel Regression For Feature Interpolation/基于空间变形核回归的高维特征空间插值</a></p><p>针对近年来兴起的带有地理标记的社交媒体数据——也就是志愿者地理信息数据（Volunteer Geographical Information，VGI）。这次用的是Flickr数据。首先是基于卷积神经网络（CNN）提取了Flickr图片的高维特征，然后针对提取的特征进行空间插值。比较了IDW，核回归（高斯核和空间变形核）不同插值方法的结果（以parcel classification结果为例）。</p><p>3.<a href="http://journals.sagepub.com/doi/full/10.1177/0308518X18786250" target="_blank" rel="external">Social media data as a proxy for hourly fine-scale electric power consumption estimation/社交媒体数据作为小时级精细电力消耗估计的辅助数据</a></p><p>准确预测电力需求对现代电力系统的运行至关重要。不准确的负荷预测将显着影响电网效率。预测一个小区域（如建筑物）的电力需求长期以来一直是众所周知的挑战。这项研究分析了带有地理标记的推文与每小时电力消耗之间的关联。检索所有可用的带有地理标记的推文和电表读数，并在空间上汇总到研究区域中的每个建筑物。人类活动指标（推文所反映的）与电力消耗之间存在高度相关性，相关系数超过0.8。非常有意思的研究。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近发现需要在快速阅读背景下，对快餐式资源做整理与收集。以Coding（以Github）和Paper（自己看到的一些论文，论文一般主要看题目和摘要做些简单小结）的资源为主。
    
    </summary>
    
      <category term="Personal" scheme="https://giserdaishaoqing.github.io/categories/Personal/"/>
    
    
      <category term="Consideration of Ecology and Geography" scheme="https://giserdaishaoqing.github.io/tags/Consideration-of-Ecology-and-Geography/"/>
    
      <category term="Summary" scheme="https://giserdaishaoqing.github.io/tags/Summary/"/>
    
      <category term="Theory" scheme="https://giserdaishaoqing.github.io/tags/Theory/"/>
    
  </entry>
  
  <entry>
    <title>R语言字符串处理的一次经历</title>
    <link href="https://giserdaishaoqing.github.io/2018/06/05/R%E8%AF%AD%E8%A8%80%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%A4%84%E7%90%86%E7%9A%84%E4%B8%80%E6%AC%A1%E7%BB%8F%E5%8E%86/"/>
    <id>https://giserdaishaoqing.github.io/2018/06/05/R语言字符串处理的一次经历/</id>
    <published>2018-06-04T16:00:00.000Z</published>
    <updated>2018-07-10T01:41:12.282Z</updated>
    
    <content type="html"><![CDATA[<script src="\assets\js\APlayer.min.js"> </script><p>最近笔者在研读一些文献，发现了Remote Sensing of Environment上的一期Special Issues。这一期可以说是地学上Data Assimilation较为经典的研究吧。所以也是目前研读的重点。当然也是有些其他需求，现在想对这一期专刊的作者与客座编辑做些分析探讨。涉及到一些R语言的字符串处理方式。这里记录下。<a id="more"></a> </p><h1 id="1-数据描述"><a href="#1-数据描述" class="headerlink" title="1 数据描述"></a>1 数据描述</h1><p>数据就比较简单了。一共两个数据。第一个数据如下。</p><p><img src="http://pbl6hpz34.bkt.clouddn.com/QQ%E6%88%AA%E5%9B%BE20180605103217.png" alt=""></p><p>主要包括Title和Author两列，这个数据我命名为RSEDAPaper.xlsx文件。</p><p>第二个数据如下。</p><p><img src="http://pbl6hpz34.bkt.clouddn.com/QQ%E6%88%AA%E5%9B%BE20180605103644.png" alt=""></p><p>主要包括EditorBoard，这个数据我命名为EditorBoard.xlsx文件。</p><h1 id="2-问题描述与思路"><a href="#2-问题描述与思路" class="headerlink" title="2 问题描述与思路"></a>2 问题描述与思路</h1><p>我其实想了解Remote Sensing of Environment这一期专刊里，Editor Board参与的文章数量有几篇？所以这就涉及到两个处理，第一步是首先要对Author的字段进行分割成单独的作者，第二步是与EditorBoard的数据做匹配。</p><h1 id="3-r语言实现"><a href="#3-R语言实现" class="headerlink" title="3 R语言实现"></a>3 R语言实现</h1><p>第一步首先要把用R语言将数据读入到内存里。由于我存的都是Excel文件，就需要用到openxlsx包。之前我已经介绍过如何在R里读取Excel文件。详情请见下文链接。</p><p><a href="https://giserdaishaoqing.github.io/2017/03/22/R%E8%AF%AD%E8%A8%80%E8%AF%BB%E5%8F%96Excel%E7%9A%84%E7%A5%9E%E5%99%A8%E2%80%94%E2%80%94openxlsx/">R语言读取Excel的神器——openxlsx</a></p><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">library</span>(openxlsx)</div><div class="line">basepath &lt;- <span class="string">"E:/RSEDA/"</span></div><div class="line">RSEDA &lt;- read.xlsx(paste(basepath, <span class="string">"RSEDAPaper.xlsx"</span>, sep = <span class="string">""</span>))</div><div class="line">Editor &lt;- read.xlsx(paste(basepath, <span class="string">"EditorBoard.xlsx"</span>, sep = <span class="string">""</span>))</div></pre></td></tr></table></figure><p>basepath是你存放数据的路径，根据具体情况来处理。</p><p>接下来就是涉及到第一步处理，我们首先将Author这种一长串的数据进行分割。</p><p><img src="http://pbl6hpz34.bkt.clouddn.com/QQ%E6%88%AA%E5%9B%BE20180605105159.png" alt=""></p><p>其实这种论文的作者名是比较好分割的，直接使用”,”分割即可。使用的R语言函数是strsplit。输入函数最主要包括两个，一个是字符串，一个是分割符号。样例如下：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">a &lt;- RSEDA$Author[<span class="number">2</span>]</div><div class="line">a</div><div class="line">a &lt;- unlist(strsplit(a, split = <span class="string">","</span>))</div><div class="line">a</div></pre></td></tr></table></figure><p>两次输出分别为：</p><p><img src="http://pbl6hpz34.bkt.clouddn.com/QQ%E6%88%AA%E5%9B%BE20180605105712.png" alt=""></p><p><img src="http://pbl6hpz34.bkt.clouddn.com/QQ%E6%88%AA%E5%9B%BE20180605105720.png" alt=""></p><p>可以发现已经成功做了分割，使得变成了7个作者单独的一个向量，当然如果你的字符串连接方式不是”,”，你只需要在split的等号后面进行修改。而作者个数不相同的情况下，这样子如何存储呢？这时候就用到了R里的一个特殊存储结构：列表。列表很适合存储这种长度不一的一些数据。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">authorlist &lt;- list()</div><div class="line"><span class="keyword">for</span> (i <span class="keyword">in</span> <span class="number">1</span>:nrow(RSEDA)) &#123;</div><div class="line">  authors &lt;- RSEDA$Author[i]</div><div class="line">  authors &lt;- unlist(strsplit(authors, split = <span class="string">","</span>))</div><div class="line">  authorlist[[i]] &lt;- authors</div><div class="line">&#125;</div><div class="line">authorlist</div></pre></td></tr></table></figure><p><img src="http://pbl6hpz34.bkt.clouddn.com/QQ%E6%88%AA%E5%9B%BE20180605111322.png" alt=""></p><p>可以发现很好的存储起来了，当然还有个小问题。由于英文的一些空格的原因，导致有些作者前后多了空格。所以做下一步匹配之前需要对这个进行处理，这里用的是stringr包。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">library</span>(stringr)</div><div class="line">b &lt;- <span class="string">" John M. Morrison "</span></div><div class="line">str_trim(b, <span class="string">"both"</span>)</div></pre></td></tr></table></figure><p><img src="http://pbl6hpz34.bkt.clouddn.com/QQ%E6%88%AA%E5%9B%BE20180605112350.png" alt=""></p><p><img src="http://pbl6hpz34.bkt.clouddn.com/QQ%E6%88%AA%E5%9B%BE20180605112400.png" alt=""></p><p>效果如图，side = “both”，指去除掉两边的空格，”left”和”right”则是去除左边或右边的空格。接下来只需要筛选数据做匹配。这里先生成一个跟前面authorlist一样结构的editorlist列表。然后针对每一篇文章作者分析，用一个for循环和luse获取作者个数，然后，再嵌套一个for循环，获取这一篇文章里每个作者名字，接着去除空格，然后是匹配，ifelse语句的含义是表示，如果这个作者名字有出现在Editor Board里，就输出1，如果没有输出0。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">editorlist &lt;- list()</div><div class="line">editorlist &lt;- authorlist</div><div class="line"><span class="keyword">for</span> (i <span class="keyword">in</span> <span class="number">1</span>:nrow(RSEDA)) &#123;</div><div class="line">  luse &lt;- length(authorlist[[i]])</div><div class="line">  <span class="keyword">for</span> (m <span class="keyword">in</span> <span class="number">1</span>:luse) &#123;</div><div class="line">    deauthor &lt;- authorlist[[i]][m]</div><div class="line">    deauthor &lt;- str_trim(deauthor, <span class="string">'both'</span>)</div><div class="line">    editorlist[[i]][m] &lt;- ifelse(deauthor%<span class="keyword">in</span>%Editor$EditorBoard, <span class="number">1</span>, <span class="number">0</span>)</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p><img src="http://pbl6hpz34.bkt.clouddn.com/QQ%E6%88%AA%E5%9B%BE20180605144445.png" alt=""></p><p>输出结果如图。接着对每一篇文章统计，是否有Editor Board，有的话是1，没有的话是0。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">RSEDA$editor &lt;- <span class="number">1</span></div><div class="line"><span class="keyword">for</span> (i <span class="keyword">in</span> <span class="number">1</span>:nrow(RSEDA)) &#123;</div><div class="line">  RSEDA$editor[i] &lt;- ifelse(<span class="string">"1"</span>%<span class="keyword">in</span>%editorlist[[i]], <span class="number">1</span>, <span class="number">0</span>) </div><div class="line">&#125;</div></pre></td></tr></table></figure><p>先生成了一个字段editor表示是否有Editor Board，默认值为1。而接着就是对每一行分析，这里每一行，是否有含”1”，有的话，即为有Editor Board。</p><p>事实上分析结果显示，这一期专刊里居然一个Editor Board也没有参与文章发表。也是蛮奇怪的。后期可能会针对这些文献做些介绍。这一期的R语言处理的步骤也可以用到其他部分，其实主要是字符串分割，去除空格以及简单的包含处理。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近笔者在研读一些文献，发现了Remote Sensing of Environment上的一期Special Issues。这一期可以说是地学上Data Assimilation较为经典的研究吧。所以也是目前研读的重点。当然也是有些其他需求，现在想对这一期专刊的作者与客座编辑做些分析探讨。涉及到一些R语言的字符串处理方式。这里记录下。
    
    </summary>
    
      <category term="Coding" scheme="https://giserdaishaoqing.github.io/categories/Coding/"/>
    
    
      <category term="R" scheme="https://giserdaishaoqing.github.io/tags/R/"/>
    
  </entry>
  
  <entry>
    <title>MODIS数据的简介和下载（六）——基于浏览器模拟登陆下载的方式以及D3L Tool开发</title>
    <link href="https://giserdaishaoqing.github.io/2018/05/18/MODIS%E6%95%B0%E6%8D%AE%E7%9A%84%E7%AE%80%E4%BB%8B%E5%92%8C%E4%B8%8B%E8%BD%BD%EF%BC%88%E5%85%AD%EF%BC%89%E2%80%94%E2%80%94%E5%9F%BA%E4%BA%8E%E6%B5%8F%E8%A7%88%E5%99%A8%E6%A8%A1%E6%8B%9F%E7%99%BB%E9%99%86%E4%B8%8B%E8%BD%BD%E7%9A%84%E6%96%B9%E5%BC%8F%E4%BB%A5%E5%8F%8AD3L%20Tool%E5%BC%80%E5%8F%91/"/>
    <id>https://giserdaishaoqing.github.io/2018/05/18/MODIS数据的简介和下载（六）——基于浏览器模拟登陆下载的方式以及D3L Tool开发/</id>
    <published>2018-05-17T16:00:00.000Z</published>
    <updated>2018-07-10T01:24:18.719Z</updated>
    
    <content type="html"><![CDATA[<script src="\assets\js\APlayer.min.js"> </script><p>接上文，由于NASA官方弃用了FTP改用HTTPS服务，所以关于MODIS数据的下载方式有所改变。完整系列博客可以参照以下链接。本篇主要介绍的是我自己写的一个下载方式，以及我为了方便大家下载开发的一个带图形界面的下载工具。</p><p><a href="https://giserdaishaoqing.github.io/2017/04/13/MODIS%E6%95%B0%E6%8D%AE%E7%9A%84%E7%AE%80%E4%BB%8B%E5%92%8C%E4%B8%8B%E8%BD%BD%EF%BC%88%E4%B8%80%EF%BC%89%E2%80%94%E2%80%94MODIS%E6%95%B0%E6%8D%AE%E7%AE%80%E4%BB%8B/">MODIS数据的简介和下载（一）——MODIS数据简介</a></p><p><a href="https://giserdaishaoqing.github.io/2017/04/14/MODIS%E6%95%B0%E6%8D%AE%E7%9A%84%E7%AE%80%E4%BB%8B%E5%92%8C%E4%B8%8B%E8%BD%BD%EF%BC%88%E4%BA%8C%EF%BC%89%E2%80%94%E2%80%94MODIS%E6%95%B0%E6%8D%AE%E4%B8%8B%E8%BD%BD%E6%96%B9%E5%BC%8F%EF%BC%88FTP%EF%BC%89/">MODIS数据的简介和下载（二）——MODIS数据下载方式（FTP）</a></p><p><a href="https://giserdaishaoqing.github.io/2017/04/15/MODIS%E6%95%B0%E6%8D%AE%E7%9A%84%E7%AE%80%E4%BB%8B%E5%92%8C%E4%B8%8B%E8%BD%BD%EF%BC%88%E4%B8%89%EF%BC%89%E2%80%94%E2%80%94MODIS%E6%95%B0%E6%8D%AE%E4%B8%8B%E8%BD%BD%E6%96%B9%E5%BC%8F%EF%BC%88%E5%9F%BA%E4%BA%8EMODIS%20Web%20Service%EF%BC%89/">MODIS数据的简介和下载（三）——MODIS数据下载方式（基于MODIS Web Service）</a></p><p><a href="https://giserdaishaoqing.github.io/2018/01/18/MODIS%E6%95%B0%E6%8D%AE%E7%9A%84%E7%AE%80%E4%BB%8B%E5%92%8C%E4%B8%8B%E8%BD%BD%EF%BC%88%E7%95%AA%E5%A4%96%E7%AF%87%EF%BC%89%E2%80%94%E2%80%94MODIS%20Web%20Service%E7%9A%84Python%E5%AE%A2%E6%88%B7%E7%AB%AF%E5%BA%94%E7%94%A8/">MODIS数据的简介和下载（番外篇）——MODIS Web Service的Python客户端应用</a></p><p><a href="https://giserdaishaoqing.github.io/2018/04/22/MODIS%E6%95%B0%E6%8D%AE%E7%9A%84%E7%AE%80%E4%BB%8B%E5%92%8C%E4%B8%8B%E8%BD%BD%EF%BC%88%E5%9B%9B%EF%BC%89%E2%80%94%E2%80%94HTTPS%E6%9C%8D%E5%8A%A1%E4%B8%8B%E8%BD%BD%E8%AF%B4%E6%98%8E/">MODIS数据的简介和下载（四）——HTTPS服务下载说明</a></p><p><a href="https://giserdaishaoqing.github.io/2018/04/23/MODIS%E6%95%B0%E6%8D%AE%E7%9A%84%E7%AE%80%E4%BB%8B%E5%92%8C%E4%B8%8B%E8%BD%BD%EF%BC%88%E4%BA%94%EF%BC%89%E2%80%94%E2%80%94%E5%BA%94%E7%94%A8%E5%AF%86%E9%92%A5%E7%9A%84Python%E8%84%9A%E6%9C%AC%E4%B8%8B%E8%BD%BD/">MODIS数据的简介和下载（五）——应用密钥的Python脚本下载</a></p><a id="more"></a> <h1 id="1-基于nasa官方脚本封装的exe"><a href="#1-基于NASA官方脚本封装的exe" class="headerlink" title="1 基于NASA官方脚本封装的exe"></a>1 基于NASA官方脚本封装的exe</h1><p>这应该是近段时间MODIS数据的最后一篇系列，如果有新的内容我会继续更新。废话不多说，事实上基于Python的脚本下载，可能还是有很多小伙伴们不是很能get。毕竟也是门编程语言，就像下图。</p><p><img src="http://pbl6hpz34.bkt.clouddn.com/MODISPython.gif" alt=""></p><p>为此，为了方便大家使用这个脚本下载，我用pyinstaller对NASA官方提供的官方下载脚本做了封装，变成了可以在Windows上运行的exe。盗用了下nasa的图标（后面有空我会顺带来介绍下pyinstaller）。</p><p><img src="http://pbl6hpz34.bkt.clouddn.com/QQ%E6%88%AA%E5%9B%BE20180518145437.png" alt=""></p><p>这样子，无需python环境也可以运行程序。如果是win10，会有传统的CMD和Powershell两个窗口，按住shift右击可以打开的是Powershell，如果是win7的话，就是CMD窗口，这里都讲述下怎么使用。</p><p><img src="http://pbl6hpz34.bkt.clouddn.com/QQ%E6%88%AA%E5%9B%BE20180518145648.png" alt=""></p><p>打开Powershell窗口之后，在窗口上输入如下命令。即如图所示。其余的命令行跟上一篇教程提到的一样。这里就不赘述了。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">.\nasa.exe -h</div></pre></td></tr></table></figure><p><img src="http://pbl6hpz34.bkt.clouddn.com/QQ%E6%88%AA%E5%9B%BE20180518145912.png" alt=""></p><p>win10（包括win7）如果打开CMD窗口。通常需要先定位到这个exe所在路径（F：/MODISDownload）。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">cd DIR(eg. F:/MODISDownload)</div><div class="line">F:</div></pre></td></tr></table></figure><p>这样就定位到了exe所在路径。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">nasa.exe -h</div><div class="line">nasa -h</div></pre></td></tr></table></figure><p>在CMD中上述两个语句都可以，都是查询帮助语句。下载的语句可以见上文。</p><p><img src="http://pbl6hpz34.bkt.clouddn.com/QQ%E6%88%AA%E5%9B%BE20180518151436.png" alt=""></p><p>如果需要这个exe，可以在下面的百度网盘链接下载。</p><p><a href="https://pan.baidu.com/s/1BajMxbUrweaihyidsrS5Rw" target="_blank" rel="external">nasa.exe</a></p><h1 id="2-基于浏览器模拟登陆下载与d3ltool开发"><a href="#2-基于浏览器模拟登陆下载与D3LTool开发" class="headerlink" title="2 基于浏览器模拟登陆下载与D3LTool开发"></a>2 基于浏览器模拟登陆下载与D3LTool开发</h1><p>当然对于我封装的这个exe，依旧是个基于命令行的程序，可能大家还是不甚喜爱。基于这个原因，我最近花了一小点时间，开发了一个小的GUI软件，我把它称为D3L Tool of NASA Satellite。主要功能就是针对LAADS系列的卫星影像的下载。</p><p>软件整体界面如下：</p><p><img src="http://pbl6hpz34.bkt.clouddn.com/QQ%E6%88%AA%E5%9B%BE20180518152412.png" alt=""></p><p>主要功能就是两个下载，一个是使用NASA脚本下载，一个是使用谷歌浏览器下载。NASA脚本下载功能的原理其实就是调用了上面的nasa.exe下载。你只需要填入所需要的数据url地址，下载路径以及你的token再点击下载即可。相比于命令行可能更友好些吧。而使用谷歌浏览器下载的方式，是我自己想到的批量下载方式（前面的博客也有提到），其实就是通过selenium这个自动化测试的神器（后面有空也会聊一聊这个东西），打开浏览器，模拟登陆NASA Earthdata账户，然后自动下载所有数据。所需要填入的就是用户名，密码，订单号和下载路径。但是由于谷歌浏览器和selenium的一些问题，下载路径在软件里面修改是无效的，必须得从你电脑上的谷歌浏览器的设置里进行修改。才能让所有下载的卫星影像数据存储到制定路径里。否则就是默认的谷歌浏览器下载路径。</p><p>具体的功能我就不详细介绍了，我已经在建立了这个软件的一个官方网站，具体的使用教程和软件下载链接都在下面的官网里。</p><p><a href="https://giserdaishaoqing.github.io/D3LTool/">D3L Tool of NASA Satellite</a></p><p>也提供了多个版本的下载（当前仅支持Windows上的版本）。</p><p><img src="http://pbl6hpz34.bkt.clouddn.com/QQ%E6%88%AA%E5%9B%BE20180518153116.png" alt=""></p><p>如果有什么问题欢迎在github上提交issues或者邮件联系我，如果你觉得不错的话，也欢迎star。</p><p>最后附上两张软件下载中的截图。</p><p><img src="http://pbl6hpz34.bkt.clouddn.com/download.png" alt=""></p><p><img src="http://pbl6hpz34.bkt.clouddn.com/downloadnasa.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;接上文，由于NASA官方弃用了FTP改用HTTPS服务，所以关于MODIS数据的下载方式有所改变。完整系列博客可以参照以下链接。本篇主要介绍的是我自己写的一个下载方式，以及我为了方便大家下载开发的一个带图形界面的下载工具。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://giserdaishaoqing.github.io/2017/04/13/MODIS%E6%95%B0%E6%8D%AE%E7%9A%84%E7%AE%80%E4%BB%8B%E5%92%8C%E4%B8%8B%E8%BD%BD%EF%BC%88%E4%B8%80%EF%BC%89%E2%80%94%E2%80%94MODIS%E6%95%B0%E6%8D%AE%E7%AE%80%E4%BB%8B/&quot;&gt;MODIS数据的简介和下载（一）——MODIS数据简介&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://giserdaishaoqing.github.io/2017/04/14/MODIS%E6%95%B0%E6%8D%AE%E7%9A%84%E7%AE%80%E4%BB%8B%E5%92%8C%E4%B8%8B%E8%BD%BD%EF%BC%88%E4%BA%8C%EF%BC%89%E2%80%94%E2%80%94MODIS%E6%95%B0%E6%8D%AE%E4%B8%8B%E8%BD%BD%E6%96%B9%E5%BC%8F%EF%BC%88FTP%EF%BC%89/&quot;&gt;MODIS数据的简介和下载（二）——MODIS数据下载方式（FTP）&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://giserdaishaoqing.github.io/2017/04/15/MODIS%E6%95%B0%E6%8D%AE%E7%9A%84%E7%AE%80%E4%BB%8B%E5%92%8C%E4%B8%8B%E8%BD%BD%EF%BC%88%E4%B8%89%EF%BC%89%E2%80%94%E2%80%94MODIS%E6%95%B0%E6%8D%AE%E4%B8%8B%E8%BD%BD%E6%96%B9%E5%BC%8F%EF%BC%88%E5%9F%BA%E4%BA%8EMODIS%20Web%20Service%EF%BC%89/&quot;&gt;MODIS数据的简介和下载（三）——MODIS数据下载方式（基于MODIS Web Service）&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://giserdaishaoqing.github.io/2018/01/18/MODIS%E6%95%B0%E6%8D%AE%E7%9A%84%E7%AE%80%E4%BB%8B%E5%92%8C%E4%B8%8B%E8%BD%BD%EF%BC%88%E7%95%AA%E5%A4%96%E7%AF%87%EF%BC%89%E2%80%94%E2%80%94MODIS%20Web%20Service%E7%9A%84Python%E5%AE%A2%E6%88%B7%E7%AB%AF%E5%BA%94%E7%94%A8/&quot;&gt;MODIS数据的简介和下载（番外篇）——MODIS Web Service的Python客户端应用&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://giserdaishaoqing.github.io/2018/04/22/MODIS%E6%95%B0%E6%8D%AE%E7%9A%84%E7%AE%80%E4%BB%8B%E5%92%8C%E4%B8%8B%E8%BD%BD%EF%BC%88%E5%9B%9B%EF%BC%89%E2%80%94%E2%80%94HTTPS%E6%9C%8D%E5%8A%A1%E4%B8%8B%E8%BD%BD%E8%AF%B4%E6%98%8E/&quot;&gt;MODIS数据的简介和下载（四）——HTTPS服务下载说明&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://giserdaishaoqing.github.io/2018/04/23/MODIS%E6%95%B0%E6%8D%AE%E7%9A%84%E7%AE%80%E4%BB%8B%E5%92%8C%E4%B8%8B%E8%BD%BD%EF%BC%88%E4%BA%94%EF%BC%89%E2%80%94%E2%80%94%E5%BA%94%E7%94%A8%E5%AF%86%E9%92%A5%E7%9A%84Python%E8%84%9A%E6%9C%AC%E4%B8%8B%E8%BD%BD/&quot;&gt;MODIS数据的简介和下载（五）——应用密钥的Python脚本下载&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="RS" scheme="https://giserdaishaoqing.github.io/categories/RS/"/>
    
    
      <category term="MODIS" scheme="https://giserdaishaoqing.github.io/tags/MODIS/"/>
    
      <category term="Python" scheme="https://giserdaishaoqing.github.io/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>MODIS数据的简介和下载（五）——应用密钥的Python脚本下载</title>
    <link href="https://giserdaishaoqing.github.io/2018/04/23/MODIS%E6%95%B0%E6%8D%AE%E7%9A%84%E7%AE%80%E4%BB%8B%E5%92%8C%E4%B8%8B%E8%BD%BD%EF%BC%88%E4%BA%94%EF%BC%89%E2%80%94%E2%80%94%E5%BA%94%E7%94%A8%E5%AF%86%E9%92%A5%E7%9A%84Python%E8%84%9A%E6%9C%AC%E4%B8%8B%E8%BD%BD/"/>
    <id>https://giserdaishaoqing.github.io/2018/04/23/MODIS数据的简介和下载（五）——应用密钥的Python脚本下载/</id>
    <published>2018-04-22T16:00:00.000Z</published>
    <updated>2018-07-10T01:17:05.839Z</updated>
    
    <content type="html"><![CDATA[<script src="\assets\js\APlayer.min.js"> </script><p>接上文，由于NASA官方弃用了FTP改用HTTPS服务，所以关于MODIS数据的下载方式有所改变。完整系列博客可以参照以下链接。本篇主要接着上一篇没有讲完的应用密钥的脚本下载介绍。</p><p><a href="https://giserdaishaoqing.github.io/2017/04/13/MODIS%E6%95%B0%E6%8D%AE%E7%9A%84%E7%AE%80%E4%BB%8B%E5%92%8C%E4%B8%8B%E8%BD%BD%EF%BC%88%E4%B8%80%EF%BC%89%E2%80%94%E2%80%94MODIS%E6%95%B0%E6%8D%AE%E7%AE%80%E4%BB%8B/">MODIS数据的简介和下载（一）——MODIS数据简介</a></p><p><a href="https://giserdaishaoqing.github.io/2017/04/14/MODIS%E6%95%B0%E6%8D%AE%E7%9A%84%E7%AE%80%E4%BB%8B%E5%92%8C%E4%B8%8B%E8%BD%BD%EF%BC%88%E4%BA%8C%EF%BC%89%E2%80%94%E2%80%94MODIS%E6%95%B0%E6%8D%AE%E4%B8%8B%E8%BD%BD%E6%96%B9%E5%BC%8F%EF%BC%88FTP%EF%BC%89/">MODIS数据的简介和下载（二）——MODIS数据下载方式（FTP）</a></p><p><a href="https://giserdaishaoqing.github.io/2017/04/15/MODIS%E6%95%B0%E6%8D%AE%E7%9A%84%E7%AE%80%E4%BB%8B%E5%92%8C%E4%B8%8B%E8%BD%BD%EF%BC%88%E4%B8%89%EF%BC%89%E2%80%94%E2%80%94MODIS%E6%95%B0%E6%8D%AE%E4%B8%8B%E8%BD%BD%E6%96%B9%E5%BC%8F%EF%BC%88%E5%9F%BA%E4%BA%8EMODIS%20Web%20Service%EF%BC%89/">MODIS数据的简介和下载（三）——MODIS数据下载方式（基于MODIS Web Service）</a></p><p><a href="https://giserdaishaoqing.github.io/2018/01/18/MODIS%E6%95%B0%E6%8D%AE%E7%9A%84%E7%AE%80%E4%BB%8B%E5%92%8C%E4%B8%8B%E8%BD%BD%EF%BC%88%E7%95%AA%E5%A4%96%E7%AF%87%EF%BC%89%E2%80%94%E2%80%94MODIS%20Web%20Service%E7%9A%84Python%E5%AE%A2%E6%88%B7%E7%AB%AF%E5%BA%94%E7%94%A8/">MODIS数据的简介和下载（番外篇）——MODIS Web Service的Python客户端应用</a></p><p><a href="https://giserdaishaoqing.github.io/2018/04/22/MODIS%E6%95%B0%E6%8D%AE%E7%9A%84%E7%AE%80%E4%BB%8B%E5%92%8C%E4%B8%8B%E8%BD%BD%EF%BC%88%E5%9B%9B%EF%BC%89%E2%80%94%E2%80%94HTTPS%E6%9C%8D%E5%8A%A1%E4%B8%8B%E8%BD%BD%E8%AF%B4%E6%98%8E/">MODIS数据的简介和下载（四）——HTTPS服务下载说明</a><br><a id="more"></a> </p><h1 id="1-官方教程与说明"><a href="#1-官方教程与说明" class="headerlink" title="1 官方教程与说明"></a>1 官方教程与说明</h1><p><a href="https://ladsweb.modaps.eosdis.nasa.gov/tools-and-services/data-download-scripts/#requesting" target="_blank" rel="external">LAADS Data Download Scripts</a></p><p>接着上文的部分往下，上一篇博客已经讲了一小部分应用密钥。本篇主要针对以下部分介绍（红框部分）。</p><p><img src="http://pbl6hpz34.bkt.clouddn.com/QQ%E6%88%AA%E5%9B%BE20180423143729.png" alt=""></p><h2 id="1-应用密钥"><a href="#1-应用密钥" class="headerlink" title="1 应用密钥"></a>1 应用密钥</h2><h3 id="1-申请一个应用密钥"><a href="#1-申请一个应用密钥" class="headerlink" title="1 申请一个应用密钥"></a>1 申请一个应用密钥</h3><p>任何注册了Earthdata账户(<a href="https://urs.earthdata.nasa.gov/profile" target="_blank" rel="external">注册链接</a>)的人都可以申请应用密钥。通过以下步骤就可以申请一个应用密钥。</p><p>1.首先转到对应的页面：<a href="https://ladsweb.modaps.eosdis.nasa.gov/" target="_blank" rel="external">LAADS DAAC</a>，登陆Earthdata。<br>2.接着点击Profile→App Keys（见截图）。<br>3.通过输入你对keys的描述并且点击 “Create New App Key”按钮创建一个新的应用密钥。</p><p><img src="http://pbl6hpz34.bkt.clouddn.com/QQ%E6%88%AA%E5%9B%BE20180423144317.png" alt=""></p><p><img src="http://pbl6hpz34.bkt.clouddn.com/QQ%E6%88%AA%E5%9B%BE20180423144856.png" alt=""></p><p><img src="http://pbl6hpz34.bkt.clouddn.com/QQ%E6%88%AA%E5%9B%BE20180423144955.png" alt=""></p><p>当然如果以前你就有应用密钥，但是你忘记了，那就按照如下的步骤操作：<br>1.登陆Earthdata（同上）。<br>2.接着点击Profile→App Keys（同上）。<br>3.复制你的密钥。</p><p>总的来说这个操作跟国内百度地图、高德地图API也没太大差别。</p><h3 id="2-我有一个应用密钥后应该怎么样呢"><a href="#2-我有一个应用密钥后，应该怎么样呢" class="headerlink" title="2 我有一个应用密钥后，应该怎么样呢?"></a>2 我有一个应用密钥后，应该怎么样呢?</h3><p>应用密钥可以通过HTTPS GET服务请求数据。关于HTTPS的GET和POST服务，可以看一下我找的几个帖子吧，对于做过爬虫，调用过API的人应该不陌生。</p><p><a href="http://www.w3school.com.cn/tags/html_ref_httpmethods.asp" target="_blank" rel="external">HTTP 方法：GET 对比 POST</a><br><a href="https://www.zhihu.com/question/28586791" target="_blank" rel="external">知乎：get和post区别？</a></p><p>官方给了个样例，是用“curl”命令行工具来创建带请求的URL。</p><p><a href="https://ladsweb.modaps.eosdis.nasa.gov/PATH_TO_MY_FILE" target="_blank" rel="external">https://ladsweb.modaps.eosdis.nasa.gov/PATH_TO_MY_FILE</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">curl -v -H &apos;Authorization: Bearer MY_APP_KEY&apos; &apos;https://ladsweb.modaps.eosdis.nasa.gov/PATH_TO_MY_FILE&apos; &gt; result</div></pre></td></tr></table></figure><p>-v和-H属于附加的设置命令。</p><p>curl是个适用于所有操作系统的命令行工具。<a href="https://baike.baidu.com/item/curl/10098606?fr=aladdin" target="_blank" rel="external">curl简介</a>，也就是说通过curl可以下载对应订单的数据。</p><p>它给出了使用这个方式下载的一些要点：</p><p>1.所有的字符串都很重要，包括破折号、冒号和引号；<br>2.将’MY_APP_KEY’替换成你的应用密钥；<br>3.把“PATH_TO_MY_FILE”替换成你所需要的文件的路径。<br>4.通常LAADS DAAC的文件路径像下面的形式：</p><p>archive/allData/COLLECTION/PRODUCT/YEAR/DAY_OF_YEAR/FILENAME </p><p>这里给出一个URL的示例：</p><p><a href="https://ladsweb.modaps.eosdis.nasa.gov/archive/allData/6/MOD02QKM/2007/018/MOD02QKM.A2007018.0105.006.2014227230926.hdf" target="_blank" rel="external">https://ladsweb.modaps.eosdis.nasa.gov/archive/allData/6/MOD02QKM/2007/018/MOD02QKM.A2007018.0105.006.2014227230926.hdf</a></p><p>在发送请求之后会返回给你一个2007年第18天MODIS Terra250m的大气顶层反射率产品。</p><p>笔者常用系统是Ubuntu和Windows10，这里就演示下如何用curl下载数据吧(以Ubuntu为例）。以给出的URL为样例。</p><p><a href="https://curl.haxx.se/download.html" target="_blank" rel="external">curl官网</a></p><p>Ubuntu上可以直接用apt-get install命令安装curl。网上有帖子，这里不细述了。接着按照上面所说的改写命令行，如果不要“&gt; result”，是按照原来的文件名下载。</p><p><img src="http://pbl6hpz34.bkt.clouddn.com/QQ%E6%88%AA%E5%9B%BE20180423165311.png" alt=""></p><p><img src="http://pbl6hpz34.bkt.clouddn.com/QQ%E6%88%AA%E5%9B%BE20180423165322.png" alt=""></p><p>下载中。</p><p><img src="http://pbl6hpz34.bkt.clouddn.com/QQ%E6%88%AA%E5%9B%BE20180423165340.png" alt=""></p><p><img src="http://pbl6hpz34.bkt.clouddn.com/QQ%E6%88%AA%E5%9B%BE20180423165353.png" alt=""></p><p>结果数据。</p><p><img src="http://pbl6hpz34.bkt.clouddn.com/QQ%E6%88%AA%E5%9B%BE20180423165401.png" alt=""></p><p>Windows下的尝试不是很愉快。当然curl也不是主要下载方式，所以我就不继续探索了，如果后面有机会再来说这个吧。</p><h2 id="2-自动化"><a href="#2-自动化" class="headerlink" title="2 自动化"></a>2 自动化</h2><p>如果你需要的数据是单个文件，并且你知道它位于LAADS数据存档的路径，那么点击并下载它是很简单的。如果你需要下载的文件非常多（比如上个月整个月的VIIRS数据），你可能更愿意利用脚本来下载。因此这里给出了一些代码的示例：Shell脚本、Perl和Python版的。<br>两条警告：1.不要把全部数据下到你的硬盘。2.尽可能在你的脚本里避免错误，以防下载过多导致IP被封。</p><h2 id="3-代码示例"><a href="#3-代码示例" class="headerlink" title="3 代码示例"></a>3 代码示例</h2><p>大多数语言都可以进行HTTPS通信，下面有些样例。使用方式是点击“下载源代码”以下载或复制代码并将其粘贴到反映语言的文件中（Shell脚本为.sh，Perl为.p1.，Python为.py）。 确保为文件设置了执行权限。 最后，打开终端或使用您的首选运行时执行文件。</p><p>示例：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">perl laads-data-download.pl</div></pre></td></tr></table></figure><p>Perl我不是特别懂，本篇主要介绍Python脚本，Shell脚本也会提一下。</p><h1 id="2-使用python脚本下载"><a href="#2-使用Python脚本下载" class="headerlink" title="2 使用Python脚本下载"></a>2 使用Python脚本下载</h1><p>首先下载下来laads-data-download.py，然后放到一个文件夹里，接着打开cmd，输入如下的命令。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">python laads-data-download.py -h</div></pre></td></tr></table></figure><p><img src="http://pbl6hpz34.bkt.clouddn.com/QQ%E6%88%AA%E5%9B%BE20180423203851.png" alt=""></p><p>这句代码的意思就是，-h是指help，也就是说关于这个Python函数的使用说明。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">laads-data-download.py [-h] -s URL -d DIR -t TOK</div></pre></td></tr></table></figure><p>简单地说这个函数有几个参数需要传进去，-s就是下载源，URL就是你要下载的数据的URL路径，-d就是下载路径，也就是数据应该下载到哪个路径里，-t就是token，令牌，其实就是你的app keys。也就是说完整的运行代码应该是如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">python laads-data-download.py -s https://ladsweb.modaps.eosdis.nasa.gov/archive/orders/YOUR ORDERS ID -d Paht TO MY FILE -t MY_APP_KEYS</div></pre></td></tr></table></figure><p><img src="http://pbl6hpz34.bkt.clouddn.com/QQ%E6%88%AA%E5%9B%BE20180423204449.png" alt=""></p><p>第一个红框就是你订购数据的ID（如下图）。</p><p><img src="http://pbl6hpz34.bkt.clouddn.com/QQ%E6%88%AA%E5%9B%BE20180423204534.png" alt=""></p><p>第二个红框是你数据存放在电脑里的路径。</p><p>第三个红框是你的app keys。</p><p>接下来就只需要等待数据下载完即可。</p><p>顺带提下Shell脚本，也是下载laads-data-download.sh文件。事实上语法都相同。但是Shell脚本呢还需要依赖‘jq’来下载。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">./laads-data-download.sh [-h] -s URL -d PATH -t TOKEN</div></pre></td></tr></table></figure><p><img src="http://pbl6hpz34.bkt.clouddn.com/QQ%E6%88%AA%E5%9B%BE20180423204935.png" alt=""></p><p>‘jq’的安装用命令即可。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">apt-get install jq</div></pre></td></tr></table></figure><p><img src="http://pbl6hpz34.bkt.clouddn.com/QQ%E6%88%AA%E5%9B%BE20180423205035.png" alt=""></p><p>等待下载结束。</p><p>所以事实上，Python脚本下载其实并不难。只需要替换对应的URL、路径、App Keys即可。其他的也如此，如果你懂了就可以开始尝试了。当然笔者之前还用过另一种方式来进行批量下载。接下来可能会就这个部分也来介绍一下。另外一点就目前笔者测试结果，感觉Shell脚本和Ubuntu下载速度要明显快于Python脚本和Windows。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;接上文，由于NASA官方弃用了FTP改用HTTPS服务，所以关于MODIS数据的下载方式有所改变。完整系列博客可以参照以下链接。本篇主要接着上一篇没有讲完的应用密钥的脚本下载介绍。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://giserdaishaoqing.github.io/2017/04/13/MODIS%E6%95%B0%E6%8D%AE%E7%9A%84%E7%AE%80%E4%BB%8B%E5%92%8C%E4%B8%8B%E8%BD%BD%EF%BC%88%E4%B8%80%EF%BC%89%E2%80%94%E2%80%94MODIS%E6%95%B0%E6%8D%AE%E7%AE%80%E4%BB%8B/&quot;&gt;MODIS数据的简介和下载（一）——MODIS数据简介&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://giserdaishaoqing.github.io/2017/04/14/MODIS%E6%95%B0%E6%8D%AE%E7%9A%84%E7%AE%80%E4%BB%8B%E5%92%8C%E4%B8%8B%E8%BD%BD%EF%BC%88%E4%BA%8C%EF%BC%89%E2%80%94%E2%80%94MODIS%E6%95%B0%E6%8D%AE%E4%B8%8B%E8%BD%BD%E6%96%B9%E5%BC%8F%EF%BC%88FTP%EF%BC%89/&quot;&gt;MODIS数据的简介和下载（二）——MODIS数据下载方式（FTP）&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://giserdaishaoqing.github.io/2017/04/15/MODIS%E6%95%B0%E6%8D%AE%E7%9A%84%E7%AE%80%E4%BB%8B%E5%92%8C%E4%B8%8B%E8%BD%BD%EF%BC%88%E4%B8%89%EF%BC%89%E2%80%94%E2%80%94MODIS%E6%95%B0%E6%8D%AE%E4%B8%8B%E8%BD%BD%E6%96%B9%E5%BC%8F%EF%BC%88%E5%9F%BA%E4%BA%8EMODIS%20Web%20Service%EF%BC%89/&quot;&gt;MODIS数据的简介和下载（三）——MODIS数据下载方式（基于MODIS Web Service）&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://giserdaishaoqing.github.io/2018/01/18/MODIS%E6%95%B0%E6%8D%AE%E7%9A%84%E7%AE%80%E4%BB%8B%E5%92%8C%E4%B8%8B%E8%BD%BD%EF%BC%88%E7%95%AA%E5%A4%96%E7%AF%87%EF%BC%89%E2%80%94%E2%80%94MODIS%20Web%20Service%E7%9A%84Python%E5%AE%A2%E6%88%B7%E7%AB%AF%E5%BA%94%E7%94%A8/&quot;&gt;MODIS数据的简介和下载（番外篇）——MODIS Web Service的Python客户端应用&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://giserdaishaoqing.github.io/2018/04/22/MODIS%E6%95%B0%E6%8D%AE%E7%9A%84%E7%AE%80%E4%BB%8B%E5%92%8C%E4%B8%8B%E8%BD%BD%EF%BC%88%E5%9B%9B%EF%BC%89%E2%80%94%E2%80%94HTTPS%E6%9C%8D%E5%8A%A1%E4%B8%8B%E8%BD%BD%E8%AF%B4%E6%98%8E/&quot;&gt;MODIS数据的简介和下载（四）——HTTPS服务下载说明&lt;/a&gt;&lt;br&gt;
    
    </summary>
    
      <category term="RS" scheme="https://giserdaishaoqing.github.io/categories/RS/"/>
    
    
      <category term="MODIS" scheme="https://giserdaishaoqing.github.io/tags/MODIS/"/>
    
      <category term="Python" scheme="https://giserdaishaoqing.github.io/tags/Python/"/>
    
      <category term="Shell" scheme="https://giserdaishaoqing.github.io/tags/Shell/"/>
    
  </entry>
  
  <entry>
    <title>MODIS数据的简介和下载（四）——HTTPS服务下载说明</title>
    <link href="https://giserdaishaoqing.github.io/2018/04/22/MODIS%E6%95%B0%E6%8D%AE%E7%9A%84%E7%AE%80%E4%BB%8B%E5%92%8C%E4%B8%8B%E8%BD%BD%EF%BC%88%E5%9B%9B%EF%BC%89%E2%80%94%E2%80%94HTTPS%E6%9C%8D%E5%8A%A1%E4%B8%8B%E8%BD%BD%E8%AF%B4%E6%98%8E/"/>
    <id>https://giserdaishaoqing.github.io/2018/04/22/MODIS数据的简介和下载（四）——HTTPS服务下载说明/</id>
    <published>2018-04-21T16:00:00.000Z</published>
    <updated>2018-07-10T01:11:28.499Z</updated>
    
    <content type="html"><![CDATA[<script src="\assets\js\APlayer.min.js"> </script><p>由于NASA官方MODIS服务的变化和网站的改版。所以重新来介绍下MODIS数据新的下载方式。至于数据的简介和Web Service的，不清楚的小伙伴可以去点击前面的文章回顾下（其中“MODIS数据的简介和下载（二）”一文教程由于NASA官网关闭FTP服务器的原因在最后提交数据的部分有所变化，详情见本文）。</p><p><a href="https://giserdaishaoqing.github.io/2017/04/13/MODIS%E6%95%B0%E6%8D%AE%E7%9A%84%E7%AE%80%E4%BB%8B%E5%92%8C%E4%B8%8B%E8%BD%BD%EF%BC%88%E4%B8%80%EF%BC%89%E2%80%94%E2%80%94MODIS%E6%95%B0%E6%8D%AE%E7%AE%80%E4%BB%8B/">MODIS数据的简介和下载（一）——MODIS数据简介</a></p><p><a href="https://giserdaishaoqing.github.io/2017/04/14/MODIS%E6%95%B0%E6%8D%AE%E7%9A%84%E7%AE%80%E4%BB%8B%E5%92%8C%E4%B8%8B%E8%BD%BD%EF%BC%88%E4%BA%8C%EF%BC%89%E2%80%94%E2%80%94MODIS%E6%95%B0%E6%8D%AE%E4%B8%8B%E8%BD%BD%E6%96%B9%E5%BC%8F%EF%BC%88FTP%EF%BC%89/">MODIS数据的简介和下载（二）——MODIS数据下载方式（FTP）</a></p><p><a href="https://giserdaishaoqing.github.io/2017/04/15/MODIS%E6%95%B0%E6%8D%AE%E7%9A%84%E7%AE%80%E4%BB%8B%E5%92%8C%E4%B8%8B%E8%BD%BD%EF%BC%88%E4%B8%89%EF%BC%89%E2%80%94%E2%80%94MODIS%E6%95%B0%E6%8D%AE%E4%B8%8B%E8%BD%BD%E6%96%B9%E5%BC%8F%EF%BC%88%E5%9F%BA%E4%BA%8EMODIS%20Web%20Service%EF%BC%89/">MODIS数据的简介和下载（三）——MODIS数据下载方式（基于MODIS Web Service）</a></p><p><a href="https://giserdaishaoqing.github.io/2018/01/18/MODIS%E6%95%B0%E6%8D%AE%E7%9A%84%E7%AE%80%E4%BB%8B%E5%92%8C%E4%B8%8B%E8%BD%BD%EF%BC%88%E7%95%AA%E5%A4%96%E7%AF%87%EF%BC%89%E2%80%94%E2%80%94MODIS%20Web%20Service%E7%9A%84Python%E5%AE%A2%E6%88%B7%E7%AB%AF%E5%BA%94%E7%94%A8/">MODIS数据的简介和下载（番外篇）——MODIS Web Service的Python客户端应用</a></p><p>注册了NASA官网earthdata账户的小伙伴们应该在最近都收到了NASA官网关于关闭FTP服务器的邮件，之前也有评论区的小伙伴来询问相关。今天就来介绍新的下载方式。<br><a id="more"></a> </p><h1 id="1-nasa官方邮件通知"><a href="#1-NASA官方邮件通知" class="headerlink" title="1 NASA官方邮件通知"></a>1 NASA官方邮件通知</h1><p><img src="http://pbl6hpz34.bkt.clouddn.com/QQ%E6%88%AA%E5%9B%BE20180422095026.png" alt=""></p><p>提供的原文链接如下 。</p><p><a href="https://ladsweb.modaps.eosdis.nasa.gov/tools-and-services/data-download-scripts/" target="_blank" rel="external">LAADS Data Download Scripts</a></p><p>这个链接的目录如下：</p><p><img src="http://pbl6hpz34.bkt.clouddn.com/QQ%E6%88%AA%E5%9B%BE20180422095818.png" alt=""></p><p>也就是说官方提供了下载的脚本，包括Linux Shell脚本、Perl脚本和Python脚本。此时的内心OS大概是这样吧。</p><p><img src="http://pbl6hpz34.bkt.clouddn.com/MODISPython.gif" alt=""></p><p>当然其实我也蛮喜欢Linux Shell脚本的。</p><p>言归正传，来介绍下这个说明的内容。</p><h1 id="2-https服务获取数据说明"><a href="#2-HTTPS服务获取数据说明" class="headerlink" title="2 HTTPS服务获取数据说明"></a>2 HTTPS服务获取数据说明</h1><h2 id="1-使用laads-daac应用密钥下载文件"><a href="#1-使用LAADS-DAAC应用密钥下载文件" class="headerlink" title="1 使用LAADS DAAC应用密钥下载文件"></a>1 使用LAADS DAAC应用密钥下载文件</h2><p>这个部分的内容主要是提了下背景原因，现在搞这个密钥的原因主要是，MODIS和VIIRS团队以及母公司都想追踪谁使用了相关数据。使用在Earthdata的账户里采用了Earthdata.Profile以及一些其他服务，这也就是说，在访问一些受限资源（Sentinel-3），必须先授权，并且登陆之后才能识别你的身份才能下载。</p><p>其实这个部分我感觉有Earthdata账户的很简单。</p><p><img src="http://pbl6hpz34.bkt.clouddn.com/QQ%E6%88%AA%E5%9B%BE20180422102304.png" alt=""></p><p>登陆账户后，点击Edit Profile。然后页面往下。这两个数据的简介我就不提了。勾选即可完成。</p><p><img src="http://pbl6hpz34.bkt.clouddn.com/QQ%E6%88%AA%E5%9B%BE20180422102406.png" alt=""></p><p><img src="http://pbl6hpz34.bkt.clouddn.com/QQ%E6%88%AA%E5%9B%BE20180422102412.png" alt=""></p><p>然后点击Save Profile。</p><p><img src="http://pbl6hpz34.bkt.clouddn.com/QQ%E6%88%AA%E5%9B%BE20180422102728.png" alt=""></p><p>第一步就算完成了，当然还有提到刚刚那俩数据的授权，后面还会进一步介绍。</p><h2 id="2-弃用ftp"><a href="#2-弃用FTP" class="headerlink" title="2  弃用FTP"></a>2  弃用FTP</h2><p>这部分没啥干货，回顾了FTP的辉煌一生，然后果断弃用（我想起那天夕阳下的奔跑，那是我逝去的青春）。</p><h2 id="3-通过http下载"><a href="#3-通过HTTP下载" class="headerlink" title="3 通过HTTP下载"></a>3 通过HTTP下载</h2><p>这部分干货也没啥，介绍了HTTP和HTTPS，然后说明所有数据都支持HTTPS服务下载。</p><h2 id="4-earthdata配置文件"><a href="#4-Earthdata配置文件" class="headerlink" title="4 Earthdata配置文件"></a>4 Earthdata配置文件</h2><p>需要有Earthdata Profile才能下载，看了下在注册Earthdata的时候其实就应该配置过了。</p><h2 id="5-授权"><a href="#5-授权" class="headerlink" title="5 授权"></a>5 授权</h2><p>创建Earthdata的配置文件后，你就可以请求需要下载的数据了，不同数据授权方式不同。这边给了一份表格。其实就分两类（1.MERIS和Sentinel-3；2.除了这俩之外的）。</p><table><thead><tr><th>资源</th><th style="text-align:center">说明</th></tr></thead><tbody><tr><td>MERIS或者Sentinel-3</td><td style="text-align:center">在这两个链接（<a href="https://ladsweb.modaps.eosdis.nasa.gov/archive/allData/490/?process=ftpAsHttp&amp;path=allData%2f490" target="_blank" rel="external">MERIS</a>和<a href="https://ladsweb.modaps.eosdis.nasa.gov/archive/allData/450/?process=ftpAsHttp&amp;path=allData%2f450" target="_blank" rel="external">Sentinel-3</a>）在点击勾选同意之后，跟着系统提示即可</td></tr><tr><td>其他数据</td><td style="text-align:center">根据项目理由和注册的邮件来申请资源</td></tr></tbody></table><p>这里点开MERIS和Sentinel-3的链接出现如下页面，随机点击一个数据，又跳出后面的页面。</p><p><img src="http://pbl6hpz34.bkt.clouddn.com/QQ%E6%88%AA%E5%9B%BE20180422105419.png" alt=""></p><p><img src="http://pbl6hpz34.bkt.clouddn.com/QQ%E6%88%AA%E5%9B%BE20180422105438.png" alt=""></p><p>接着点Aggree to。</p><p><img src="http://pbl6hpz34.bkt.clouddn.com/QQ%E6%88%AA%E5%9B%BE20180422170239.png" alt=""></p><p><img src="http://pbl6hpz34.bkt.clouddn.com/QQ%E6%88%AA%E5%9B%BE20180422170255.png" alt=""></p><p>接着显示。即有新的链接可以下载。</p><p><img src="http://pbl6hpz34.bkt.clouddn.com/QQ%E6%88%AA%E5%9B%BE20180422170613.png" alt=""></p><h2 id="6-应用密钥"><a href="#6-应用密钥" class="headerlink" title="6 应用密钥"></a>6 应用密钥</h2><p>这里说明了如果你只希望通过浏览器下载的用户只需登录即可，也就是说登陆完账户就可以下载了。如果你要用 脚本下载需要使用LAADS应用程序密钥才能正确授权。LAADS应用程序密钥是识别您身份呢的字符串标记。 应用程序获取HTTP GET请求。 查看下面的代码示例。</p><p>这部分的话，我打算放到下一篇来讲，因为内容可能会有点多。所以关于不懂脚本的同学也不必灰心，并非是前面所说的不懂Python就不会下数据了。通过浏览器的话，只需要登录账户即可下载数据。</p><h1 id="3-新版网站下载方式选择"><a href="#3-新版网站下载方式选择" class="headerlink" title="3 新版网站下载方式选择"></a>3 新版网站下载方式选择</h1><p>关于HTTPS服务下载，前面的步骤是一样的。具体的下载教程，请看”MODIS数据的简介和下载（二）——MODIS数据下载方式（FTP）“一文。链接在前面。唯一的差别是最后数据订单提交的时候。</p><p><img src="http://pbl6hpz34.bkt.clouddn.com/QQ%E6%88%AA%E5%9B%BE20180422194422.png" alt=""></p><p>选择Pull。</p><p><img src="http://pbl6hpz34.bkt.clouddn.com/QQ%E6%88%AA%E5%9B%BE20180422194500.png" alt=""></p><p>然后Submit Order。</p><p>稍等一会，可以在Post Orders找到你的订单。</p><p><img src="http://pbl6hpz34.bkt.clouddn.com/QQ%E6%88%AA%E5%9B%BE20180422194614.png" alt=""></p><p>点击你的订单就是这样子的。</p><p><img src="http://pbl6hpz34.bkt.clouddn.com/QQ%E6%88%AA%E5%9B%BE20180422204138.png" alt=""></p><p>接下来只需点击我画红框的部分（打码部分是订单号）。链接会跳转到一个页面（如果你点击无法访问的话，请稍等一会再重新点击）。</p><p><img src="http://pbl6hpz34.bkt.clouddn.com/QQ%E6%88%AA%E5%9B%BE20180422204241.png" alt=""></p><p>这就是你所提交的订单数据。接下来只需要鼠标点击数据即可下载。事实上，你不懂任何脚本也可以继续下载数据，只需要通过点击链接（像IDM这类下载工具可能也可以使用，我这里没有使用过）。当然如果你的数据非常多的话，一个一个点确实很头疼。而批量下载的话，就需要写点小代码了。关于官方脚本的下载以及如何批量下载，我会在后面继续发布。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;由于NASA官方MODIS服务的变化和网站的改版。所以重新来介绍下MODIS数据新的下载方式。至于数据的简介和Web Service的，不清楚的小伙伴可以去点击前面的文章回顾下（其中“MODIS数据的简介和下载（二）”一文教程由于NASA官网关闭FTP服务器的原因在最后提交数据的部分有所变化，详情见本文）。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://giserdaishaoqing.github.io/2017/04/13/MODIS%E6%95%B0%E6%8D%AE%E7%9A%84%E7%AE%80%E4%BB%8B%E5%92%8C%E4%B8%8B%E8%BD%BD%EF%BC%88%E4%B8%80%EF%BC%89%E2%80%94%E2%80%94MODIS%E6%95%B0%E6%8D%AE%E7%AE%80%E4%BB%8B/&quot;&gt;MODIS数据的简介和下载（一）——MODIS数据简介&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://giserdaishaoqing.github.io/2017/04/14/MODIS%E6%95%B0%E6%8D%AE%E7%9A%84%E7%AE%80%E4%BB%8B%E5%92%8C%E4%B8%8B%E8%BD%BD%EF%BC%88%E4%BA%8C%EF%BC%89%E2%80%94%E2%80%94MODIS%E6%95%B0%E6%8D%AE%E4%B8%8B%E8%BD%BD%E6%96%B9%E5%BC%8F%EF%BC%88FTP%EF%BC%89/&quot;&gt;MODIS数据的简介和下载（二）——MODIS数据下载方式（FTP）&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://giserdaishaoqing.github.io/2017/04/15/MODIS%E6%95%B0%E6%8D%AE%E7%9A%84%E7%AE%80%E4%BB%8B%E5%92%8C%E4%B8%8B%E8%BD%BD%EF%BC%88%E4%B8%89%EF%BC%89%E2%80%94%E2%80%94MODIS%E6%95%B0%E6%8D%AE%E4%B8%8B%E8%BD%BD%E6%96%B9%E5%BC%8F%EF%BC%88%E5%9F%BA%E4%BA%8EMODIS%20Web%20Service%EF%BC%89/&quot;&gt;MODIS数据的简介和下载（三）——MODIS数据下载方式（基于MODIS Web Service）&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://giserdaishaoqing.github.io/2018/01/18/MODIS%E6%95%B0%E6%8D%AE%E7%9A%84%E7%AE%80%E4%BB%8B%E5%92%8C%E4%B8%8B%E8%BD%BD%EF%BC%88%E7%95%AA%E5%A4%96%E7%AF%87%EF%BC%89%E2%80%94%E2%80%94MODIS%20Web%20Service%E7%9A%84Python%E5%AE%A2%E6%88%B7%E7%AB%AF%E5%BA%94%E7%94%A8/&quot;&gt;MODIS数据的简介和下载（番外篇）——MODIS Web Service的Python客户端应用&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;注册了NASA官网earthdata账户的小伙伴们应该在最近都收到了NASA官网关于关闭FTP服务器的邮件，之前也有评论区的小伙伴来询问相关。今天就来介绍新的下载方式。&lt;br&gt;
    
    </summary>
    
      <category term="RS" scheme="https://giserdaishaoqing.github.io/categories/RS/"/>
    
    
      <category term="MODIS" scheme="https://giserdaishaoqing.github.io/tags/MODIS/"/>
    
  </entry>
  
  <entry>
    <title>快速生成Github README.md的目录</title>
    <link href="https://giserdaishaoqing.github.io/2018/03/19/%E5%BF%AB%E9%80%9F%E7%94%9F%E6%88%90Github%20README.md%E7%9A%84%E7%9B%AE%E5%BD%95/"/>
    <id>https://giserdaishaoqing.github.io/2018/03/19/快速生成Github README.md的目录/</id>
    <published>2018-03-18T16:00:00.000Z</published>
    <updated>2018-07-10T00:51:19.002Z</updated>
    
    <content type="html"><![CDATA[<script src="\assets\js\APlayer.min.js"> </script><p>熟悉Github的同学可能知道创建一个Repo，通常都会生成一个README.md。好的README能增加代码的可阅读性。另外通常也可以将README作为开发文档。而这个README本身是遵循Markdown语法的，但是Markdown本身并没有绝对标准，Github的渲染方式与一些常用博客渲染方式不相同，导致在使用时有些麻烦。这里推荐一个Github上的教程。</p><p><a href="https://github.com/guodongxiaren/README/blob/master/README.md" target="_blank" rel="external">GFM教程</a></p><p><a href="http://blog.csdn.net/kaitiren/article/details/38513715" target="_blank" rel="external">GFM教程博客地址</a></p><p>事实上大部分和普通Markdown还是类似的，但是目录的语法差别蛮大，刚好对于笔者而言，最近需要在Github上文档上建立目录来使用，但是又不想写GFM的语法。这个时候刚好搜索到了一些可以用的开源代码。这里简单介绍一个目前使用的方法。<a id="more"></a></p><h1 id="1-github百度搜索结果"><a href="#1-Github-百度搜索结果" class="headerlink" title="1 Github+百度搜索结果"></a>1 Github+百度搜索结果</h1><p><img src="http://pbl6hpz34.bkt.clouddn.com/QQ%E6%88%AA%E5%9B%BE20180319200142.png" alt=""></p><p>事实上解决方案还蛮多的（Github大法好）。</p><p>当时还在百度上搜索了下，找到了这个方案。</p><p><a href="https://github.com/sk1418/ghtoc" target="_blank" rel="external">ghtoc Github地址（pyhon）</a></p><p><a href="https://www.v2ex.com/t/151106" target="_blank" rel="external">ghtoc博客</a></p><h1 id="2-解决方案gh-md-toc"><a href="#2-解决方案：gh-md-toc" class="headerlink" title="2 解决方案：gh-md-toc"></a>2 解决方案：gh-md-toc</h1><p>后面发现了gh-md-toc这个神器。</p><p><a href="https://github.com/ekalinin/github-markdown-toc" target="_blank" rel="external">gh-md-toc Github地址</a></p><p>但是这个东西在Mac和Linux很友好，windows似乎不那么友好。不过这里也给了windows的解决方案。</p><p><img src="http://pbl6hpz34.bkt.clouddn.com/QQ%E6%88%AA%E5%9B%BE20180319202424.png" alt=""></p><p>就是github-markdown-toc.go。</p><p><a href="https://github.com/ekalinin/github-markdown-toc.go" target="_blank" rel="external">github-markdown-toc.go Github地址</a></p><p>如果你有GO语言（又是你）的编译环境，可以尝试自己编译，如果没有，可以直接下载编译好的二进制文件。</p><p><a href="https://github.com/ekalinin/github-markdown-toc.go/releases" target="_blank" rel="external">二进制文件</a></p><p>下载下来之后，发现没有后缀名无法识别，实际上这是个exe文件，所以只需要暴力地在后面加上.exe就可以开始愉快使用了。</p><p>首先将README.md文档复制到gh-md-toc.exe的根目录下。</p><p>接着按住shift键同时右击。</p><p><img src="http://pbl6hpz34.bkt.clouddn.com/QQ%E6%88%AA%E5%9B%BE20180319202953.png" alt=""></p><p>打开Powershell窗口后，直接键入。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">./gh-md-toc.exe README.md</div></pre></td></tr></table></figure><p><img src="http://pbl6hpz34.bkt.clouddn.com/QQ%E6%88%AA%E5%9B%BE20180319203126.png" alt=""></p><p>接下来只需将这段话复制粘贴到README.md里面即可。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;熟悉Github的同学可能知道创建一个Repo，通常都会生成一个README.md。好的README能增加代码的可阅读性。另外通常也可以将README作为开发文档。而这个README本身是遵循Markdown语法的，但是Markdown本身并没有绝对标准，Github的渲染方式与一些常用博客渲染方式不相同，导致在使用时有些麻烦。这里推荐一个Github上的教程。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/guodongxiaren/README/blob/master/README.md&quot;&gt;GFM教程&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://blog.csdn.net/kaitiren/article/details/38513715&quot;&gt;GFM教程博客地址&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;事实上大部分和普通Markdown还是类似的，但是目录的语法差别蛮大，刚好对于笔者而言，最近需要在Github上文档上建立目录来使用，但是又不想写GFM的语法。这个时候刚好搜索到了一些可以用的开源代码。这里简单介绍一个目前使用的方法。
    
    </summary>
    
      <category term="Coding" scheme="https://giserdaishaoqing.github.io/categories/Coding/"/>
    
    
      <category term="Git" scheme="https://giserdaishaoqing.github.io/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>R语言高清图片输出设置</title>
    <link href="https://giserdaishaoqing.github.io/2018/03/14/R%E8%AF%AD%E8%A8%80%E9%AB%98%E6%B8%85%E5%9B%BE%E7%89%87%E8%BE%93%E5%87%BA%E8%AE%BE%E7%BD%AE/"/>
    <id>https://giserdaishaoqing.github.io/2018/03/14/R语言高清图片输出设置/</id>
    <published>2018-03-13T16:00:00.000Z</published>
    <updated>2018-07-10T00:48:12.145Z</updated>
    
    <content type="html"><![CDATA[<script src="\assets\js\APlayer.min.js"> </script><p>以ggplot2等包为基础的R语言可视化是科研人员非常喜爱的一个方式，不过我也在这个上遇到了些问题。就是导出高分辨率的图片之后，插入到word里，就显得模糊不清（压缩得非常厉害）。如果不压缩的话，word动辄100M以上。最近刚好有了一个解决方式，就来介绍下。<a id="more"></a></p><h2 id="解决方案思路rcorel-draw"><a href="#解决方案思路：R-Corel-Draw" class="headerlink" title="解决方案思路：R+Corel Draw"></a>解决方案思路：R+Corel Draw</h2><p>这也是某期刊图的修改要求，必须提供.cdr文件。当然测试后发现，.cdr输出的tif即使被压缩，也能很清晰。</p><p>这里谈谈怎么做。首先R目前是没法直接输出.cdr格式的文件的，根据网上的经验就是用emf这个格式，能够输出Corel Draw能读取的矢量文件，导入后再做些微调。</p><p>但是R输出emf没有像tiff和jpeg那样的语句，主要使用的是savePlot函数。</p><p>这里摘下R的帮助文档再来解释这个函数</p><p>Usage</p><p>savePlot(filename = “Rplot”,<br>         type = c(“wmf”, “emf”, “png”, “jpg”, “jpeg”, “bmp”,<br>                  “tif”, “tiff”, “ps”, “eps”, “pdf”),<br>         device = dev.cur(),<br>         restoreConsole = TRUE)</p><p>Arguments</p><p>filename<br>The filename under which to save the plot. Tilde-expansion (see path.expand is supported.</p><p>type<br>The type of plot, Windows metafile, PNG, JPEG, BMP (Windows bitmap format), TIFF, PostScript or PDF.</p><p>device<br>A device number of a windows device, by default the current device.</p><p>restoreConsole<br>See the ‘Details’ section of windows.</p><p>一个参数一个参数来解释吧。<br>filename：很好理解，就是你要输出的图片路径和名称，用字符串类型。如“C:/Rplot”。不必加后缀。<br>type：输出格式。<br>device：Windows设备的设备编号，默认为当前设备，这个参数。<br>restoreConsole：这个参数也是跟windows图形设备相关的。</p><p>实际使用时，后两个参数默认就可以。主要是针对前两个参数。</p><p>接下来用一个案例来展示下操作。使用的是R语言默认的mtcars数据。用plot绘图和ggplot2绘图各测试一遍。但是笔者就如网上所说在Rstudio中运行savePlot报错。</p><p><img src="http://pbl6hpz34.bkt.clouddn.com/QQ%E6%88%AA%E5%9B%BE20180314235637.png" alt=""></p><p>事实上这个语句只能在原生的Rgui中运行。因此将R代码存成脚本，在Rgui中直接用source调用写好的脚本即可。</p><p>plot只需直接绘图语句。而ggplot则需要多一句print语句，才能输出图片。</p><p>运行完后，打开corel draw，按下图进行操作。</p><p><img src="http://pbl6hpz34.bkt.clouddn.com/QQ%E6%88%AA%E5%9B%BE20180315001819.png" alt=""></p><p><img src="http://pbl6hpz34.bkt.clouddn.com/QQ%E6%88%AA%E5%9B%BE20180315001912.png" alt=""></p><p><img src="http://pbl6hpz34.bkt.clouddn.com/QQ%E6%88%AA%E5%9B%BE20180315002014.png" alt=""></p><p><img src="http://pbl6hpz34.bkt.clouddn.com/QQ%E6%88%AA%E5%9B%BE20180315002047.png" alt=""></p><p><img src="http://pbl6hpz34.bkt.clouddn.com/QQ%E6%88%AA%E5%9B%BE20180315002059.png" alt=""></p><p>这样就能把emf转变成全部可编辑的矢量了。</p><p>当然Rstudio也有个方法。就是使用复制到剪贴板的功能，然后粘贴到Corel Draw里面。</p><p><img src="http://pbl6hpz34.bkt.clouddn.com/QQ%E6%88%AA%E5%9B%BE20180315002722.png" alt=""></p><p><img src="http://pbl6hpz34.bkt.clouddn.com/QQ%E6%88%AA%E5%9B%BE20180315002815.png" alt=""></p><p>这就是将R导入到Corel Draw前期工作。相比与之前压缩得非常厉害的图片，我感觉Corel Draw输出的图片质量非常高。此外，后面搜索时，我也发现了R的一个包：<a href="https://mirrors.ustc.edu.cn/CRAN/web/packages/devEMF/devEMF.pdf" target="_blank" rel="external">devEMF: EMF Graphics Output Device</a>。可以输出emf，这样在Rstudio里也可以操作了。</p><p>参考博客：<br><a href="https://www.shengxin.ren/article/73" target="_blank" rel="external">R语言可以这么玩 |高质量图片这样导出！</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;以ggplot2等包为基础的R语言可视化是科研人员非常喜爱的一个方式，不过我也在这个上遇到了些问题。就是导出高分辨率的图片之后，插入到word里，就显得模糊不清（压缩得非常厉害）。如果不压缩的话，word动辄100M以上。最近刚好有了一个解决方式，就来介绍下。
    
    </summary>
    
      <category term="Paper" scheme="https://giserdaishaoqing.github.io/categories/Paper/"/>
    
    
      <category term="R" scheme="https://giserdaishaoqing.github.io/tags/R/"/>
    
  </entry>
  
  <entry>
    <title>天不生Tobler，万古GIS如长夜</title>
    <link href="https://giserdaishaoqing.github.io/2018/02/22/%E5%A4%A9%E4%B8%8D%E7%94%9FTobler%EF%BC%8C%E4%B8%87%E5%8F%A4GIS%E5%A6%82%E9%95%BF%E5%A4%9C/"/>
    <id>https://giserdaishaoqing.github.io/2018/02/22/天不生Tobler，万古GIS如长夜/</id>
    <published>2018-02-21T16:00:00.000Z</published>
    <updated>2018-07-10T00:44:47.735Z</updated>
    
    <content type="html"><![CDATA[<script src="\assets\js\APlayer.min.js"> </script><p>今日在QQ上惊闻Waldo Tobler老先生已于昨日过世，实乃地理学界的一大憾事，特地以此文表示深切的悼念。<a id="more"></a></p><h1 id="一"><a href="#（一）" class="headerlink" title="（一）"></a>（一）</h1><p>Waldo Tobler，生于1930年，圣塔芭芭拉加州大学（UniversityofCalifornia,SantaBarbara，简称UCSB，又常译为加州大学圣塔芭芭拉分校）退休教授，美籍瑞士地理学家，制图学家。下图的帅哥就是老爷子（文字介绍来自百度百科，图片来自维基百科）。</p><p><img src="http://pbl6hpz34.bkt.clouddn.com/250px-Waldo_Tobler_2007.jpg" alt=""></p><p><a href="https://baike.baidu.com/item/%E5%9C%B0%E7%90%86%E5%AD%A6%E7%AC%AC%E4%B8%80%E5%AE%9A%E5%BE%8B/2362779?fr=aladdin" target="_blank" rel="external">百度百科</a></p><p><a href="https://en.wikipedia.org/wiki/Waldo_R._Tobler" target="_blank" rel="external">维基百科</a></p><p>Tobler先生最广为人知的就是他提出的观点，也就是后来被地理学界称为地理学第一定律的“Everything is related to everything else, but near things are more related to each other”。个人的翻译为：世界上的一切事物都是相关的，但是相邻的事物相关性更大，当然有各自的翻译，整体意思是一致的，空间邻近的事物具有相关性，也就是所谓的空间自相关性。小文院士在2007年在《自然杂志》上撰文《地理学第一定律与时空邻近度的提出》，对地理学第一定律做了官方的阐释。</p><p>正如题目所言，Tobler先生对于地理学界而言是个活着的传奇，他是当今GIS与空间统计研究基础的奠基人，而这一切都因为他的地理学第一定律。无论是莫兰指数、地理加权回归、克里金插值都是建立在空间自相关的基础上衍生开来的理论。正如他在第一篇提到这个的文章所说，”As a premise, I make the assumption that everything is related to everything else.“</p><p>地理学从古代发展至今，这个古老的学科曾今因为缺乏足够的合法性，而一度濒临灭亡，很多学科都有地理学深深的印记，却又在不断发展中独立出来。而当地理学的分支学科纷纷独立时，地理学本身独立存在的合法性又何在？不同地理学派对此的争论，在1950时代引发了地理学的计量革命，以及GIS的出现，给了地理学又一次新的生命。而在计量革命与GIS出现之后，随着Tobler先生的地理学第一定律提出，GIS和地理学界重新激发了蓬勃的生命力。</p><p>所以，深切地感谢Tobler先生与他所提出的地理学第一定律。</p><p><a href="http://blog.sciencenet.cn/blog-2984-16562.html" target="_blank" rel="external">时空尺度与地表过程</a></p><p><a href="http://blog.sina.com.cn/s/blog_643115fc01011pdz.html" target="_blank" rel="external">1948-2006：哈佛大学地理系的灭亡与地理学的重生</a></p><h1 id="二"><a href="#（二）" class="headerlink" title="（二）"></a>（二）</h1><p>地理学第一定律用简介的语言描述了地理学现象的规律，中国人喜欢咬文嚼字，我曾经在早前大学给一次学弟学妹的汇报里以自己的理解解读过地理学与物理学。理者，可以翻译为规律，如此翻译而来，地理就是研究地球/地球表层事物的规律，物理就是研究事物之间的规律。</p><p>当然无非提的就是地理学的定律与物理学的定律。物理学有着牛顿三大定律，而地理学目前有两大定律（第一和第二定律，分别是讲述空间自相关性与空间异质性）。两个学科都有着一些定律，却有些不同。物理学的定律是普适性的定律，放之四海而皆准，除了二次元，你怕是在任何地方都无法脱离地心引力。而地理学的定律却不一定有那么强的普适性，之前有人将地理学第一定律的中文翻译为，世界上的一切事物都是相关的，但是相邻的事物往往相关性更大。相比于我的直白翻译，他加上了一个往往。往往也就是说是可能，而非完全确定的，也就是说有些地理现象确实不存在空间自相关性，随机分布或者均匀分布。</p><p>时至今日这依旧是被诟病的点，空间自相关性确实是地理学特征，也是空间统计仰赖基础，但是空间统计却出现了一千个作者，一千种结果的情况，随着空间权重矩阵和空间关系的变化，同一个区域的空间统计结果各不相同，甚至于今日我在Research Gate上看到的一个问题：同一个空间权重矩阵（至少他认为一样），但是STATA，R和Geoda得到的莫兰指数结果各不相同。</p><p><img src="http://pbl6hpz34.bkt.clouddn.com/QQ%E6%88%AA%E5%9B%BE20180222204039.png" alt=""></p><p>而我的看法是，正是因为地学现象受到诸多环境因素、人类因素、生物因素的耦合影响，导致它具有非常强的复杂性。因此如何用模型去表达一个地球表层，本身是一件很困难的事。我认为空间统计已经将地学的实质之一表达出来了，但是地球表层的复杂性使得研究人员必须在了解地球表层地理现象的大体过程的同时，选择最为适宜的空间统计方法进行分析。当然我认为空间统计依旧有很多值得完善的问题，如始终横亘在地理学面前的可变面元问题，抑或者是尺度问题，抑或者是如何实现地球表层要素的渐变与突变的表达，抑或者是老生常谈的不确定性问题。而这些则需要我们去进一步地研究与挖掘。</p><p>而到目前为止，我认为这两条定律已经很好地为我们描绘了地球表层地理现象的两大基本特性，而一些潜在的其他特性，则需要我们进一步发现和刻画，从而使得对地理现象更好的了解。</p><h1 id="三"><a href="#（三）" class="headerlink" title="（三）"></a>（三）</h1><p>从微博上道听途说Tobler老先生依旧在88岁高龄的情况下亲临博士毕业答辩现场。在去年，我在Research Gate上关注了Tobler先生，而就在去年，他更新了自己的Research Gate，依旧在提出新的东西——这回是他另一个主要的研究方向，地图制图与地理投影，Tobler先生又提出了一种新的墨卡托投影。88岁高龄的先生依旧充满着活跃的思想，我也是由衷地钦佩。</p><p>用中国人的话来说，可以说先生仙风道骨，仿佛不食人间烟火，一心只有科研。同时这又让我想起了小文院士。</p><p>曾经听中国地理学会副理事长张国友老师评价道：”地理学是一门经世致用的学科“，当时为之一振。这样的学科，也正因为有这些苦心研究的学者，而更加熠熠生辉吧。</p><p>天不生Tobler，万古GIS如长夜。</p><p>向先生以及诸多地学先驱致以最高的敬意。</p><div id="aplayer0" class="aplayer" style="margin-bottom: 20px;"></div><script>var options = {"narrow":false,"autoplay":true,"showlrc":0,"mode":"random","music":[{"title":"落叶归根","author":"王力宏","url":"http://oyo5uzjmz.bkt.clouddn.com/%E7%8E%8B%E5%8A%9B%E5%AE%8F%20-%20%E8%90%BD%E5%8F%B6%E5%BD%92%E6%A0%B9.mp3","pic":"http://oyo5uzjmz.bkt.clouddn.com/250px-Waldo_Tobler_2007.jpg"}]};options.element = document.getElementById("aplayer0");new APlayer(options);</script>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;今日在QQ上惊闻Waldo Tobler老先生已于昨日过世，实乃地理学界的一大憾事，特地以此文表示深切的悼念。
    
    </summary>
    
      <category term="Personal" scheme="https://giserdaishaoqing.github.io/categories/Personal/"/>
    
    
      <category term="Consideration of Ecology and Geography" scheme="https://giserdaishaoqing.github.io/tags/Consideration-of-Ecology-and-Geography/"/>
    
  </entry>
  
  <entry>
    <title>MODIS数据的简介和下载（番外篇）——MODIS Web Service的Python客户端应用</title>
    <link href="https://giserdaishaoqing.github.io/2018/01/18/MODIS%E6%95%B0%E6%8D%AE%E7%9A%84%E7%AE%80%E4%BB%8B%E5%92%8C%E4%B8%8B%E8%BD%BD%EF%BC%88%E7%95%AA%E5%A4%96%E7%AF%87%EF%BC%89%E2%80%94%E2%80%94MODIS%20Web%20Service%E7%9A%84Python%E5%AE%A2%E6%88%B7%E7%AB%AF%E5%BA%94%E7%94%A8/"/>
    <id>https://giserdaishaoqing.github.io/2018/01/18/MODIS数据的简介和下载（番外篇）——MODIS Web Service的Python客户端应用/</id>
    <published>2018-01-17T16:00:00.000Z</published>
    <updated>2018-07-10T00:41:29.008Z</updated>
    
    <content type="html"><![CDATA[<script src="\assets\js\APlayer.min.js"> </script><p>新年开坑第一篇，关于之前MODIS系列博客的补充和番外篇。有兴趣的同学可以去翻阅前面的文章复习。</p><p><a href="https://giserdaishaoqing.github.io/2017/04/13/MODIS%E6%95%B0%E6%8D%AE%E7%9A%84%E7%AE%80%E4%BB%8B%E5%92%8C%E4%B8%8B%E8%BD%BD%EF%BC%88%E4%B8%80%EF%BC%89%E2%80%94%E2%80%94MODIS%E6%95%B0%E6%8D%AE%E7%AE%80%E4%BB%8B/">MODIS数据的简介和下载（一）——MODIS数据简介</a></p><p><a href="https://giserdaishaoqing.github.io/2017/04/14/MODIS%E6%95%B0%E6%8D%AE%E7%9A%84%E7%AE%80%E4%BB%8B%E5%92%8C%E4%B8%8B%E8%BD%BD%EF%BC%88%E4%BA%8C%EF%BC%89%E2%80%94%E2%80%94MODIS%E6%95%B0%E6%8D%AE%E4%B8%8B%E8%BD%BD%E6%96%B9%E5%BC%8F%EF%BC%88FTP%EF%BC%89/">MODIS数据的简介和下载（二）——MODIS数据下载方式（FTP）</a></p><p><a href="https://giserdaishaoqing.github.io/2017/04/15/MODIS%E6%95%B0%E6%8D%AE%E7%9A%84%E7%AE%80%E4%BB%8B%E5%92%8C%E4%B8%8B%E8%BD%BD%EF%BC%88%E4%B8%89%EF%BC%89%E2%80%94%E2%80%94MODIS%E6%95%B0%E6%8D%AE%E4%B8%8B%E8%BD%BD%E6%96%B9%E5%BC%8F%EF%BC%88%E5%9F%BA%E4%BA%8EMODIS%20Web%20Service%EF%BC%89/">MODIS数据的简介和下载（三）——MODIS数据下载方式（基于MODIS Web Service）</a></p><p>之前有小伙伴在评论区问过我，说Matlab客户端不能用了，前一段笔者自己使用的时候发现R的客户端也挂了，去官网一看，发现MODIS官网更新了产品版本，原来的这些客户端都不支持了。当时仅剩一个Python版本的客户端（不过好消息是最近又把各个语言的客户端都更新了，习惯用Matlab或者R的同学可以继续使用）。<a id="more"></a></p><p><img src="http://pbl6hpz34.bkt.clouddn.com/QQ%E6%88%AA%E5%9B%BE20180118105527.png" alt=""></p><p><a href="https://modis.ornl.gov/data/modis_webservice.html" target="_blank" rel="external">Web Service客户端下载地址</a></p><p>Matlab只需要解压即可，R的MODISTools包则需要下载下来离线安装（我会把新的客户端的文件：R、Matlab、Python放到网盘共享，大家也可以在文末找链接）。</p><p>今天重点还是讲Python的客户端，点击开Python客户端下载之后是一个网页显示的文本文件。本文的Python环境是基于Anaconda的2.7.12。</p><p><img src="http://pbl6hpz34.bkt.clouddn.com/QQ%E6%88%AA%E5%9B%BE20180118105938.png" alt=""></p><p>将页面复制下来，存成Python文件。另外还需要安装SUDS的模块，通过pip就可以安装（前面的博客已经介绍过pip）。</p><p><a href="https://giserdaishaoqing.github.io/2017/11/29/Python%E5%BC%80%E7%AF%87%E2%80%94%E2%80%94%E7%AE%80%E4%BB%8B%E3%80%81pip%E5%92%8Cconda/">Python开篇——简介、pip和conda</a></p><p>只需要在cmd里运行pip install suds（确保你的pip在系统变量路径里）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">pip install suds</div></pre></td></tr></table></figure><p>接下来就是将下载的Python文件作为包引入即可。如何引用一个别人写好的未打包成包的Python函数？其实这里有两种方式。</p><p>一种是把别人写好的Python函数放到如下的路径’Python安装路径/Lib/site-packages’，这种方式一劳永逸，这样就等同于你安装了这个Python函数。可以随意的import。</p><p>另一种方式就是现在系统路径里加入Python函数所处的路径。具体的实现如下面的代码。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> os,sys</div><div class="line">sys.path.append(<span class="string">"MODIS Web Service的Python客户端所在路径"</span>)</div><div class="line"><span class="keyword">import</span> MODISWeb</div></pre></td></tr></table></figure><p>最后import 下载的MODIS Web Service的python文件名（我这里用的MODISWeb）即可。</p><p>使用的方式与前文的MODIS和R的客户端大体相同。</p><p><img src="http://pbl6hpz34.bkt.clouddn.com/QQ%E6%88%AA%E5%9B%BE20180118112030.png" alt=""></p><p><img src="http://pbl6hpz34.bkt.clouddn.com/QQ%E6%88%AA%E5%9B%BE20180118113154.png" alt=""></p><p><img src="http://pbl6hpz34.bkt.clouddn.com/QQ%E6%88%AA%E5%9B%BE20180118120606.png" alt=""></p><p>因为LAI是8天合成数据，我们想通过已有的数据进行拟合，对时间序列做个简单的预测。这里用线性回归模型进行拟合。</p><p><img src="http://pbl6hpz34.bkt.clouddn.com/QQ%E6%88%AA%E5%9B%BE20180118120812.png" alt=""></p><p>这里使用了sklearn里面的线性模型来训练拟合线性回归模型。</p><p>绘制回归图。</p><p><img src="http://pbl6hpz34.bkt.clouddn.com/figure_1.png" alt=""></p><p><img src="http://pbl6hpz34.bkt.clouddn.com/figure_2.png" alt=""></p><p>上文只是简单地对MODIS数据做些简单分析，如果拥有实测数据，则可以通过遥感数据和实测数据的拟合，实现遥感数据反演。而具体的应用就待各位进一步挖掘了。</p><p>此外，MODIS系列下载区有小伙伴问过关于MODIS16蒸散发产品的下载。这一点，有位热心小伙伴找到了最新的下载方式，这里放出博客的链接，有需要的请自取。</p><p><a href="http://blog.csdn.net/chejin4069/article/details/79028870" target="_blank" rel="external">MOD16 蒸散发数据下载</a></p><p>R、Matlab、Python客户端下载链接。</p><p><a href="https://pan.baidu.com/s/1c3DsMUO" target="_blank" rel="external">https://pan.baidu.com/s/1c3DsMUO</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;新年开坑第一篇，关于之前MODIS系列博客的补充和番外篇。有兴趣的同学可以去翻阅前面的文章复习。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://giserdaishaoqing.github.io/2017/04/13/MODIS%E6%95%B0%E6%8D%AE%E7%9A%84%E7%AE%80%E4%BB%8B%E5%92%8C%E4%B8%8B%E8%BD%BD%EF%BC%88%E4%B8%80%EF%BC%89%E2%80%94%E2%80%94MODIS%E6%95%B0%E6%8D%AE%E7%AE%80%E4%BB%8B/&quot;&gt;MODIS数据的简介和下载（一）——MODIS数据简介&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://giserdaishaoqing.github.io/2017/04/14/MODIS%E6%95%B0%E6%8D%AE%E7%9A%84%E7%AE%80%E4%BB%8B%E5%92%8C%E4%B8%8B%E8%BD%BD%EF%BC%88%E4%BA%8C%EF%BC%89%E2%80%94%E2%80%94MODIS%E6%95%B0%E6%8D%AE%E4%B8%8B%E8%BD%BD%E6%96%B9%E5%BC%8F%EF%BC%88FTP%EF%BC%89/&quot;&gt;MODIS数据的简介和下载（二）——MODIS数据下载方式（FTP）&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://giserdaishaoqing.github.io/2017/04/15/MODIS%E6%95%B0%E6%8D%AE%E7%9A%84%E7%AE%80%E4%BB%8B%E5%92%8C%E4%B8%8B%E8%BD%BD%EF%BC%88%E4%B8%89%EF%BC%89%E2%80%94%E2%80%94MODIS%E6%95%B0%E6%8D%AE%E4%B8%8B%E8%BD%BD%E6%96%B9%E5%BC%8F%EF%BC%88%E5%9F%BA%E4%BA%8EMODIS%20Web%20Service%EF%BC%89/&quot;&gt;MODIS数据的简介和下载（三）——MODIS数据下载方式（基于MODIS Web Service）&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;之前有小伙伴在评论区问过我，说Matlab客户端不能用了，前一段笔者自己使用的时候发现R的客户端也挂了，去官网一看，发现MODIS官网更新了产品版本，原来的这些客户端都不支持了。当时仅剩一个Python版本的客户端（不过好消息是最近又把各个语言的客户端都更新了，习惯用Matlab或者R的同学可以继续使用）。
    
    </summary>
    
      <category term="RS" scheme="https://giserdaishaoqing.github.io/categories/RS/"/>
    
    
      <category term="MODIS" scheme="https://giserdaishaoqing.github.io/tags/MODIS/"/>
    
      <category term="Python" scheme="https://giserdaishaoqing.github.io/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>迟到的2017总结文</title>
    <link href="https://giserdaishaoqing.github.io/2018/01/10/%E8%BF%9F%E6%9D%A5%E7%9A%842017%E6%80%BB%E7%BB%93%E6%96%87/"/>
    <id>https://giserdaishaoqing.github.io/2018/01/10/迟来的2017总结文/</id>
    <published>2018-01-09T16:00:00.000Z</published>
    <updated>2018-03-14T16:49:13.418Z</updated>
    
    <content type="html"><![CDATA[<script src="\assets\js\APlayer.min.js"> </script><p>悄然过去的2017年，仿佛还来不及说再见。突然想起那天科比球衣退役时热泪盈眶地在宿舍看直播的自己。</p><p>默默做个总结来迎接新的一年。</p><a id="more"></a><p>2017年走过的城市还蛮多的。一年下来，半年北方，半年小厦门。参加的学术活动也算不少，也算有些小成果。不过我想这一年来在github和博客上确实花了不少功夫，对于开源、编程，自己也有了更深入的了解。</p><p>2017年博客一共发了44篇博客，第一次利用github搭建了自己的主页和博客。而自己的各种博客也是基本同步。</p><p>对整体的博客内容做些梳理。</p><p>第一部分：技术实践笔记杂谈，像学了半天Fortran开始配环境的、装WRF的、Hexo和NexT优化的、装系统的。</p><p>第二部分：R语言相关的编程笔记，R算是我现在比较熟练的语言，当然去年特地为了记录公选课学习内容，连载了一系列的应用统计学与R语言实践笔记（也是github上开源了的项目，前几天被人forked了下，还有点小激动）。</p><p>第三部分：地理、生态、GIS相关的，阅读量最高的MODIS系列——其实也是源自我上课的实习内容。其实今天在回顾过去的一些基础知识，发现课堂上掌握得确实还不够，仍然需要好好温习。</p><p>第四部分：学习方面的感受，esri用户大会，定量遥感讲座。</p><p>新的一年先立些flag。</p><p>（一）机器学习笔记——最近在学习吴恩达大大的公开课，希望有所斩获。有空会更新这部分的笔记。</p><p>（二）空间统计内容——这里还是要推荐虾神的白话空间统计系列，但是我也想对之前自己学习空间统计内容做些梳理（最近正在看莫兰指数推导——嗯，死去活来），数学恐惧症就跳过吧。</p><p>（三）论文推荐和阅读——我可能会把阅读文献内容也放到博客内。</p><p>（四）研究成果推荐——虽然成果不多，但也会考虑，哈哈。</p><p>如果你们还对我的博客有啥建设性意见。欢迎留言。</p><div id="aplayer1" class="aplayer" style="margin-bottom: 20px;"></div><script>var options = {"narrow":false,"autoplay":true,"showlrc":0,"mode":"random","music":[{"title":"灌篮高手","author":"青春","url":"http://oyo5uzjmz.bkt.clouddn.com/BAAD%20-%20%E5%90%9B%E3%81%8C%E5%A5%BD%E3%81%8D%E3%81%A0%E3%81%A8%E5%8F%AB%E3%81%B3%E3%81%9F%E3%81%84.mp3","pic":"http://oyo5uzjmz.bkt.clouddn.com/SD.jpg"}]};options.element = document.getElementById("aplayer1");new APlayer(options);</script>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;悄然过去的2017年，仿佛还来不及说再见。突然想起那天科比球衣退役时热泪盈眶地在宿舍看直播的自己。&lt;/p&gt;
&lt;p&gt;默默做个总结来迎接新的一年。&lt;/p&gt;
    
    </summary>
    
      <category term="Personal" scheme="https://giserdaishaoqing.github.io/categories/Personal/"/>
    
    
      <category term="Summary" scheme="https://giserdaishaoqing.github.io/tags/Summary/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu下口袋妖怪终端主题安装</title>
    <link href="https://giserdaishaoqing.github.io/2017/12/13/Ubuntu%E4%B8%8B%E5%8F%A3%E8%A2%8B%E5%A6%96%E6%80%AA%E7%BB%88%E7%AB%AF%E4%B8%BB%E9%A2%98%E5%AE%89%E8%A3%85/"/>
    <id>https://giserdaishaoqing.github.io/2017/12/13/Ubuntu下口袋妖怪终端主题安装/</id>
    <published>2017-12-12T16:00:00.000Z</published>
    <updated>2018-07-09T14:08:53.010Z</updated>
    
    <content type="html"><![CDATA[<script src="\assets\js\APlayer.min.js"> </script><p>之前看到开源中国的文章，介绍了国内最火的开源项目——Python篇。看到一个比较有意思的项目——终端的口袋妖怪主题。之前介绍安装WRF的博客，细心的同学已经发现，我已然安装上了那个主题，今天就来介绍下Ubuntu下口袋妖怪终端主题安装吧。</p><p>先上图。</p><p><img src="http://pbl6hpz34.bkt.clouddn.com/QQ%E6%88%AA%E5%9B%BE20170921093943.png" alt=""><br><a id="more"></a></p><p>这回先贴出这个链接。</p><p><a href="http://mp.weixin.qq.com/s?__biz=MjM5NzM0MjcyMQ==&amp;mid=2650074431&amp;idx=1&amp;sn=fcbc725ccdd6e93db3291f769b5e3217&amp;chksm=bedb365189acbf4797a36c49c571d39ac1602a2e922b5fb0513593964d33df2816926a7bd5f4&amp;mpshare=1&amp;scene=1&amp;srcid=0924NI8OqHNo5tTNSN3iUOeB#rd" target="_blank" rel="external">可能是国内最火的开源项目——Python篇</a></p><p>还有做这个主题的github链接。</p><p><a href="https://github.com/LazoCoder/Pokemon-Terminal" target="_blank" rel="external">Pokemon-Terminal github链接</a></p><p>我用的Linux是Ubuntu，接下来就按照这个进行安装。首先这个主题支持的终端模拟器主要是以下三个：iTerm2， Terminology，Tilix。这里选择安装Tilix，首先添加这个终端模拟器仓库的公钥。这里我都是以root超级用户权限操作的，如果没有的话，请在命令前面加sudo。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">add-apt-repository ppa:webupd8team/terminix</div></pre></td></tr></table></figure><p><img src="http://pbl6hpz34.bkt.clouddn.com/QQ%E6%88%AA%E5%9B%BE20170921092706.png" alt=""></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">apt update</div></pre></td></tr></table></figure><p><img src="http://pbl6hpz34.bkt.clouddn.com/QQ%E6%88%AA%E5%9B%BE20170921092834.png" alt=""></p><p>安装Tilix。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">apt install tilix</div></pre></td></tr></table></figure><p><img src="http://pbl6hpz34.bkt.clouddn.com/QQ%E6%88%AA%E5%9B%BE20170921092953.png" alt=""></p><p>然后打开Tilix，并锁定到启动器。</p><p><img src="http://pbl6hpz34.bkt.clouddn.com/QQ%E6%88%AA%E5%9B%BE20170921093007.png" alt=""></p><p><img src="http://pbl6hpz34.bkt.clouddn.com/QQ%E6%88%AA%E5%9B%BE20170921093111.png" alt=""></p><p><img src="http://pbl6hpz34.bkt.clouddn.com/QQ%E6%88%AA%E5%9B%BE20170921093148.png" alt=""></p><p>有可能出现配置问题，建议是在bashrc中添加语句。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">if</span> [ <span class="variable">$TILIX_ID</span> ] || [ <span class="variable">$VTE_VERSION</span> ]; <span class="keyword">then</span></div><div class="line">        <span class="built_in">source</span> /etc/profile.d/vte.sh</div><div class="line"><span class="keyword">fi</span></div></pre></td></tr></table></figure><p>具体问题可参照如下网址：<br><a href="https://gnunn1.github.io/tilix-web/manual/vteconfig/" target="_blank" rel="external">终端配置</a></p><p>接下来设置配置方案。</p><p><img src="http://pbl6hpz34.bkt.clouddn.com/QQ%E6%88%AA%E5%9B%BE20170921093220.png" alt=""></p><p><img src="http://pbl6hpz34.bkt.clouddn.com/QQ%E6%88%AA%E5%9B%BE20170921093229.png" alt=""></p><p><img src="http://pbl6hpz34.bkt.clouddn.com/QQ%E6%88%AA%E5%9B%BE20170921093250.png" alt=""></p><p><img src="http://pbl6hpz34.bkt.clouddn.com/QQ%E6%88%AA%E5%9B%BE20170921093306.png" alt=""></p><p>不过下面的教程是针对该主题的1.0.7版本，目前主题已经更新到1.1.1版本。如果现在安装的话，更方便的方式是，先安装Python3.6，同时安装setuptools（推荐新立得安装），然后下载github仓库。<br>接着只需要如下的命令即可。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo python3.6 setup.py install</div></pre></td></tr></table></figure><p>下面的npm安装方式只针对之前的版本（只是顺带记录，不过现在也提供了这个方式，但还是建议上面的安装方法）<br>然后安装npm，最主要Ubuntu16.04默认有个python3.5.2，npm直接安装是跟Python版本对应，而新主题要求在3.6的Python以上，也可以考虑升级原有的Python。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">apt install npm</div></pre></td></tr></table></figure><p><img src="http://pbl6hpz34.bkt.clouddn.com/QQ%E6%88%AA%E5%9B%BE20170921093427.png" alt=""></p><p>接着安装pokemon-terminal。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install --global pokemon-terminal</div></pre></td></tr></table></figure><p><img src="http://pbl6hpz34.bkt.clouddn.com/QQ%E6%88%AA%E5%9B%BE20170921093533.png" alt=""></p><p><img src="http://pbl6hpz34.bkt.clouddn.com/QQ%E6%88%AA%E5%9B%BE20170921093727.png" alt=""></p><p><img src="http://pbl6hpz34.bkt.clouddn.com/QQ%E6%88%AA%E5%9B%BE20170921093943.png" alt=""></p><p>大功告成。</p><p>主要参考：<br><a href="https://www.maketecheasier.com/customize-linux-terminal-pokemon-skins/" target="_blank" rel="external">国外大神安装教程</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;之前看到开源中国的文章，介绍了国内最火的开源项目——Python篇。看到一个比较有意思的项目——终端的口袋妖怪主题。之前介绍安装WRF的博客，细心的同学已经发现，我已然安装上了那个主题，今天就来介绍下Ubuntu下口袋妖怪终端主题安装吧。&lt;/p&gt;
&lt;p&gt;先上图。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://pbl6hpz34.bkt.clouddn.com/QQ%E6%88%AA%E5%9B%BE20170921093943.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;
    
    </summary>
    
      <category term="Linux" scheme="https://giserdaishaoqing.github.io/categories/Linux/"/>
    
    
      <category term="Python" scheme="https://giserdaishaoqing.github.io/tags/Python/"/>
    
      <category term="Ubuntu" scheme="https://giserdaishaoqing.github.io/tags/Ubuntu/"/>
    
  </entry>
  
  <entry>
    <title>Windows和Linux双系统安装教程</title>
    <link href="https://giserdaishaoqing.github.io/2017/12/12/Windows%E5%92%8CLinux%E5%8F%8C%E7%B3%BB%E7%BB%9F%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/"/>
    <id>https://giserdaishaoqing.github.io/2017/12/12/Windows和Linux双系统安装教程/</id>
    <published>2017-12-11T16:00:00.000Z</published>
    <updated>2018-07-09T14:02:18.423Z</updated>
    
    <content type="html"><![CDATA[<script src="\assets\js\APlayer.min.js"> </script><p>最近刚刚完成了Windows和Linux双系统（这里以Ubuntu安装为例）的安装，应某奔同学要求，这里简单记录下安装过程。<a id="more"></a></p><h1 id="1-系统启动盘准备"><a href="#1-系统启动盘准备" class="headerlink" title="1 系统启动盘准备"></a>1 系统启动盘准备</h1><p>因为不想装第二个系统的时候重做系统盘，所以这里做的系统启动盘本身就是Windows和Linux双系统引导的。这里用的工具前面在docker安装笔记的时候已经介绍过：YUMI。可以翻翻前面的博客进行了解。</p><p><a href="https://giserdaishaoqing.github.io/2017/11/08/%E8%8A%B1%E5%BC%8F%E5%AE%89%E8%A3%85%E8%93%9D%E9%B2%B8%E9%B1%BC%E6%9C%AD%E8%AE%B0/">花式安装蓝鲸鱼札记</a></p><p>百度搜索的时候，要准确定位，请搜YUMI USB，如果想了解点其他的（咳咳咳），去掉USB。不过另外一点是有人推荐用EFI的版本（虽然觉得差别不大），制作系统启动盘前面的博客也介绍过了。唯一要注意的就是为了做成多引导启动，在选择windows系统制作的时候，记得选择multiboot。</p><h1 id="2-windows系统安装"><a href="#2-Windows系统安装" class="headerlink" title="2 Windows系统安装"></a>2 Windows系统安装</h1><p>Windows和Linux双系统安装，通常是选择先装Windows，然后再安装Linux，最后通过Windows引导Linux系统启动。</p><p>Windows安装是比较方便的，网上教程颇多，对于还没有系统的电脑来说，其实就是把做好的启动盘插入，然后狂按某FX键（反正视电脑型号和品牌而定）。主要是设置boot，选择从U盘启动。如果是在Windows系统下重装系统，就只需要把我们的系统盘放进去。然后双击setup.exe就好了。</p><p><img src="http://pbl6hpz34.bkt.clouddn.com/QQ%E6%88%AA%E5%9B%BE20171212152849.jpg" alt=""></p><p><img src="http://pbl6hpz34.bkt.clouddn.com/QQ%E6%88%AA%E5%9B%BE20171212153000.jpg" alt=""></p><h1 id="3-分出给linux系统的磁盘空间"><a href="#3-分出给Linux系统的磁盘空间" class="headerlink" title="3 分出给Linux系统的磁盘空间"></a>3 分出给Linux系统的磁盘空间</h1><p>安装完成之后，首先先从Windows的磁盘里面分出給Linux系统的空间。</p><p>右击”我的电脑”→”管理”→”存储”→”磁盘管理”</p><p><img src="http://pbl6hpz34.bkt.clouddn.com/QQ%E6%88%AA%E5%9B%BE20171212153545.jpg" alt=""></p><p>接下来只要选择你要分出空间的盘，右击压缩卷。这个画红圈的就是设置Linux系统的大小，1024M是1G，根据情况分区。</p><p><img src="http://pbl6hpz34.bkt.clouddn.com/QQ%E6%88%AA%E5%9B%BE20171212154001.jpg" alt=""></p><h1 id="4-安装linux系统"><a href="#4-安装Linux系统" class="headerlink" title="4 安装Linux系统"></a>4 安装Linux系统</h1><p>接下来就插入系统启动盘，重启电脑，通常系统启动盘会引导进入图形安装界面，选择Linux安装。Ubuntu这里会让你选择Win10和Ubuntu共存，还是清除Windows系统，还有一个其它选项，这里选择其它选项。接下来就是Linux系统分区了。这个分区的内容以及具体安装教程参照前面的博客，之前在虚拟机上安装Ubuntu的时候我已经提过了，这里就不详细介绍。</p><p><a href="https://giserdaishaoqing.github.io/2017/10/11/VMware%20Workstation%E4%B8%8B%E5%AE%89%E8%A3%85Ubuntu%2064%E4%BD%8D%E7%B3%BB%E7%BB%9F/">VMware Workstation下安装Ubuntu 64位系统</a></p><p>注意：分区分完了，不能直接安装，最后选用引导的选项必须改选为前面Linux分区里面的”/boot”分区。不能选U盘，也不能选其他盘。然后就可以一路安装了。最后重启电脑。</p><p>于是——你发现开起来还是Windows。嗯，主要原因需要用一个多重系统启动引导的文件，这个时候最后一个主人公就要登场了。</p><h1 id="5-easybcd安装使用"><a href="#5-EasyBCD安装使用" class="headerlink" title="5 EasyBCD安装使用"></a>5 EasyBCD安装使用</h1><p>最后一个主人公就是EasyBCD啦，这个软件是用于系统配置创建多重启动系统的引导文件，也就是新创建一个启动文件，可以让你的电脑在启动的时候，有进入何种系统的选择。</p><p><a href="https://neosmart.net/EasyBCD/" target="_blank" rel="external">EasyBCD官网地址</a></p><p>“添加新条目” -“Linux/BSD”-类型“Grub 2”驱动器“自动定位和加载”-“添加条目”</p><p><img src="http://pbl6hpz34.bkt.clouddn.com/easybcd1.png" alt=""></p><p><img src="http://pbl6hpz34.bkt.clouddn.com/easybcd2.png" alt=""></p><p>一波操作猛如虎。然后重启电脑就可以了。</p><p>最后效果。</p><p><img src="http://pbl6hpz34.bkt.clouddn.com/QQ%E6%88%AA%E5%9B%BE20171212161020.jpg" alt=""></p><p>顺带感谢一波网上大神，附上链接。</p><p><a href="https://www.zhihu.com/question/19867618" target="_blank" rel="external">知乎：怎样安装 Windows 7 与 Linux 的双系统？</a></p><p><a href="http://blog.csdn.net/jayxujia123/article/details/9729561" target="_blank" rel="external">电脑安装双系统（win+Linux）的一些重要步骤总结</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近刚刚完成了Windows和Linux双系统（这里以Ubuntu安装为例）的安装，应某奔同学要求，这里简单记录下安装过程。
    
    </summary>
    
      <category term="Linux" scheme="https://giserdaishaoqing.github.io/categories/Linux/"/>
    
    
      <category term="Ubuntu" scheme="https://giserdaishaoqing.github.io/tags/Ubuntu/"/>
    
      <category term="Windows 10" scheme="https://giserdaishaoqing.github.io/tags/Windows-10/"/>
    
  </entry>
  
  <entry>
    <title>Python开篇——简介、pip和conda</title>
    <link href="https://giserdaishaoqing.github.io/2017/11/29/Python%E5%BC%80%E7%AF%87%E2%80%94%E2%80%94%E7%AE%80%E4%BB%8B%E3%80%81pip%E5%92%8Cconda/"/>
    <id>https://giserdaishaoqing.github.io/2017/11/29/Python开篇——简介、pip和conda/</id>
    <published>2017-11-28T16:00:00.000Z</published>
    <updated>2018-07-09T13:59:48.769Z</updated>
    
    <content type="html"><![CDATA[<script src="\assets\js\APlayer.min.js"> </script><p>人生苦短，我用Python。</p><p><img src="http://pbl6hpz34.bkt.clouddn.com/faedab64034f78f092033e1079310a55b2191ccc.jpg" alt=""></p><a id="more"></a><p>那我还是来介绍一下它（凑一波字数）吧。</p><p>Python（英国发音：/ˈpaɪθən/ 美国发音：/ˈpaɪθɑːn/）, 是一种面向对象的解释型计算机程序设计语言，由荷兰人Guido van Rossum于1989年发明，第一个公开发行版发行于1991年。Python是纯粹的自由软件， 源代码和解释器CPython遵循 GPL(GNU General Public License)协议。Python语法简洁清晰，特色之一是强制用空白符(white space)作为语句缩进。Python具有丰富和强大的库。它常被昵称为胶水语言，能够把用其他语言制作的各种模块（尤其是C/C++）很轻松地联结在一起。常见的一种应用情形是，使用Python快速生成程序的原型（有时甚至是程序的最终界面），然后对其中有特别要求的部分，用更合适的语言改写，比如3D游戏中的图形渲染模块，性能要求特别高，就可以用C/C++重写，而后封装为Python可以调用的扩展类库。需要注意的是在您使用扩展类库时可能需要考虑平台问题，某些可能不提供跨平台的实现。7月20日，IEEE发布2017年编程语言排行榜：Python高居首位 。</p><p><a href="https://baike.baidu.com/item/Python/407313?fr=aladdin" target="_blank" rel="external">百度百科</a></p><p>也有不少新闻提了，Python在数据科学领域位居首位。可以说接着深度学习和机器学习的火热，Python再次大热了一波，当然说Python是深度学习的语言也不准确，事实上深度学习里的Python主要是胶水语言的作用，比如大家喜闻乐见的Tensorflow，其实底层是C++，只不过提供了Python接口。</p><p>总体来说Python就是一句话，写得快，跑得慢。同样的功能实现，C和C++可能要100行，Python可能只需要10行（数字不一定准，但是能节省写的时间是真的）。同时最强大的大概是Python丰富和强大的库了（这点跟R还是蛮像的，所以都很流行）。</p><p>这里简介一些重点库。</p><h1 id="1-python常用库"><a href="#1-Python常用库" class="headerlink" title="1 Python常用库"></a>1 Python常用库</h1><p>爬虫：Scrapy（举世闻名，分布式爬虫框架，不仅仅是简单的库）、beautifulsoup4、urllib、urllib2、selenium等。</p><p>机器学习：scikit-learn（灰常牛逼的一个库，几乎所有机器学习算法都囊括了应该），NLTK（自然语言处理工具包 ）等（用一个等的原因是，说起来除了scikit-learn，我还真不知道还有啥，hhh）。</p><p>网站：Django（重量级网页框架）、Flask（轻量级网页框架）等。</p><p>数据处理科学计算：Numpy（数组矩阵神器）、Scipy（科学计算神器）、Pandas（熊猫包，R语言玩家转Python的最爱）等。</p><p>可视化：matplotlib（matlab风格式的包）、seaborn（散点图矩阵神器）、ggplot（R语言可视化神器的Python版本）、plotly（这个神器是个js库，不过也有各种流行的语言接口）等。</p><p>深度学习：<a href="https://www.zhihu.com/question/30105838?sort=created" target="_blank" rel="external">看知乎吧</a>（强行蹭一波热点，深度学习是机器学习的一部分）</p><p>地学相关：basemap（画地图的库）、cartopy（画地图的库）、Folium（leaflet的Python版本 ）、GDAL（开源GIS库）、geocoder（地理编码神器）、geopandas（地理数据的熊猫包）、geopy（还没玩过）、PySAL（空间计量经济学的一个神包）等（跟地学相关的包实在太多，后面有空的话，考虑会重点介绍几个包）。</p><p>另外这里多提两个关于ArcGIS的包，一个是arcpy，熟悉ArcGIS的同学知道，这个是ArcGIS内嵌Python的神器，可以非常方便调用ArcGIS各项功能，但是有一点就是不开源（毕竟人家是商业软件嘛，所以那些老想着在自己安装的Python上import arcpy的同学可以省省功夫了），另外多提一个Esri公司新推出的ArcGIS API for Python，这个在前面的用户大会观感上提到过，是基于portal和online的一套API，还是有些可以玩的价值，后面也会考虑介绍这个内容。</p><h1 id="2-python安装"><a href="#2-Python安装" class="headerlink" title="2 Python安装"></a>2 Python安装</h1><p>安装这个事情实在太小了。毕竟开源语言，一路next安装完毕。唯一问题可能是要配个环境变量。</p><p><a href="https://www.python.org/" target="_blank" rel="external">Python官网</a></p><p>顺带一提就是现在的2.0和3.0之争。Python 2.0到3.0过渡确实还做得一般，但是3.0有它的好处，2.0目前就是比较稳定。很多包都暂时没迁移到Python3.0上。但是最近numpy的一个通知，正在显示3.0时代的到来。</p><p><a href="https://github.com/numpy/numpy/blob/master/doc/neps/dropping-python2.7-proposal.rst" target="_blank" rel="external">numpy团队宣布2020年停止支持2.0</a></p><p>笔者自己也还是用的2.7，不过还是在考虑学习3的事情（其实也不是很麻烦），如果你刚刚起步就从3.0开始也没毛病。</p><p>当然如果为了科学计算，可以考虑直接安装Anaconda，而不是从Python开始一步一步安装。</p><p><strong>anaconda （一个开源的Python发行版本）</strong><br>anaconda指的是一个开源的Python发行版本，其包含了conda、Python等180多个科学包及其依赖项。[1]  因为包含了大量的科学包，Anaconda 的下载文件比较大（约 500 MB），如果只需要某些包，或者需要节省带宽或存储空间，也可以使用Miniconda这个较小的发行版（仅包含conda和 Python）。</p><p><a href="https://baike.baidu.com/item/anaconda/20407441?fr=aladdin" target="_blank" rel="external">百度百科</a></p><h1 id="3-pip和conda"><a href="#3-pip和conda" class="headerlink" title="3 pip和conda"></a>3 pip和conda</h1><p>最后讲讲题目里的这俩货，其实conda在上面介绍Anaconda的时候已经讲到了，这两个都是Python包管理的工具。还是很不错的。这个部分也介绍下这两个工具怎么用。</p><p>pip安装就不提了，不清楚可以自己百度。</p><p>安装包的命令如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">pip install packages</div></pre></td></tr></table></figure><p>然而一顿操作猛如虎之后。</p><p><img src="http://pbl6hpz34.bkt.clouddn.com/QQ%E6%88%AA%E5%9B%BE20171129105822.jpg" alt=""></p><p>事实上，我们去找一下pip的文件就明白为什么了。</p><p><img src="http://pbl6hpz34.bkt.clouddn.com/QQ%E6%88%AA%E5%9B%BE20171129110600.jpg" alt=""></p><p>位置是Python安装路径/Scripts下。pip是个exe呀。这回只要打开cmd，定位到pip的exe文件夹下，然后pip install就OK了。用查看已经安装的包的命令测试。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">pip list</div></pre></td></tr></table></figure><p><img src="http://pbl6hpz34.bkt.clouddn.com/QQ%E6%88%AA%E5%9B%BE20171129110903.jpg" alt=""></p><p><img src="http://pbl6hpz34.bkt.clouddn.com/QQ%E6%88%AA%E5%9B%BE20171129110911.jpg" alt=""></p><p>conda其实功能命令跟pip差别不大，这里就不多做介绍了。也是献上conda查看包的结果图。</p><p><img src="http://pbl6hpz34.bkt.clouddn.com/QQ%E6%88%AA%E5%9B%BE20171129111017.jpg" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;人生苦短，我用Python。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://pbl6hpz34.bkt.clouddn.com/faedab64034f78f092033e1079310a55b2191ccc.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Coding" scheme="https://giserdaishaoqing.github.io/categories/Coding/"/>
    
    
      <category term="Python" scheme="https://giserdaishaoqing.github.io/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>hexo博客评论新神器——Valine</title>
    <link href="https://giserdaishaoqing.github.io/2017/11/24/hexo%E5%8D%9A%E5%AE%A2%E8%AF%84%E8%AE%BA%E6%96%B0%E7%A5%9E%E5%99%A8%E2%80%94%E2%80%94Valine/"/>
    <id>https://giserdaishaoqing.github.io/2017/11/24/hexo博客评论新神器——Valine/</id>
    <published>2017-11-23T16:00:00.000Z</published>
    <updated>2018-07-09T13:57:59.497Z</updated>
    
    <content type="html"><![CDATA[<script src="\assets\js\APlayer.min.js"> </script><p>接着前文的hexo博客继续优化。其实也没什么大动作，这回主要是对评论系统做些整理。本文如题目所示：介绍一个神器，Valine。<a id="more"></a></p><p>本来hexo博客用的是gitment，我也非常喜欢，看着逼格就超高呀。无奈我用着bug略多，而且毕竟有github账户的小伙伴似乎并不多。于是我就忍痛准备换评论系统。然后在最近刚刚加入的hexo博客群里，看见了一个神器。也就是本篇主人公——Valine.js。</p><p>具体配置就见如下的文章吧。它的定义—— 一款极简的无后端评论系统。</p><p>在多说和网易云跟帖相继倒闭的情况下，这个简直是救人一命胜造七级浮屠呀。</p><p><a href="https://ioliu.cn/2017/add-valine-comments-to-your-blog/" target="_blank" rel="external">Valine – 一款极简的评论系统</a></p><p><a href="https://valine.js.org" target="_blank" rel="external">Valine官网</a></p><p>这个评论系统是基于LeanCloud的，大家应该对这个很熟悉，对，Hexo的博客阅读量统计也是它。官网网址如下，需要注册一个账户。</p><p><a href="https://leancloud.cn" target="_blank" rel="external">LeanCloud官网</a></p><p>另外多提一句，最近为了更好更快升级，我重新在本地部署了下我的hexo博客，就是把NexT主题利用Git方式克隆到本地，以后升级就比较快了。这个内容可以参见官网。也因为克隆了最新版本，发现已经集成了gitment和valinejs（神速）。所以配置起来就很方便了。</p><p><img src="http://pbl6hpz34.bkt.clouddn.com/QQ%E6%88%AA%E5%9B%BE20171124155800.jpg" alt=""></p><p>这里重点讲一下关于邮件提醒的事。</p><p><img src="http://pbl6hpz34.bkt.clouddn.com/QQ%E6%88%AA%E5%9B%BE20171124160817.jpg" alt=""></p><p>这样设置一下就可以了。不清楚的查看下面的链接也可以。</p><p><a href="https://valine.js.org/#/configuration" target="_blank" rel="external">valline详细配置官网</a></p><p><a href="https://github.com/xCss/Valine/wiki/Valine-%E8%AF%84%E8%AE%BA%E7%B3%BB%E7%BB%9F%E4%B8%AD%E7%9A%84%E9%82%AE%E4%BB%B6%E6%8F%90%E9%86%92%E8%AE%BE%E7%BD%AE" target="_blank" rel="external">Valine 评论系统中的邮件提醒设置</a></p><p>最后多说一句。支持导出评论和数据分析。</p><p><img src="http://pbl6hpz34.bkt.clouddn.com/QQ%E6%88%AA%E5%9B%BE20171124171037.jpg" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;接着前文的hexo博客继续优化。其实也没什么大动作，这回主要是对评论系统做些整理。本文如题目所示：介绍一个神器，Valine。
    
    </summary>
    
      <category term="Coding" scheme="https://giserdaishaoqing.github.io/categories/Coding/"/>
    
    
      <category term="hexo" scheme="https://giserdaishaoqing.github.io/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>hexo+NexT博客优化第二弹</title>
    <link href="https://giserdaishaoqing.github.io/2017/11/22/hexo+NexT%E5%8D%9A%E5%AE%A2%E4%BC%98%E5%8C%96%E7%AC%AC%E4%BA%8C%E5%BC%B9/"/>
    <id>https://giserdaishaoqing.github.io/2017/11/22/hexo+NexT博客优化第二弹/</id>
    <published>2017-11-21T16:00:00.000Z</published>
    <updated>2018-07-09T13:55:57.957Z</updated>
    
    <content type="html"><![CDATA[<script src="\assets\js\APlayer.min.js"> </script><p>最近对hexo和NexT博客又做了一次优化。主要干了三件事。</p><p><a href="https://giserdaishaoqing.github.io/">博客地址</a><a id="more"></a> </p><p>顶部加载条实现：</p><p><img src="http://pbl6hpz34.bkt.clouddn.com/QQ%E6%88%AA%E5%9B%BE20171122143819.jpg" alt=""></p><p>这个如果用的是比较新的NexT主题，只需要在配置文件里面进行修改就可以了。旧的话，就需要对/next/layout/_partials/head.swig文件做些修改，添加对应的代码。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"//cdn.bootcss.com/pace/1.0.2/pace.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">"//cdn.bootcss.com/pace/1.0.2/themes/pink/pace-theme-flash.css"</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></div><div class="line">.pace .pace-progress &#123;</div><div class="line">background: #1E92FB; /*进度条颜色*/</div><div class="line">height: 3px;</div><div class="line">&#125;</div><div class="line">.pace .pace-progress-inner &#123;</div><div class="line">box-shadow: 0 0 10px #1E92FB, 0 0 5px     #1E92FB; /*阴影颜色*/</div><div class="line">&#125;</div><div class="line">.pace .pace-activity &#123;</div><div class="line">border-top-color: #1E92FB;    /*上边框颜色*/</div><div class="line">border-left-color: #1E92FB;    /*左边框颜色*/</div><div class="line">&#125;</div><div class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></div></pre></td></tr></table></figure><p>具体的可以点击上次那篇推荐的文章。</p><p><a href="http://blog.csdn.net/qq_33699981/article/details/72716951" target="_blank" rel="external">hexo的next主题个性化教程：打造炫酷网站</a></p><p>另外就是增加了词云和运行时间。</p><p>词云其实就是标签做的，放在侧边栏上。需要安装插件。</p><pre><code>npm install hexo-tag-cloud@^2.0.* --save</code></pre><p>接着在next/layout/_macro/sidebar.swig添加如下内容。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">&#123;% if site.tags.length &gt; 1 %&#125;</div><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span> <span class="attr">src</span>=<span class="string">"/js/tagcloud.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span> <span class="attr">src</span>=<span class="string">"/js/tagcanvas.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"widget-wrap"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">h3</span> <span class="attr">class</span>=<span class="string">"widget-title"</span>&gt;</span>Tag Cloud<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"myCanvasContainer"</span> <span class="attr">class</span>=<span class="string">"widget tagcloud"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">canvas</span> <span class="attr">width</span>=<span class="string">"250"</span> <span class="attr">height</span>=<span class="string">"250"</span> <span class="attr">id</span>=<span class="string">"resCanvas"</span> <span class="attr">style</span>=<span class="string">"width=100%"</span>&gt;</span></div><div class="line">&#123;&#123; list_tags() &#125;&#125;</div><div class="line"><span class="tag">&lt;/<span class="name">canvas</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">&#123;% endif %&#125;</div></pre></td></tr></table></figure><p>运行时间的话，在next/layout/_custom/sidebar.swig文件中先添加。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"days"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">language</span>=<span class="string">"javascript"</span>&gt;</span><span class="xml"></span></div><div class="line">function show_date_time()&#123;</div><div class="line">window.setTimeout("show_date_time()", 1000);</div><div class="line">BirthDay=new Date("05/27/2017 15:00:00");</div><div class="line">today=new Date();</div><div class="line">timeold=(today.getTime()-BirthDay.getTime());</div><div class="line">sectimeold=timeold/1000</div><div class="line">secondsold=Math.floor(sectimeold);</div><div class="line">msPerDay=24*60*60*1000</div><div class="line">e_daysold=timeold/msPerDay</div><div class="line">daysold=Math.floor(e_daysold);</div><div class="line">e_hrsold=(e_daysold-daysold)*24;</div><div class="line">hrsold=setzero(Math.floor(e_hrsold));</div><div class="line">e_minsold=(e_hrsold-hrsold)*60;</div><div class="line">minsold=setzero(Math.floor((e_hrsold-hrsold)*60));</div><div class="line">seconds=setzero(Math.floor((e_minsold-minsold)*60));</div><div class="line">document.getElementById('days').innerHTML="已运行"+daysold+"天"+hrsold+"时"+minsold+"分"+seconds+"秒";</div><div class="line">&#125;</div><div class="line">function setzero(i)&#123;</div><div class="line">if (i<span class="tag">&lt;<span class="name">10)</span></span></div><div class="line">&#123;<span class="attr">i</span>=<span class="string">"0"</span> + <span class="attr">i</span>&#125;;</div><div class="line"><span class="attr">return</span> <span class="attr">i</span>;</div><div class="line">&#125;</div><div class="line"><span class="attr">show_date_time</span>();</div><div class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div></pre></td></tr></table></figure><p>接着在next/layout/_macro/sidebar.swig文件中修改。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">&#123;# Blogroll #&#125;</div><div class="line">&#123;% if theme.links %&#125;</div><div class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"links-of-blogroll motion-element &#123;&#123; "</span><span class="attr">links-of-blogroll-</span>" + <span class="attr">theme.links_layout</span> | <span class="attr">default</span>('<span class="attr">inline</span>') &#125;&#125;"&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"links-of-blogroll-title"</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"fa  fa-fw fa-&#123;&#123; theme.links_icon | default('globe') | lower &#125;&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></div><div class="line">      &#123;&#123; theme.links_title &#125;&#125;&amp;nbsp;</div><div class="line">      <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"fa  fa-fw fa-&#123;&#123; theme.links_icon | default('globe') | lower &#125;&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"links-of-blogroll-list"</span>&gt;</span></div><div class="line">      &#123;% for name, link in theme.links %&#125;</div><div class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"links-of-blogroll-item"</span>&gt;</span></div><div class="line">          <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;&#123; link &#125;&#125;"</span> <span class="attr">title</span>=<span class="string">"&#123;&#123; name &#125;&#125;"</span> <span class="attr">target</span>=<span class="string">"_blank"</span>&gt;</span>&#123;&#123; name &#125;&#125;<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">      &#123;% endfor %&#125;</div><div class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></div><div class="line">     &#123;% include '../_custom/sidebar.swig' %&#125;</div><div class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"> &#123;% endif %&#125;</div></pre></td></tr></table></figure><p>觉得需要调整颜色的还可以在/next/source/css/_custom/custom.styl加入如下的语句。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">// 自定义的侧栏时间样式</div><div class="line">#days &#123;</div><div class="line">   display: block;</div><div class="line">   color: rgb(7, 179, 155);</div><div class="line">   font-size: 13px;</div><div class="line">   margin-top: 15px;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p><img src="http://pbl6hpz34.bkt.clouddn.com/QQ%E6%88%AA%E5%9B%BE20171122143741.jpg" alt=""></p><p>另外参照着增加了Readme，增加了一些图标等。</p><p><img src="http://pbl6hpz34.bkt.clouddn.com/QQ%E6%88%AA%E5%9B%BE20171122160606.jpg" alt=""></p><p>有找到了几篇还不错的文章。以及本次优化参考的主要文章链接。</p><p><a href="https://reuixiy.github.io/technology/computer/computer-aided-art/2017/06/09/hexo-next-optimization.html#更新提示（可以最后看）" target="_blank" rel="external">打造个性超赞博客Hexo+NexT+GithubPages的超深度优化</a></p><p><a href="https://leaferx.online/2017/02/05/EnableTOConMobile/" target="_blank" rel="external">在移动设备下启用NexT主题的目录页面和回到顶部按钮</a></p><p><a href="http://blog.csdn.net/DreamHome_S/article/details/78250692" target="_blank" rel="external">Hexo博客中使用标签云hexo-tag-cloud</a></p><p><a href="https://github.com/MikeCoder/hexo-tag-cloud/blob/master/README.ZH.md" target="_blank" rel="external">Hexo 标签云插件github地址</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近对hexo和NexT博客又做了一次优化。主要干了三件事。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://giserdaishaoqing.github.io/&quot;&gt;博客地址&lt;/a&gt;
    
    </summary>
    
      <category term="Coding" scheme="https://giserdaishaoqing.github.io/categories/Coding/"/>
    
    
      <category term="hexo" scheme="https://giserdaishaoqing.github.io/tags/hexo/"/>
    
  </entry>
  
</feed>
