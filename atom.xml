<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>GISerDaiShaoqing&#39;s Blog</title>
  
  <subtitle>Urban·Ecology·GIS</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://giserdaishaoqing.github.io/"/>
  <updated>2018-07-07T08:41:33.472Z</updated>
  <id>https://giserdaishaoqing.github.io/</id>
  
  <author>
    <name>Dai Shaoqing</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Coding and Paper Letter（一）</title>
    <link href="https://giserdaishaoqing.github.io/2018/07/07/Coding%20and%20Paper%20Letter%EF%BC%881%EF%BC%89/"/>
    <id>https://giserdaishaoqing.github.io/2018/07/07/Coding and Paper Letter（1）/</id>
    <published>2018-07-06T16:00:00.000Z</published>
    <updated>2018-07-07T08:41:33.472Z</updated>
    
    <content type="html"><![CDATA[<script src="\assets\js\APlayer.min.js"> </script><p>最近发现需要在快速阅读背景下，对快餐式资源做整理与收集。以Coding（以Github）和Paper（自己看到的一些论文，论文一般主要看题目和摘要做些简单小结）的资源为主。<a id="more"></a></p><h1 id="1-coding"><a href="#1-Coding：" class="headerlink" title="1 Coding："></a>1 Coding：</h1><p>1.QGIS上的变形地图插件，我后面会专门来介绍变形地图这个主题的内容。</p><p><a href="https://github.com/informeren/qgis-cartogram" target="_blank" rel="external">qgis-cartogram源码</a></p><p><img src="https://upload-images.jianshu.io/upload_images/3229757-14a15150e9739293.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p><p>2.火星坐标与地球坐标转换开源代码。</p><p><a href="https://github.com/wandergis/coordtransform-cli" target="_blank" rel="external">命令行版</a></p><p><a href="https://github.com/wandergis/coordTransform_py" target="_blank" rel="external">Python版</a></p><p><a href="https://github.com/wandergis/coordtransform" target="_blank" rel="external">项目与说明</a></p><p>3.空间统计开源软件GeoDa资源。</p><p><a href="https://github.com/GeoDaCenter/geoda" target="_blank" rel="external">GeoDa 源码</a></p><p><img src="https://upload-images.jianshu.io/upload_images/3229757-9ccefcc3fcafe6b8.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p><p>4.空间统计分析开源Python库——PySAL。</p><p><a href="https://github.com/pysal/pysal" target="_blank" rel="external">PySAL GitHub</a></p><p><img src="https://upload-images.jianshu.io/upload_images/3229757-c06e95d473dbd4b0.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p><p>5.GIS资源链接整理。</p><p><a href="https://github.com/sshuair/awesome-gis" target="_blank" rel="external">Awesome GIS</a></p><p>6.R语言包（rasterVIS）。一个专门针对栅格做可视化的包。十分强大。</p><p><a href="https://github.com/oscarperpinan/rastervis" target="_blank" rel="external">rasterVIS GitHub</a></p><p><img src="https://upload-images.jianshu.io/upload_images/3229757-afaafe905aaf9bcd.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p><p>7.基于CityEngine开发的地理设计工具箱。这个项目讨论了一系列工具，这些工具旨在使数据驱动设计能够支持大规模方案规划项目。这些工具旨在集成GIS和CityEngine，以支持创建大量3D内容，以支持城市规划/地理设计项目。创建的内容可用于创建图像作为剪切图纸的一部分（与数据驱动页面一起使用），或链接到Web地图中的Web内容（通过提供弹出窗口或Web场景链接到的内容）。这里提出的工作流程的重点是街道，但脚本也支持与建筑物/批次/分区可视化相关的项目。意图：这些工具的目的是通过结合使用GIS和CityEngine，实现大规模的数据驱动设计。</p><p><a href="https://github.com/Holisticnature/geodesign-toolkit-gis-cityengine-integration-tools" target="_blank" rel="external">CityEngineToolKit-GeodesignToolkit GitHub</a></p><p>8.深度照片风格转换。基于深度学习的照片风格转换。</p><p><a href="https://github.com/luanfujun/deep-photo-styletransfer" target="_blank" rel="external">deep-photo-styletransfer 源码</a></p><p><img src="https://upload-images.jianshu.io/upload_images/3229757-18a41e5a9dc566d6.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p><p>9.R语言包（scanstatistics）。时空扫描统计算法的R包实现，这个算法最早由哈佛大学学者提出，用于疾病的空间统计分析。</p><p><a href="https://github.com/BenjaK/scanstatistics" target="_blank" rel="external">scanstatistics GitHub</a></p><p><img src="https://upload-images.jianshu.io/upload_images/3229757-27581912306c3268.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p><h1 id="2-paper"><a href="#2-Paper" class="headerlink" title="2 Paper:"></a>2 Paper:</h1><p>1.<a href="https://link.springer.com/article/10.1186/s12889-018-5615-2" target="_blank" rel="external">Outdoor air pollution, green space, and cancer incidence in Saxony: A semi-individual cohort study/萨克森州的室外空气污染，绿色空间和癌症发病率：半个体的队列研究</a>。</p><p>这是目前比较有意思的一个方向，空气污染的人群暴露、绿色空间与疾病三者的关系。使用的是萨克森州的保健数据（主要研究了口腔和咽喉，皮肤——非黑色素瘤皮肤癌 - NMSC的癌症事件（2010-2014），前列腺癌，乳腺癌和结肠直肠癌等疾病），室外空气污染主要考虑PM10和NO2，绿色空间使用NDVI做表征，模型选用的是多层次泊松回归模型。结论主要是高空气污染会增加癌症患病风险，而增加住宅绿色空间则可以降低。</p><p>2.<a href="https://arxiv.org/abs/1802.07452" target="_blank" rel="external">Spatial Morphing Kernel Regression For Feature Interpolation/基于空间变形核回归的高维特征空间插值</a></p><p>针对近年来兴起的带有地理标记的社交媒体数据——也就是志愿者地理信息数据（Volunteer Geographical Information，VGI）。这次用的是Flickr数据。首先是基于卷积神经网络（CNN）提取了Flickr图片的高维特征，然后针对提取的特征进行空间插值。比较了IDW，核回归（高斯核和空间变形核）不同插值方法的结果（以parcel classification结果为例）。</p><p>3.<a href="http://journals.sagepub.com/doi/full/10.1177/0308518X18786250" target="_blank" rel="external">Social media data as a proxy for hourly fine-scale electric power consumption estimation/社交媒体数据作为小时级精细电力消耗估计的辅助数据</a></p><p>准确预测电力需求对现代电力系统的运行至关重要。不准确的负荷预测将显着影响电网效率。预测一个小区域（如建筑物）的电力需求长期以来一直是众所周知的挑战。这项研究分析了带有地理标记的推文与每小时电力消耗之间的关联。检索所有可用的带有地理标记的推文和电表读数，并在空间上汇总到研究区域中的每个建筑物。人类活动指标（推文所反映的）与电力消耗之间存在高度相关性，相关系数超过0.8。非常有意思的研究。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近发现需要在快速阅读背景下，对快餐式资源做整理与收集。以Coding（以Github）和Paper（自己看到的一些论文，论文一般主要看题目和摘要做些简单小结）的资源为主。
    
    </summary>
    
      <category term="Personal" scheme="https://giserdaishaoqing.github.io/categories/Personal/"/>
    
    
      <category term="Consideration of Ecology and Geography" scheme="https://giserdaishaoqing.github.io/tags/Consideration-of-Ecology-and-Geography/"/>
    
      <category term="Summary" scheme="https://giserdaishaoqing.github.io/tags/Summary/"/>
    
      <category term="Theory" scheme="https://giserdaishaoqing.github.io/tags/Theory/"/>
    
  </entry>
  
  <entry>
    <title>R语言字符串处理的一次经历</title>
    <link href="https://giserdaishaoqing.github.io/2018/06/05/R%E8%AF%AD%E8%A8%80%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%A4%84%E7%90%86%E7%9A%84%E4%B8%80%E6%AC%A1%E7%BB%8F%E5%8E%86/"/>
    <id>https://giserdaishaoqing.github.io/2018/06/05/R语言字符串处理的一次经历/</id>
    <published>2018-06-04T16:00:00.000Z</published>
    <updated>2018-06-05T07:02:43.728Z</updated>
    
    <content type="html"><![CDATA[<script src="\assets\js\APlayer.min.js"> </script><p>最近笔者在研读一些文献，发现了Remote Sensing of Environment上的一期Special Issues。这一期可以说是地学上Data Assimilation较为经典的研究吧。所以也是目前研读的重点。当然也是有些其他需求，现在想对这一期专刊的作者与客座编辑做些分析探讨。涉及到一些R语言的字符串处理方式。这里记录下。<a id="more"></a> </p><h1 id="1-数据描述"><a href="#1-数据描述" class="headerlink" title="1 数据描述"></a>1 数据描述</h1><p>数据就比较简单了。一共两个数据。第一个数据如下。</p><p><img src="http://upload-images.jianshu.io/upload_images/3229757-bb0733fcc1f01b12?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p><p>主要包括Title和Author两列，这个数据我命名为RSEDAPaper.xlsx文件。</p><p>第二个数据如下。</p><p><img src="http://upload-images.jianshu.io/upload_images/3229757-5c5f8d1f1569ad37?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p><p>主要包括EditorBoard，这个数据我命名为EditorBoard.xlsx文件。</p><h1 id="2-问题描述与思路"><a href="#2-问题描述与思路" class="headerlink" title="2 问题描述与思路"></a>2 问题描述与思路</h1><p>我其实想了解Remote Sensing of Environment这一期专刊里，Editor Board参与的文章数量有几篇？所以这就涉及到两个处理，第一步是首先要对Author的字段进行分割成单独的作者，第二步是与EditorBoard的数据做匹配。</p><h1 id="3-r语言实现"><a href="#3-R语言实现" class="headerlink" title="3 R语言实现"></a>3 R语言实现</h1><p>第一步首先要把用R语言将数据读入到内存里。由于我存的都是Excel文件，就需要用到openxlsx包。之前我已经介绍过如何在R里读取Excel文件。详情请见下文链接。</p><p><a href="https://giserdaishaoqing.github.io/2017/03/22/R%E8%AF%AD%E8%A8%80%E8%AF%BB%E5%8F%96Excel%E7%9A%84%E7%A5%9E%E5%99%A8%E2%80%94%E2%80%94openxlsx/">R语言读取Excel的神器——openxlsx</a></p><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">library</span>(openxlsx)</div><div class="line">basepath &lt;- <span class="string">"E:/RSEDA/"</span></div><div class="line">RSEDA &lt;- read.xlsx(paste(basepath, <span class="string">"RSEDAPaper.xlsx"</span>, sep = <span class="string">""</span>))</div><div class="line">Editor &lt;- read.xlsx(paste(basepath, <span class="string">"EditorBoard.xlsx"</span>, sep = <span class="string">""</span>))</div></pre></td></tr></table></figure><p>basepath是你存放数据的路径，根据具体情况来处理。</p><p>接下来就是涉及到第一步处理，我们首先将Author这种一长串的数据进行分割。</p><p><img src="http://upload-images.jianshu.io/upload_images/3229757-57b6554f743553ce?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p><p>其实这种论文的作者名是比较好分割的，直接使用”,”分割即可。使用的R语言函数是strsplit。输入函数最主要包括两个，一个是字符串，一个是分割符号。样例如下：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">a &lt;- RSEDA$Author[<span class="number">2</span>]</div><div class="line">a</div><div class="line">a &lt;- unlist(strsplit(a, split = <span class="string">","</span>))</div><div class="line">a</div></pre></td></tr></table></figure><p>两次输出分别为：</p><p><img src="http://upload-images.jianshu.io/upload_images/3229757-fd4f24a37ac479eb?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p><p><img src="http://upload-images.jianshu.io/upload_images/3229757-0465731ed9060786?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p><p>可以发现已经成功做了分割，使得变成了7个作者单独的一个向量，当然如果你的字符串连接方式不是”,”，你只需要在split的等号后面进行修改。而作者个数不相同的情况下，这样子如何存储呢？这时候就用到了R里的一个特殊存储结构：列表。列表很适合存储这种长度不一的一些数据。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">authorlist &lt;- list()</div><div class="line"><span class="keyword">for</span> (i <span class="keyword">in</span> <span class="number">1</span>:nrow(RSEDA)) &#123;</div><div class="line">  authors &lt;- RSEDA$Author[i]</div><div class="line">  authors &lt;- unlist(strsplit(authors, split = <span class="string">","</span>))</div><div class="line">  authorlist[[i]] &lt;- authors</div><div class="line">&#125;</div><div class="line">authorlist</div></pre></td></tr></table></figure><p><img src="http://upload-images.jianshu.io/upload_images/3229757-5dc69ae1d1d38af8?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p><p>可以发现很好的存储起来了，当然还有个小问题。由于英文的一些空格的原因，导致有些作者前后多了空格。所以做下一步匹配之前需要对这个进行处理，这里用的是stringr包。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">library</span>(stringr)</div><div class="line">b &lt;- <span class="string">" John M. Morrison "</span></div><div class="line">str_trim(b, <span class="string">"both"</span>)</div></pre></td></tr></table></figure><p><img src="http://upload-images.jianshu.io/upload_images/3229757-a59af0abb4c159a8?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p><p><img src="http://upload-images.jianshu.io/upload_images/3229757-251807817ef6caa1?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p><p>效果如图，side = “both”，指去除掉两边的空格，”left”和”right”则是去除左边或右边的空格。接下来只需要筛选数据做匹配。这里先生成一个跟前面authorlist一样结构的editorlist列表。然后针对每一篇文章作者分析，用一个for循环和luse获取作者个数，然后，再嵌套一个for循环，获取这一篇文章里每个作者名字，接着去除空格，然后是匹配，ifelse语句的含义是表示，如果这个作者名字有出现在Editor Board里，就输出1，如果没有输出0。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">editorlist &lt;- list()</div><div class="line">editorlist &lt;- authorlist</div><div class="line"><span class="keyword">for</span> (i <span class="keyword">in</span> <span class="number">1</span>:nrow(RSEDA)) &#123;</div><div class="line">  luse &lt;- length(authorlist[[i]])</div><div class="line">  <span class="keyword">for</span> (m <span class="keyword">in</span> <span class="number">1</span>:luse) &#123;</div><div class="line">    deauthor &lt;- authorlist[[i]][m]</div><div class="line">    deauthor &lt;- str_trim(deauthor, <span class="string">'both'</span>)</div><div class="line">    editorlist[[i]][m] &lt;- ifelse(deauthor%<span class="keyword">in</span>%Editor$EditorBoard, <span class="number">1</span>, <span class="number">0</span>)</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p><img src="http://upload-images.jianshu.io/upload_images/3229757-1859d4d07bf7e2ff?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p><p>输出结果如图。接着对每一篇文章统计，是否有Editor Board，有的话是1，没有的话是0。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">RSEDA$editor &lt;- <span class="number">1</span></div><div class="line"><span class="keyword">for</span> (i <span class="keyword">in</span> <span class="number">1</span>:nrow(RSEDA)) &#123;</div><div class="line">  RSEDA$editor[i] &lt;- ifelse(<span class="string">"1"</span>%<span class="keyword">in</span>%editorlist[[i]], <span class="number">1</span>, <span class="number">0</span>) </div><div class="line">&#125;</div></pre></td></tr></table></figure><p>先生成了一个字段editor表示是否有Editor Board，默认值为1。而接着就是对每一行分析，这里每一行，是否有含”1”，有的话，即为有Editor Board。</p><p>事实上分析结果显示，这一期专刊里居然一个Editor Board也没有参与文章发表。也是蛮奇怪的。后期可能会针对这些文献做些介绍。这一期的R语言处理的步骤也可以用到其他部分，其实主要是字符串分割，去除空格以及简单的包含处理。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近笔者在研读一些文献，发现了Remote Sensing of Environment上的一期Special Issues。这一期可以说是地学上Data Assimilation较为经典的研究吧。所以也是目前研读的重点。当然也是有些其他需求，现在想对这一期专刊的作者与客座编辑做些分析探讨。涉及到一些R语言的字符串处理方式。这里记录下。
    
    </summary>
    
      <category term="Coding" scheme="https://giserdaishaoqing.github.io/categories/Coding/"/>
    
    
      <category term="R" scheme="https://giserdaishaoqing.github.io/tags/R/"/>
    
  </entry>
  
  <entry>
    <title>MODIS数据的简介和下载（六）——基于浏览器模拟登陆下载的方式以及D3L Tool开发</title>
    <link href="https://giserdaishaoqing.github.io/2018/05/18/MODIS%E6%95%B0%E6%8D%AE%E7%9A%84%E7%AE%80%E4%BB%8B%E5%92%8C%E4%B8%8B%E8%BD%BD%EF%BC%88%E5%85%AD%EF%BC%89%E2%80%94%E2%80%94%E5%9F%BA%E4%BA%8E%E6%B5%8F%E8%A7%88%E5%99%A8%E6%A8%A1%E6%8B%9F%E7%99%BB%E9%99%86%E4%B8%8B%E8%BD%BD%E7%9A%84%E6%96%B9%E5%BC%8F%E4%BB%A5%E5%8F%8AD3L%20Tool%E5%BC%80%E5%8F%91/"/>
    <id>https://giserdaishaoqing.github.io/2018/05/18/MODIS数据的简介和下载（六）——基于浏览器模拟登陆下载的方式以及D3L Tool开发/</id>
    <published>2018-05-17T16:00:00.000Z</published>
    <updated>2018-05-29T02:14:07.134Z</updated>
    
    <content type="html"><![CDATA[<script src="\assets\js\APlayer.min.js"> </script><p>接上文，由于NASA官方弃用了FTP改用HTTPS服务，所以关于MODIS数据的下载方式有所改变。完整系列博客可以参照以下链接。本篇主要介绍的是我自己写的一个下载方式，以及我为了方便大家下载开发的一个带图形界面的下载工具。</p><p><a href="https://giserdaishaoqing.github.io/2017/04/13/MODIS%E6%95%B0%E6%8D%AE%E7%9A%84%E7%AE%80%E4%BB%8B%E5%92%8C%E4%B8%8B%E8%BD%BD%EF%BC%88%E4%B8%80%EF%BC%89%E2%80%94%E2%80%94MODIS%E6%95%B0%E6%8D%AE%E7%AE%80%E4%BB%8B/">MODIS数据的简介和下载（一）——MODIS数据简介</a></p><p><a href="https://giserdaishaoqing.github.io/2017/04/14/MODIS%E6%95%B0%E6%8D%AE%E7%9A%84%E7%AE%80%E4%BB%8B%E5%92%8C%E4%B8%8B%E8%BD%BD%EF%BC%88%E4%BA%8C%EF%BC%89%E2%80%94%E2%80%94MODIS%E6%95%B0%E6%8D%AE%E4%B8%8B%E8%BD%BD%E6%96%B9%E5%BC%8F%EF%BC%88FTP%EF%BC%89/">MODIS数据的简介和下载（二）——MODIS数据下载方式（FTP）</a></p><p><a href="https://giserdaishaoqing.github.io/2017/04/15/MODIS%E6%95%B0%E6%8D%AE%E7%9A%84%E7%AE%80%E4%BB%8B%E5%92%8C%E4%B8%8B%E8%BD%BD%EF%BC%88%E4%B8%89%EF%BC%89%E2%80%94%E2%80%94MODIS%E6%95%B0%E6%8D%AE%E4%B8%8B%E8%BD%BD%E6%96%B9%E5%BC%8F%EF%BC%88%E5%9F%BA%E4%BA%8EMODIS%20Web%20Service%EF%BC%89/">MODIS数据的简介和下载（三）——MODIS数据下载方式（基于MODIS Web Service）</a></p><p><a href="https://giserdaishaoqing.github.io/2018/01/18/MODIS%E6%95%B0%E6%8D%AE%E7%9A%84%E7%AE%80%E4%BB%8B%E5%92%8C%E4%B8%8B%E8%BD%BD%EF%BC%88%E7%95%AA%E5%A4%96%E7%AF%87%EF%BC%89%E2%80%94%E2%80%94MODIS%20Web%20Service%E7%9A%84Python%E5%AE%A2%E6%88%B7%E7%AB%AF%E5%BA%94%E7%94%A8/">MODIS数据的简介和下载（番外篇）——MODIS Web Service的Python客户端应用</a></p><p><a href="https://giserdaishaoqing.github.io/2018/04/22/MODIS%E6%95%B0%E6%8D%AE%E7%9A%84%E7%AE%80%E4%BB%8B%E5%92%8C%E4%B8%8B%E8%BD%BD%EF%BC%88%E5%9B%9B%EF%BC%89%E2%80%94%E2%80%94HTTPS%E6%9C%8D%E5%8A%A1%E4%B8%8B%E8%BD%BD%E8%AF%B4%E6%98%8E/">MODIS数据的简介和下载（四）——HTTPS服务下载说明</a></p><p><a href="https://giserdaishaoqing.github.io/2018/04/23/MODIS%E6%95%B0%E6%8D%AE%E7%9A%84%E7%AE%80%E4%BB%8B%E5%92%8C%E4%B8%8B%E8%BD%BD%EF%BC%88%E4%BA%94%EF%BC%89%E2%80%94%E2%80%94%E5%BA%94%E7%94%A8%E5%AF%86%E9%92%A5%E7%9A%84Python%E8%84%9A%E6%9C%AC%E4%B8%8B%E8%BD%BD/">MODIS数据的简介和下载（五）——应用密钥的Python脚本下载</a></p><a id="more"></a> <h1 id="1-基于nasa官方脚本封装的exe"><a href="#1-基于NASA官方脚本封装的exe" class="headerlink" title="1 基于NASA官方脚本封装的exe"></a>1 基于NASA官方脚本封装的exe</h1><p>这应该是近段时间MODIS数据的最后一篇系列，如果有新的内容我会继续更新。废话不多说，事实上基于Python的脚本下载，可能还是有很多小伙伴们不是很能get。毕竟也是门编程语言，就像下图。</p><p><img src="http://upload-images.jianshu.io/upload_images/3229757-c9ebc1968aa142a2?imageMogr2/auto-orient/strip" alt="image"></p><p>为此，为了方便大家使用这个脚本下载，我用pyinstaller对NASA官方提供的官方下载脚本做了封装，变成了可以在Windows上运行的exe。盗用了下nasa的图标（后面有空我会顺带来介绍下pyinstaller）。</p><p><img src="http://upload-images.jianshu.io/upload_images/3229757-ed2785f676a72408?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image"></p><p>这样子，无需python环境也可以运行程序。如果是win10，会有传统的CMD和Powershell两个窗口，按住shift右击可以打开的是Powershell，如果是win7的话，就是CMD窗口，这里都讲述下怎么使用。</p><p><img src="http://upload-images.jianshu.io/upload_images/3229757-faf47ce5848e14d2?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image"></p><p>打开Powershell窗口之后，在窗口上输入如下命令。即如图所示。其余的命令行跟上一篇教程提到的一样。这里就不赘述了。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">.\nasa.exe -h</div></pre></td></tr></table></figure><p><img src="https://upload-images.jianshu.io/upload_images/3229757-ee32fca0ed61b549.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p><p>win10（包括win7）如果打开CMD窗口。通常需要先定位到这个exe所在路径（F：/MODISDownload）。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">cd DIR(eg. F:/MODISDownload)</div><div class="line">F:</div></pre></td></tr></table></figure><p>这样就定位到了exe所在路径。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">nasa.exe -h</div><div class="line">nasa -h</div></pre></td></tr></table></figure><p>在CMD中上述两个语句都可以，都是查询帮助语句。下载的语句可以见上文。</p><p><img src="https://upload-images.jianshu.io/upload_images/3229757-f6172800ad4ed24d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p><p>如果需要这个exe，可以在下面的百度网盘链接下载。</p><p><a href="https://pan.baidu.com/s/1BajMxbUrweaihyidsrS5Rw" target="_blank" rel="external">nasa.exe</a></p><h1 id="2-基于浏览器模拟登陆下载与d3ltool开发"><a href="#2-基于浏览器模拟登陆下载与D3LTool开发" class="headerlink" title="2 基于浏览器模拟登陆下载与D3LTool开发"></a>2 基于浏览器模拟登陆下载与D3LTool开发</h1><p>当然对于我封装的这个exe，依旧是个基于命令行的程序，可能大家还是不甚喜爱。基于这个原因，我最近花了一小点时间，开发了一个小的GUI软件，我把它称为D3L Tool of NASA Satellite。主要功能就是针对LAADS系列的卫星影像的下载。</p><p>软件整体界面如下：</p><p><img src="http://upload-images.jianshu.io/upload_images/3229757-1f5a5b041384996d?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image"></p><p>主要功能就是两个下载，一个是使用NASA脚本下载，一个是使用谷歌浏览器下载。NASA脚本下载功能的原理其实就是调用了上面的nasa.exe下载。你只需要填入所需要的数据url地址，下载路径以及你的token再点击下载即可。相比于命令行可能更友好些吧。而使用谷歌浏览器下载的方式，是我自己想到的批量下载方式（前面的博客也有提到），其实就是通过selenium这个自动化测试的神器（后面有空也会聊一聊这个东西），打开浏览器，模拟登陆NASA Earthdata账户，然后自动下载所有数据。所需要填入的就是用户名，密码，订单号和下载路径。但是由于谷歌浏览器和selenium的一些问题，下载路径在软件里面修改是无效的，必须得从你电脑上的谷歌浏览器的设置里进行修改。才能让所有下载的卫星影像数据存储到制定路径里。否则就是默认的谷歌浏览器下载路径。</p><p>具体的功能我就不详细介绍了，我已经在建立了这个软件的一个官方网站，具体的使用教程和软件下载链接都在下面的官网里。</p><p><a href="https://giserdaishaoqing.github.io/D3LTool/">D3L Tool of NASA Satellite</a></p><p>也提供了多个版本的下载（当前仅支持Windows上的版本）。</p><p><img src="http://upload-images.jianshu.io/upload_images/3229757-d83b3c8ad31cbcb2?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image"></p><p>如果有什么问题欢迎在github上提交issues或者邮件联系我，如果你觉得不错的话，也欢迎star。</p><p>最后附上两张软件下载中的截图。</p><p><img src="http://upload-images.jianshu.io/upload_images/3229757-40d7b28de9e012e3?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image"></p><p><img src="http://upload-images.jianshu.io/upload_images/3229757-5bedc196644d4aae?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;接上文，由于NASA官方弃用了FTP改用HTTPS服务，所以关于MODIS数据的下载方式有所改变。完整系列博客可以参照以下链接。本篇主要介绍的是我自己写的一个下载方式，以及我为了方便大家下载开发的一个带图形界面的下载工具。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://giserdaishaoqing.github.io/2017/04/13/MODIS%E6%95%B0%E6%8D%AE%E7%9A%84%E7%AE%80%E4%BB%8B%E5%92%8C%E4%B8%8B%E8%BD%BD%EF%BC%88%E4%B8%80%EF%BC%89%E2%80%94%E2%80%94MODIS%E6%95%B0%E6%8D%AE%E7%AE%80%E4%BB%8B/&quot;&gt;MODIS数据的简介和下载（一）——MODIS数据简介&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://giserdaishaoqing.github.io/2017/04/14/MODIS%E6%95%B0%E6%8D%AE%E7%9A%84%E7%AE%80%E4%BB%8B%E5%92%8C%E4%B8%8B%E8%BD%BD%EF%BC%88%E4%BA%8C%EF%BC%89%E2%80%94%E2%80%94MODIS%E6%95%B0%E6%8D%AE%E4%B8%8B%E8%BD%BD%E6%96%B9%E5%BC%8F%EF%BC%88FTP%EF%BC%89/&quot;&gt;MODIS数据的简介和下载（二）——MODIS数据下载方式（FTP）&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://giserdaishaoqing.github.io/2017/04/15/MODIS%E6%95%B0%E6%8D%AE%E7%9A%84%E7%AE%80%E4%BB%8B%E5%92%8C%E4%B8%8B%E8%BD%BD%EF%BC%88%E4%B8%89%EF%BC%89%E2%80%94%E2%80%94MODIS%E6%95%B0%E6%8D%AE%E4%B8%8B%E8%BD%BD%E6%96%B9%E5%BC%8F%EF%BC%88%E5%9F%BA%E4%BA%8EMODIS%20Web%20Service%EF%BC%89/&quot;&gt;MODIS数据的简介和下载（三）——MODIS数据下载方式（基于MODIS Web Service）&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://giserdaishaoqing.github.io/2018/01/18/MODIS%E6%95%B0%E6%8D%AE%E7%9A%84%E7%AE%80%E4%BB%8B%E5%92%8C%E4%B8%8B%E8%BD%BD%EF%BC%88%E7%95%AA%E5%A4%96%E7%AF%87%EF%BC%89%E2%80%94%E2%80%94MODIS%20Web%20Service%E7%9A%84Python%E5%AE%A2%E6%88%B7%E7%AB%AF%E5%BA%94%E7%94%A8/&quot;&gt;MODIS数据的简介和下载（番外篇）——MODIS Web Service的Python客户端应用&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://giserdaishaoqing.github.io/2018/04/22/MODIS%E6%95%B0%E6%8D%AE%E7%9A%84%E7%AE%80%E4%BB%8B%E5%92%8C%E4%B8%8B%E8%BD%BD%EF%BC%88%E5%9B%9B%EF%BC%89%E2%80%94%E2%80%94HTTPS%E6%9C%8D%E5%8A%A1%E4%B8%8B%E8%BD%BD%E8%AF%B4%E6%98%8E/&quot;&gt;MODIS数据的简介和下载（四）——HTTPS服务下载说明&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://giserdaishaoqing.github.io/2018/04/23/MODIS%E6%95%B0%E6%8D%AE%E7%9A%84%E7%AE%80%E4%BB%8B%E5%92%8C%E4%B8%8B%E8%BD%BD%EF%BC%88%E4%BA%94%EF%BC%89%E2%80%94%E2%80%94%E5%BA%94%E7%94%A8%E5%AF%86%E9%92%A5%E7%9A%84Python%E8%84%9A%E6%9C%AC%E4%B8%8B%E8%BD%BD/&quot;&gt;MODIS数据的简介和下载（五）——应用密钥的Python脚本下载&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="RS" scheme="https://giserdaishaoqing.github.io/categories/RS/"/>
    
    
      <category term="MODIS" scheme="https://giserdaishaoqing.github.io/tags/MODIS/"/>
    
      <category term="Python" scheme="https://giserdaishaoqing.github.io/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>MODIS数据的简介和下载（五）——应用密钥的Python脚本下载</title>
    <link href="https://giserdaishaoqing.github.io/2018/04/23/MODIS%E6%95%B0%E6%8D%AE%E7%9A%84%E7%AE%80%E4%BB%8B%E5%92%8C%E4%B8%8B%E8%BD%BD%EF%BC%88%E4%BA%94%EF%BC%89%E2%80%94%E2%80%94%E5%BA%94%E7%94%A8%E5%AF%86%E9%92%A5%E7%9A%84Python%E8%84%9A%E6%9C%AC%E4%B8%8B%E8%BD%BD/"/>
    <id>https://giserdaishaoqing.github.io/2018/04/23/MODIS数据的简介和下载（五）——应用密钥的Python脚本下载/</id>
    <published>2018-04-22T16:00:00.000Z</published>
    <updated>2018-05-29T02:13:35.609Z</updated>
    
    <content type="html"><![CDATA[<script src="\assets\js\APlayer.min.js"> </script><p>接上文，由于NASA官方弃用了FTP改用HTTPS服务，所以关于MODIS数据的下载方式有所改变。完整系列博客可以参照以下链接。本篇主要接着上一篇没有讲完的应用密钥的脚本下载介绍。</p><p><a href="https://giserdaishaoqing.github.io/2017/04/13/MODIS%E6%95%B0%E6%8D%AE%E7%9A%84%E7%AE%80%E4%BB%8B%E5%92%8C%E4%B8%8B%E8%BD%BD%EF%BC%88%E4%B8%80%EF%BC%89%E2%80%94%E2%80%94MODIS%E6%95%B0%E6%8D%AE%E7%AE%80%E4%BB%8B/">MODIS数据的简介和下载（一）——MODIS数据简介</a></p><p><a href="https://giserdaishaoqing.github.io/2017/04/14/MODIS%E6%95%B0%E6%8D%AE%E7%9A%84%E7%AE%80%E4%BB%8B%E5%92%8C%E4%B8%8B%E8%BD%BD%EF%BC%88%E4%BA%8C%EF%BC%89%E2%80%94%E2%80%94MODIS%E6%95%B0%E6%8D%AE%E4%B8%8B%E8%BD%BD%E6%96%B9%E5%BC%8F%EF%BC%88FTP%EF%BC%89/">MODIS数据的简介和下载（二）——MODIS数据下载方式（FTP）</a></p><p><a href="https://giserdaishaoqing.github.io/2017/04/15/MODIS%E6%95%B0%E6%8D%AE%E7%9A%84%E7%AE%80%E4%BB%8B%E5%92%8C%E4%B8%8B%E8%BD%BD%EF%BC%88%E4%B8%89%EF%BC%89%E2%80%94%E2%80%94MODIS%E6%95%B0%E6%8D%AE%E4%B8%8B%E8%BD%BD%E6%96%B9%E5%BC%8F%EF%BC%88%E5%9F%BA%E4%BA%8EMODIS%20Web%20Service%EF%BC%89/">MODIS数据的简介和下载（三）——MODIS数据下载方式（基于MODIS Web Service）</a></p><p><a href="https://giserdaishaoqing.github.io/2018/01/18/MODIS%E6%95%B0%E6%8D%AE%E7%9A%84%E7%AE%80%E4%BB%8B%E5%92%8C%E4%B8%8B%E8%BD%BD%EF%BC%88%E7%95%AA%E5%A4%96%E7%AF%87%EF%BC%89%E2%80%94%E2%80%94MODIS%20Web%20Service%E7%9A%84Python%E5%AE%A2%E6%88%B7%E7%AB%AF%E5%BA%94%E7%94%A8/">MODIS数据的简介和下载（番外篇）——MODIS Web Service的Python客户端应用</a></p><p><a href="https://giserdaishaoqing.github.io/2018/04/22/MODIS%E6%95%B0%E6%8D%AE%E7%9A%84%E7%AE%80%E4%BB%8B%E5%92%8C%E4%B8%8B%E8%BD%BD%EF%BC%88%E5%9B%9B%EF%BC%89%E2%80%94%E2%80%94HTTPS%E6%9C%8D%E5%8A%A1%E4%B8%8B%E8%BD%BD%E8%AF%B4%E6%98%8E/">MODIS数据的简介和下载（四）——HTTPS服务下载说明</a><br><a id="more"></a> </p><h1 id="1-官方教程与说明"><a href="#1-官方教程与说明" class="headerlink" title="1 官方教程与说明"></a>1 官方教程与说明</h1><p><a href="https://ladsweb.modaps.eosdis.nasa.gov/tools-and-services/data-download-scripts/#requesting" target="_blank" rel="external">LAADS Data Download Scripts</a></p><p>接着上文的部分往下，上一篇博客已经讲了一小部分应用密钥。本篇主要针对以下部分介绍（红框部分）。</p><p><img src="http://upload-images.jianshu.io/upload_images/3229757-ac709987ed77b014?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image"></p><h2 id="1-应用密钥"><a href="#1-应用密钥" class="headerlink" title="1 应用密钥"></a>1 应用密钥</h2><h3 id="1-申请一个应用密钥"><a href="#1-申请一个应用密钥" class="headerlink" title="1 申请一个应用密钥"></a>1 申请一个应用密钥</h3><p>任何注册了Earthdata账户(<a href="https://urs.earthdata.nasa.gov/profile" target="_blank" rel="external">注册链接</a>)的人都可以申请应用密钥。通过以下步骤就可以申请一个应用密钥。</p><p>1.首先转到对应的页面：<a href="https://ladsweb.modaps.eosdis.nasa.gov/" target="_blank" rel="external">LAADS DAAC</a>，登陆Earthdata。<br>2.接着点击Profile→App Keys（见截图）。<br>3.通过输入你对keys的描述并且点击 “Create New App Key”按钮创建一个新的应用密钥。</p><p><img src="http://upload-images.jianshu.io/upload_images/3229757-ef2c37528be2c6f4?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image"></p><p><img src="http://upload-images.jianshu.io/upload_images/3229757-43e5faa4facd8622?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image"></p><p><img src="http://upload-images.jianshu.io/upload_images/3229757-3112780e65b3784c?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image"></p><p>当然如果以前你就有应用密钥，但是你忘记了，那就按照如下的步骤操作：<br>1.登陆Earthdata（同上）。<br>2.接着点击Profile→App Keys（同上）。<br>3.复制你的密钥。</p><p>总的来说这个操作跟国内百度地图、高德地图API也没太大差别。</p><h3 id="2-我有一个应用密钥后应该怎么样呢"><a href="#2-我有一个应用密钥后，应该怎么样呢" class="headerlink" title="2 我有一个应用密钥后，应该怎么样呢?"></a>2 我有一个应用密钥后，应该怎么样呢?</h3><p>应用密钥可以通过HTTPS GET服务请求数据。关于HTTPS的GET和POST服务，可以看一下我找的几个帖子吧，对于做过爬虫，调用过API的人应该不陌生。</p><p><a href="http://www.w3school.com.cn/tags/html_ref_httpmethods.asp" target="_blank" rel="external">HTTP 方法：GET 对比 POST</a><br><a href="https://www.zhihu.com/question/28586791" target="_blank" rel="external">知乎：get和post区别？</a></p><p>官方给了个样例，是用“curl”命令行工具来创建带请求的URL。</p><p><a href="https://ladsweb.modaps.eosdis.nasa.gov/PATH_TO_MY_FILE" target="_blank" rel="external">https://ladsweb.modaps.eosdis.nasa.gov/PATH_TO_MY_FILE</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">curl -v -H &apos;Authorization: Bearer MY_APP_KEY&apos; &apos;https://ladsweb.modaps.eosdis.nasa.gov/PATH_TO_MY_FILE&apos; &gt; result</div></pre></td></tr></table></figure><p>-v和-H属于附加的设置命令。</p><p>curl是个适用于所有操作系统的命令行工具。<a href="https://baike.baidu.com/item/curl/10098606?fr=aladdin" target="_blank" rel="external">curl简介</a>，也就是说通过curl可以下载对应订单的数据。</p><p>它给出了使用这个方式下载的一些要点：</p><p>1.所有的字符串都很重要，包括破折号、冒号和引号；<br>2.将’MY_APP_KEY’替换成你的应用密钥；<br>3.把“PATH_TO_MY_FILE”替换成你所需要的文件的路径。<br>4.通常LAADS DAAC的文件路径像下面的形式：</p><p>archive/allData/COLLECTION/PRODUCT/YEAR/DAY_OF_YEAR/FILENAME </p><p>这里给出一个URL的示例：</p><p><a href="https://ladsweb.modaps.eosdis.nasa.gov/archive/allData/6/MOD02QKM/2007/018/MOD02QKM.A2007018.0105.006.2014227230926.hdf" target="_blank" rel="external">https://ladsweb.modaps.eosdis.nasa.gov/archive/allData/6/MOD02QKM/2007/018/MOD02QKM.A2007018.0105.006.2014227230926.hdf</a></p><p>在发送请求之后会返回给你一个2007年第18天MODIS Terra250m的大气顶层反射率产品。</p><p>笔者常用系统是Ubuntu和Windows10，这里就演示下如何用curl下载数据吧(以Ubuntu为例）。以给出的URL为样例。</p><p><a href="https://curl.haxx.se/download.html" target="_blank" rel="external">curl官网</a></p><p>Ubuntu上可以直接用apt-get install命令安装curl。网上有帖子，这里不细述了。接着按照上面所说的改写命令行，如果不要“&gt; result”，是按照原来的文件名下载。</p><p><img src="http://upload-images.jianshu.io/upload_images/3229757-d88751f3f9b1f04f?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image"></p><p><img src="http://upload-images.jianshu.io/upload_images/3229757-bfed67e584247e4b?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image"></p><p>下载中。</p><p><img src="http://upload-images.jianshu.io/upload_images/3229757-bbf2ba11c8bcd81d?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image"></p><p><img src="http://upload-images.jianshu.io/upload_images/3229757-8c6087e34f8520aa?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image"></p><p>结果数据。</p><p><img src="http://upload-images.jianshu.io/upload_images/3229757-a31d53b4fd26b4d6?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image"></p><p>Windows下的尝试不是很愉快。当然curl也不是主要下载方式，所以我就不继续探索了，如果后面有机会再来说这个吧。</p><h2 id="2-自动化"><a href="#2-自动化" class="headerlink" title="2 自动化"></a>2 自动化</h2><p>如果你需要的数据是单个文件，并且你知道它位于LAADS数据存档的路径，那么点击并下载它是很简单的。如果你需要下载的文件非常多（比如上个月整个月的VIIRS数据），你可能更愿意利用脚本来下载。因此这里给出了一些代码的示例：Shell脚本、Perl和Python版的。<br>两条警告：1.不要把全部数据下到你的硬盘。2.尽可能在你的脚本里避免错误，以防下载过多导致IP被封。</p><h2 id="3-代码示例"><a href="#3-代码示例" class="headerlink" title="3 代码示例"></a>3 代码示例</h2><p>大多数语言都可以进行HTTPS通信，下面有些样例。使用方式是点击“下载源代码”以下载或复制代码并将其粘贴到反映语言的文件中（Shell脚本为.sh，Perl为.p1.，Python为.py）。 确保为文件设置了执行权限。 最后，打开终端或使用您的首选运行时执行文件。</p><p>示例：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">perl laads-data-download.pl</div></pre></td></tr></table></figure><p>Perl我不是特别懂，本篇主要介绍Python脚本，Shell脚本也会提一下。</p><h1 id="2-使用python脚本下载"><a href="#2-使用Python脚本下载" class="headerlink" title="2 使用Python脚本下载"></a>2 使用Python脚本下载</h1><p>首先下载下来laads-data-download.py，然后放到一个文件夹里，接着打开cmd，输入如下的命令。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">python laads-data-download.py -h</div></pre></td></tr></table></figure><p><img src="http://upload-images.jianshu.io/upload_images/3229757-7213374eff1d5ea2?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image"></p><p>这句代码的意思就是，-h是指help，也就是说关于这个Python函数的使用说明。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">laads-data-download.py [-h] -s URL -d DIR -t TOK</div></pre></td></tr></table></figure><p>简单地说这个函数有几个参数需要传进去，-s就是下载源，URL就是你要下载的数据的URL路径，-d就是下载路径，也就是数据应该下载到哪个路径里，-t就是token，令牌，其实就是你的app keys。也就是说完整的运行代码应该是如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">python laads-data-download.py -s https://ladsweb.modaps.eosdis.nasa.gov/archive/orders/YOUR ORDERS ID -d Paht TO MY FILE -t MY_APP_KEYS</div></pre></td></tr></table></figure><p><img src="http://upload-images.jianshu.io/upload_images/3229757-ef0e548e06e7a0a8?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image"></p><p>第一个红框就是你订购数据的ID（如下图）。</p><p><img src="http://upload-images.jianshu.io/upload_images/3229757-f872ba54753a2c8e?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image"></p><p>第二个红框是你数据存放在电脑里的路径。</p><p>第三个红框是你的app keys。</p><p>接下来就只需要等待数据下载完即可。</p><p>顺带提下Shell脚本，也是下载laads-data-download.sh文件。事实上语法都相同。但是Shell脚本呢还需要依赖‘jq’来下载。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">./laads-data-download.sh [-h] -s URL -d PATH -t TOKEN</div></pre></td></tr></table></figure><p><img src="http://upload-images.jianshu.io/upload_images/3229757-6008006d24d423b0?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image"></p><p>‘jq’的安装用命令即可。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">apt-get install jq</div></pre></td></tr></table></figure><p><img src="http://upload-images.jianshu.io/upload_images/3229757-7adc3cddd8b0f7a5?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image"></p><p>等待下载结束。</p><p>所以事实上，Python脚本下载其实并不难。只需要替换对应的URL、路径、App Keys即可。其他的也如此，如果你懂了就可以开始尝试了。当然笔者之前还用过另一种方式来进行批量下载。接下来可能会就这个部分也来介绍一下。另外一点就目前笔者测试结果，感觉Shell脚本和Ubuntu下载速度要明显快于Python脚本和Windows。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;接上文，由于NASA官方弃用了FTP改用HTTPS服务，所以关于MODIS数据的下载方式有所改变。完整系列博客可以参照以下链接。本篇主要接着上一篇没有讲完的应用密钥的脚本下载介绍。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://giserdaishaoqing.github.io/2017/04/13/MODIS%E6%95%B0%E6%8D%AE%E7%9A%84%E7%AE%80%E4%BB%8B%E5%92%8C%E4%B8%8B%E8%BD%BD%EF%BC%88%E4%B8%80%EF%BC%89%E2%80%94%E2%80%94MODIS%E6%95%B0%E6%8D%AE%E7%AE%80%E4%BB%8B/&quot;&gt;MODIS数据的简介和下载（一）——MODIS数据简介&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://giserdaishaoqing.github.io/2017/04/14/MODIS%E6%95%B0%E6%8D%AE%E7%9A%84%E7%AE%80%E4%BB%8B%E5%92%8C%E4%B8%8B%E8%BD%BD%EF%BC%88%E4%BA%8C%EF%BC%89%E2%80%94%E2%80%94MODIS%E6%95%B0%E6%8D%AE%E4%B8%8B%E8%BD%BD%E6%96%B9%E5%BC%8F%EF%BC%88FTP%EF%BC%89/&quot;&gt;MODIS数据的简介和下载（二）——MODIS数据下载方式（FTP）&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://giserdaishaoqing.github.io/2017/04/15/MODIS%E6%95%B0%E6%8D%AE%E7%9A%84%E7%AE%80%E4%BB%8B%E5%92%8C%E4%B8%8B%E8%BD%BD%EF%BC%88%E4%B8%89%EF%BC%89%E2%80%94%E2%80%94MODIS%E6%95%B0%E6%8D%AE%E4%B8%8B%E8%BD%BD%E6%96%B9%E5%BC%8F%EF%BC%88%E5%9F%BA%E4%BA%8EMODIS%20Web%20Service%EF%BC%89/&quot;&gt;MODIS数据的简介和下载（三）——MODIS数据下载方式（基于MODIS Web Service）&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://giserdaishaoqing.github.io/2018/01/18/MODIS%E6%95%B0%E6%8D%AE%E7%9A%84%E7%AE%80%E4%BB%8B%E5%92%8C%E4%B8%8B%E8%BD%BD%EF%BC%88%E7%95%AA%E5%A4%96%E7%AF%87%EF%BC%89%E2%80%94%E2%80%94MODIS%20Web%20Service%E7%9A%84Python%E5%AE%A2%E6%88%B7%E7%AB%AF%E5%BA%94%E7%94%A8/&quot;&gt;MODIS数据的简介和下载（番外篇）——MODIS Web Service的Python客户端应用&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://giserdaishaoqing.github.io/2018/04/22/MODIS%E6%95%B0%E6%8D%AE%E7%9A%84%E7%AE%80%E4%BB%8B%E5%92%8C%E4%B8%8B%E8%BD%BD%EF%BC%88%E5%9B%9B%EF%BC%89%E2%80%94%E2%80%94HTTPS%E6%9C%8D%E5%8A%A1%E4%B8%8B%E8%BD%BD%E8%AF%B4%E6%98%8E/&quot;&gt;MODIS数据的简介和下载（四）——HTTPS服务下载说明&lt;/a&gt;&lt;br&gt;
    
    </summary>
    
      <category term="RS" scheme="https://giserdaishaoqing.github.io/categories/RS/"/>
    
    
      <category term="MODIS" scheme="https://giserdaishaoqing.github.io/tags/MODIS/"/>
    
      <category term="Python" scheme="https://giserdaishaoqing.github.io/tags/Python/"/>
    
      <category term="Shell" scheme="https://giserdaishaoqing.github.io/tags/Shell/"/>
    
  </entry>
  
  <entry>
    <title>MODIS数据的简介和下载（四）——HTTPS服务下载说明</title>
    <link href="https://giserdaishaoqing.github.io/2018/04/22/MODIS%E6%95%B0%E6%8D%AE%E7%9A%84%E7%AE%80%E4%BB%8B%E5%92%8C%E4%B8%8B%E8%BD%BD%EF%BC%88%E5%9B%9B%EF%BC%89%E2%80%94%E2%80%94HTTPS%E6%9C%8D%E5%8A%A1%E4%B8%8B%E8%BD%BD%E8%AF%B4%E6%98%8E/"/>
    <id>https://giserdaishaoqing.github.io/2018/04/22/MODIS数据的简介和下载（四）——HTTPS服务下载说明/</id>
    <published>2018-04-21T16:00:00.000Z</published>
    <updated>2018-05-29T02:12:46.881Z</updated>
    
    <content type="html"><![CDATA[<script src="\assets\js\APlayer.min.js"> </script><p>由于NASA官方MODIS服务的变化和网站的改版。所以重新来介绍下MODIS数据新的下载方式。至于数据的简介和Web Service的，不清楚的小伙伴可以去点击前面的文章回顾下（其中“MODIS数据的简介和下载（二）”一文教程由于NASA官网关闭FTP服务器的原因在最后提交数据的部分有所变化，详情见本文）。</p><p><a href="https://giserdaishaoqing.github.io/2017/04/13/MODIS%E6%95%B0%E6%8D%AE%E7%9A%84%E7%AE%80%E4%BB%8B%E5%92%8C%E4%B8%8B%E8%BD%BD%EF%BC%88%E4%B8%80%EF%BC%89%E2%80%94%E2%80%94MODIS%E6%95%B0%E6%8D%AE%E7%AE%80%E4%BB%8B/">MODIS数据的简介和下载（一）——MODIS数据简介</a></p><p><a href="https://giserdaishaoqing.github.io/2017/04/14/MODIS%E6%95%B0%E6%8D%AE%E7%9A%84%E7%AE%80%E4%BB%8B%E5%92%8C%E4%B8%8B%E8%BD%BD%EF%BC%88%E4%BA%8C%EF%BC%89%E2%80%94%E2%80%94MODIS%E6%95%B0%E6%8D%AE%E4%B8%8B%E8%BD%BD%E6%96%B9%E5%BC%8F%EF%BC%88FTP%EF%BC%89/">MODIS数据的简介和下载（二）——MODIS数据下载方式（FTP）</a></p><p><a href="https://giserdaishaoqing.github.io/2017/04/15/MODIS%E6%95%B0%E6%8D%AE%E7%9A%84%E7%AE%80%E4%BB%8B%E5%92%8C%E4%B8%8B%E8%BD%BD%EF%BC%88%E4%B8%89%EF%BC%89%E2%80%94%E2%80%94MODIS%E6%95%B0%E6%8D%AE%E4%B8%8B%E8%BD%BD%E6%96%B9%E5%BC%8F%EF%BC%88%E5%9F%BA%E4%BA%8EMODIS%20Web%20Service%EF%BC%89/">MODIS数据的简介和下载（三）——MODIS数据下载方式（基于MODIS Web Service）</a></p><p><a href="https://giserdaishaoqing.github.io/2018/01/18/MODIS%E6%95%B0%E6%8D%AE%E7%9A%84%E7%AE%80%E4%BB%8B%E5%92%8C%E4%B8%8B%E8%BD%BD%EF%BC%88%E7%95%AA%E5%A4%96%E7%AF%87%EF%BC%89%E2%80%94%E2%80%94MODIS%20Web%20Service%E7%9A%84Python%E5%AE%A2%E6%88%B7%E7%AB%AF%E5%BA%94%E7%94%A8/">MODIS数据的简介和下载（番外篇）——MODIS Web Service的Python客户端应用</a></p><p>注册了NASA官网earthdata账户的小伙伴们应该在最近都收到了NASA官网关于关闭FTP服务器的邮件，之前也有评论区的小伙伴来询问相关。今天就来介绍新的下载方式。<br><a id="more"></a> </p><h1 id="1-nasa官方邮件通知"><a href="#1-NASA官方邮件通知" class="headerlink" title="1 NASA官方邮件通知"></a>1 NASA官方邮件通知</h1><p><img src="http://upload-images.jianshu.io/upload_images/3229757-a232fa85acdbc0aa?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image"></p><p>提供的原文链接如下 。</p><p><a href="https://ladsweb.modaps.eosdis.nasa.gov/tools-and-services/data-download-scripts/" target="_blank" rel="external">LAADS Data Download Scripts</a></p><p>这个链接的目录如下：</p><p><img src="http://upload-images.jianshu.io/upload_images/3229757-cf21f33ceb3e2df4?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image"></p><p>也就是说官方提供了下载的脚本，包括Linux Shell脚本、Perl脚本和Python脚本。此时的内心OS大概是这样吧。</p><p><img src="http://upload-images.jianshu.io/upload_images/3229757-534ae00aae0953be?imageMogr2/auto-orient/strip" alt="image"></p><p>当然其实我也蛮喜欢Linux Shell脚本的。</p><p>言归正传，来介绍下这个说明的内容。</p><h1 id="2-https服务获取数据说明"><a href="#2-HTTPS服务获取数据说明" class="headerlink" title="2 HTTPS服务获取数据说明"></a>2 HTTPS服务获取数据说明</h1><h2 id="1-使用laads-daac应用密钥下载文件"><a href="#1-使用LAADS-DAAC应用密钥下载文件" class="headerlink" title="1 使用LAADS DAAC应用密钥下载文件"></a>1 使用LAADS DAAC应用密钥下载文件</h2><p>这个部分的内容主要是提了下背景原因，现在搞这个密钥的原因主要是，MODIS和VIIRS团队以及母公司都想追踪谁使用了相关数据。使用在Earthdata的账户里采用了Earthdata.Profile以及一些其他服务，这也就是说，在访问一些受限资源（Sentinel-3），必须先授权，并且登陆之后才能识别你的身份才能下载。</p><p>其实这个部分我感觉有Earthdata账户的很简单。</p><p><img src="http://upload-images.jianshu.io/upload_images/3229757-484957a84be3c398?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image"></p><p>登陆账户后，点击Edit Profile。然后页面往下。这两个数据的简介我就不提了。勾选即可完成。</p><p><img src="http://upload-images.jianshu.io/upload_images/3229757-8e26584da3d77024?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image"></p><p><img src="http://upload-images.jianshu.io/upload_images/3229757-2c2057a987e491e6?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image"></p><p>然后点击Save Profile。</p><p><img src="http://upload-images.jianshu.io/upload_images/3229757-54e15844eba6a6d3?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image"></p><p>第一步就算完成了，当然还有提到刚刚那俩数据的授权，后面还会进一步介绍。</p><h2 id="2-弃用ftp"><a href="#2-弃用FTP" class="headerlink" title="2  弃用FTP"></a>2  弃用FTP</h2><p>这部分没啥干货，回顾了FTP的辉煌一生，然后果断弃用（我想起那天夕阳下的奔跑，那是我逝去的青春）。</p><h2 id="3-通过http下载"><a href="#3-通过HTTP下载" class="headerlink" title="3 通过HTTP下载"></a>3 通过HTTP下载</h2><p>这部分干货也没啥，介绍了HTTP和HTTPS，然后说明所有数据都支持HTTPS服务下载。</p><h2 id="4-earthdata配置文件"><a href="#4-Earthdata配置文件" class="headerlink" title="4 Earthdata配置文件"></a>4 Earthdata配置文件</h2><p>需要有Earthdata Profile才能下载，看了下在注册Earthdata的时候其实就应该配置过了。</p><h2 id="5-授权"><a href="#5-授权" class="headerlink" title="5 授权"></a>5 授权</h2><p>创建Earthdata的配置文件后，你就可以请求需要下载的数据了，不同数据授权方式不同。这边给了一份表格。其实就分两类（1.MERIS和Sentinel-3；2.除了这俩之外的）。</p><table><thead><tr><th>资源</th><th style="text-align:center">说明</th></tr></thead><tbody><tr><td>MERIS或者Sentinel-3</td><td style="text-align:center">在这两个链接（<a href="https://ladsweb.modaps.eosdis.nasa.gov/archive/allData/490/?process=ftpAsHttp&amp;path=allData%2f490" target="_blank" rel="external">MERIS</a>和<a href="https://ladsweb.modaps.eosdis.nasa.gov/archive/allData/450/?process=ftpAsHttp&amp;path=allData%2f450" target="_blank" rel="external">Sentinel-3</a>）在点击勾选同意之后，跟着系统提示即可</td></tr><tr><td>其他数据</td><td style="text-align:center">根据项目理由和注册的邮件来申请资源</td></tr></tbody></table><p>这里点开MERIS和Sentinel-3的链接出现如下页面，随机点击一个数据，又跳出后面的页面。</p><p><img src="http://upload-images.jianshu.io/upload_images/3229757-7154c691c59f740c?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image"></p><p><img src="http://upload-images.jianshu.io/upload_images/3229757-fca5de805aff78cf?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image"></p><p>接着点Aggree to。</p><p><img src="http://upload-images.jianshu.io/upload_images/3229757-c2086f650c1f7054?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image"></p><p><img src="http://upload-images.jianshu.io/upload_images/3229757-b0518b1a99b7875d?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image"></p><p>接着显示。即有新的链接可以下载。</p><p><img src="http://upload-images.jianshu.io/upload_images/3229757-5305e34c9e27aae3?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image"></p><h2 id="6-应用密钥"><a href="#6-应用密钥" class="headerlink" title="6 应用密钥"></a>6 应用密钥</h2><p>这里说明了如果你只希望通过浏览器下载的用户只需登录即可，也就是说登陆完账户就可以下载了。如果你要用 脚本下载需要使用LAADS应用程序密钥才能正确授权。LAADS应用程序密钥是识别您身份呢的字符串标记。 应用程序获取HTTP GET请求。 查看下面的代码示例。</p><p>这部分的话，我打算放到下一篇来讲，因为内容可能会有点多。所以关于不懂脚本的同学也不必灰心，并非是前面所说的不懂Python就不会下数据了。通过浏览器的话，只需要登录账户即可下载数据。</p><h1 id="3-新版网站下载方式选择"><a href="#3-新版网站下载方式选择" class="headerlink" title="3 新版网站下载方式选择"></a>3 新版网站下载方式选择</h1><p>关于HTTPS服务下载，前面的步骤是一样的。具体的下载教程，请看”MODIS数据的简介和下载（二）——MODIS数据下载方式（FTP）“一文。链接在前面。唯一的差别是最后数据订单提交的时候。</p><p><img src="http://upload-images.jianshu.io/upload_images/3229757-db7f04def7e9a666?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image"></p><p>选择Pull。</p><p><img src="http://upload-images.jianshu.io/upload_images/3229757-a779c45b32dc84f8?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image"></p><p>然后Submit Order。</p><p>稍等一会，可以在Post Orders找到你的订单。</p><p><img src="http://upload-images.jianshu.io/upload_images/3229757-231a15fcc7f463e4?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image"></p><p>点击你的订单就是这样子的。</p><p><img src="http://upload-images.jianshu.io/upload_images/3229757-7b684310b3d59638?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image"></p><p>接下来只需点击我画红框的部分（打码部分是订单号）。链接会跳转到一个页面（如果你点击无法访问的话，请稍等一会再重新点击）。</p><p><img src="http://upload-images.jianshu.io/upload_images/3229757-046253400b4fe5b3?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image"></p><p>这就是你所提交的订单数据。接下来只需要鼠标点击数据即可下载。事实上，你不懂任何脚本也可以继续下载数据，只需要通过点击链接（像IDM这类下载工具可能也可以使用，我这里没有使用过）。当然如果你的数据非常多的话，一个一个点确实很头疼。而批量下载的话，就需要写点小代码了。关于官方脚本的下载以及如何批量下载，我会在后面继续发布。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;由于NASA官方MODIS服务的变化和网站的改版。所以重新来介绍下MODIS数据新的下载方式。至于数据的简介和Web Service的，不清楚的小伙伴可以去点击前面的文章回顾下（其中“MODIS数据的简介和下载（二）”一文教程由于NASA官网关闭FTP服务器的原因在最后提交数据的部分有所变化，详情见本文）。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://giserdaishaoqing.github.io/2017/04/13/MODIS%E6%95%B0%E6%8D%AE%E7%9A%84%E7%AE%80%E4%BB%8B%E5%92%8C%E4%B8%8B%E8%BD%BD%EF%BC%88%E4%B8%80%EF%BC%89%E2%80%94%E2%80%94MODIS%E6%95%B0%E6%8D%AE%E7%AE%80%E4%BB%8B/&quot;&gt;MODIS数据的简介和下载（一）——MODIS数据简介&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://giserdaishaoqing.github.io/2017/04/14/MODIS%E6%95%B0%E6%8D%AE%E7%9A%84%E7%AE%80%E4%BB%8B%E5%92%8C%E4%B8%8B%E8%BD%BD%EF%BC%88%E4%BA%8C%EF%BC%89%E2%80%94%E2%80%94MODIS%E6%95%B0%E6%8D%AE%E4%B8%8B%E8%BD%BD%E6%96%B9%E5%BC%8F%EF%BC%88FTP%EF%BC%89/&quot;&gt;MODIS数据的简介和下载（二）——MODIS数据下载方式（FTP）&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://giserdaishaoqing.github.io/2017/04/15/MODIS%E6%95%B0%E6%8D%AE%E7%9A%84%E7%AE%80%E4%BB%8B%E5%92%8C%E4%B8%8B%E8%BD%BD%EF%BC%88%E4%B8%89%EF%BC%89%E2%80%94%E2%80%94MODIS%E6%95%B0%E6%8D%AE%E4%B8%8B%E8%BD%BD%E6%96%B9%E5%BC%8F%EF%BC%88%E5%9F%BA%E4%BA%8EMODIS%20Web%20Service%EF%BC%89/&quot;&gt;MODIS数据的简介和下载（三）——MODIS数据下载方式（基于MODIS Web Service）&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://giserdaishaoqing.github.io/2018/01/18/MODIS%E6%95%B0%E6%8D%AE%E7%9A%84%E7%AE%80%E4%BB%8B%E5%92%8C%E4%B8%8B%E8%BD%BD%EF%BC%88%E7%95%AA%E5%A4%96%E7%AF%87%EF%BC%89%E2%80%94%E2%80%94MODIS%20Web%20Service%E7%9A%84Python%E5%AE%A2%E6%88%B7%E7%AB%AF%E5%BA%94%E7%94%A8/&quot;&gt;MODIS数据的简介和下载（番外篇）——MODIS Web Service的Python客户端应用&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;注册了NASA官网earthdata账户的小伙伴们应该在最近都收到了NASA官网关于关闭FTP服务器的邮件，之前也有评论区的小伙伴来询问相关。今天就来介绍新的下载方式。&lt;br&gt;
    
    </summary>
    
      <category term="RS" scheme="https://giserdaishaoqing.github.io/categories/RS/"/>
    
    
      <category term="MODIS" scheme="https://giserdaishaoqing.github.io/tags/MODIS/"/>
    
  </entry>
  
  <entry>
    <title>快速生成Github README.md的目录</title>
    <link href="https://giserdaishaoqing.github.io/2018/03/19/%E5%BF%AB%E9%80%9F%E7%94%9F%E6%88%90Github%20README.md%E7%9A%84%E7%9B%AE%E5%BD%95/"/>
    <id>https://giserdaishaoqing.github.io/2018/03/19/快速生成Github README.md的目录/</id>
    <published>2018-03-18T16:00:00.000Z</published>
    <updated>2018-03-21T07:28:13.231Z</updated>
    
    <content type="html"><![CDATA[<script src="\assets\js\APlayer.min.js"> </script><p>熟悉Github的同学可能知道创建一个Repo，通常都会生成一个README.md。好的README能增加代码的可阅读性。另外通常也可以将README作为开发文档。而这个README本身是遵循Markdown语法的，但是Markdown本身并没有绝对标准，Github的渲染方式与一些常用博客渲染方式不相同，导致在使用时有些麻烦。这里推荐一个Github上的教程。</p><p><a href="https://github.com/guodongxiaren/README/blob/master/README.md" target="_blank" rel="external">GFM教程</a></p><p><a href="http://blog.csdn.net/kaitiren/article/details/38513715" target="_blank" rel="external">GFM教程博客地址</a></p><p>事实上大部分和普通Markdown还是类似的，但是目录的语法差别蛮大，刚好对于笔者而言，最近需要在Github上文档上建立目录来使用，但是又不想写GFM的语法。这个时候刚好搜索到了一些可以用的开源代码。这里简单介绍一个目前使用的方法。<a id="more"></a></p><h1 id="1-github百度搜索结果"><a href="#1-Github-百度搜索结果" class="headerlink" title="1 Github+百度搜索结果"></a>1 Github+百度搜索结果</h1><p><img src="http://img-blog.csdn.net/20180319200230527?watermark/2/text/Ly9ibG9nLmNzZG4ubmV0L0VTQV9EU1E=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt=""></p><p>事实上解决方案还蛮多的（Github大法好）。</p><p>当时还在百度上搜索了下，找到了这个方案。</p><p><a href="https://github.com/sk1418/ghtoc" target="_blank" rel="external">ghtoc Github地址（pyhon）</a></p><p><a href="https://www.v2ex.com/t/151106" target="_blank" rel="external">ghtoc博客</a></p><h1 id="2-解决方案gh-md-toc"><a href="#2-解决方案：gh-md-toc" class="headerlink" title="2 解决方案：gh-md-toc"></a>2 解决方案：gh-md-toc</h1><p>后面发现了gh-md-toc这个神器。</p><p><a href="https://github.com/ekalinin/github-markdown-toc" target="_blank" rel="external">gh-md-toc Github地址</a></p><p>但是这个东西在Mac和Linux很友好，windows似乎不那么友好。不过这里也给了windows的解决方案。</p><p><img src="http://img-blog.csdn.net/20180319202449332?watermark/2/text/Ly9ibG9nLmNzZG4ubmV0L0VTQV9EU1E=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt=""></p><p>就是github-markdown-toc.go。</p><p><a href="https://github.com/ekalinin/github-markdown-toc.go" target="_blank" rel="external">github-markdown-toc.go Github地址</a></p><p>如果你有GO语言（又是你）的编译环境，可以尝试自己编译，如果没有，可以直接下载编译好的二进制文件。</p><p><a href="https://github.com/ekalinin/github-markdown-toc.go/releases" target="_blank" rel="external">二进制文件</a></p><p>下载下来之后，发现没有后缀名无法识别，实际上这是个exe文件，所以只需要暴力地在后面加上.exe就可以开始愉快使用了。</p><p>首先将README.md文档复制到gh-md-toc.exe的根目录下。</p><p>接着按住shift键同时右击。</p><p><img src="http://img-blog.csdn.net/20180319203002205?watermark/2/text/Ly9ibG9nLmNzZG4ubmV0L0VTQV9EU1E=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt=""></p><p>打开Powershell窗口后，直接键入。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">./gh-md-toc.exe README.md</div></pre></td></tr></table></figure><p><img src="http://img-blog.csdn.net/2018031920320553?watermark/2/text/Ly9ibG9nLmNzZG4ubmV0L0VTQV9EU1E=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt=""></p><p>接下来只需将这段话复制粘贴到README.md里面即可。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;熟悉Github的同学可能知道创建一个Repo，通常都会生成一个README.md。好的README能增加代码的可阅读性。另外通常也可以将README作为开发文档。而这个README本身是遵循Markdown语法的，但是Markdown本身并没有绝对标准，Github的渲染方式与一些常用博客渲染方式不相同，导致在使用时有些麻烦。这里推荐一个Github上的教程。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/guodongxiaren/README/blob/master/README.md&quot;&gt;GFM教程&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://blog.csdn.net/kaitiren/article/details/38513715&quot;&gt;GFM教程博客地址&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;事实上大部分和普通Markdown还是类似的，但是目录的语法差别蛮大，刚好对于笔者而言，最近需要在Github上文档上建立目录来使用，但是又不想写GFM的语法。这个时候刚好搜索到了一些可以用的开源代码。这里简单介绍一个目前使用的方法。
    
    </summary>
    
      <category term="Coding" scheme="https://giserdaishaoqing.github.io/categories/Coding/"/>
    
    
      <category term="Git" scheme="https://giserdaishaoqing.github.io/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>R语言高清图片输出设置</title>
    <link href="https://giserdaishaoqing.github.io/2018/03/14/R%E8%AF%AD%E8%A8%80%E9%AB%98%E6%B8%85%E5%9B%BE%E7%89%87%E8%BE%93%E5%87%BA%E8%AE%BE%E7%BD%AE/"/>
    <id>https://giserdaishaoqing.github.io/2018/03/14/R语言高清图片输出设置/</id>
    <published>2018-03-13T16:00:00.000Z</published>
    <updated>2018-03-21T07:27:46.240Z</updated>
    
    <content type="html"><![CDATA[<script src="\assets\js\APlayer.min.js"> </script><p>以ggplot2等包为基础的R语言可视化是科研人员非常喜爱的一个方式，不过我也在这个上遇到了些问题。就是导出高分辨率的图片之后，插入到word里，就显得模糊不清（压缩得非常厉害）。如果不压缩的话，word动辄100M以上。最近刚好有了一个解决方式，就来介绍下。<a id="more"></a></p><h2 id="解决方案思路rcorel-draw"><a href="#解决方案思路：R-Corel-Draw" class="headerlink" title="解决方案思路：R+Corel Draw"></a>解决方案思路：R+Corel Draw</h2><p>这也是某期刊图的修改要求，必须提供.cdr文件。当然测试后发现，.cdr输出的tif即使被压缩，也能很清晰。</p><p>这里谈谈怎么做。首先R目前是没法直接输出.cdr格式的文件的，根据网上的经验就是用emf这个格式，能够输出Corel Draw能读取的矢量文件，导入后再做些微调。</p><p>但是R输出emf没有像tiff和jpeg那样的语句，主要使用的是savePlot函数。</p><p>这里摘下R的帮助文档再来解释这个函数</p><p>Usage</p><p>savePlot(filename = “Rplot”,<br>         type = c(“wmf”, “emf”, “png”, “jpg”, “jpeg”, “bmp”,<br>                  “tif”, “tiff”, “ps”, “eps”, “pdf”),<br>         device = dev.cur(),<br>         restoreConsole = TRUE)</p><p>Arguments</p><p>filename<br>The filename under which to save the plot. Tilde-expansion (see path.expand is supported.</p><p>type<br>The type of plot, Windows metafile, PNG, JPEG, BMP (Windows bitmap format), TIFF, PostScript or PDF.</p><p>device<br>A device number of a windows device, by default the current device.</p><p>restoreConsole<br>See the ‘Details’ section of windows.</p><p>一个参数一个参数来解释吧。<br>filename：很好理解，就是你要输出的图片路径和名称，用字符串类型。如“C:/Rplot”。不必加后缀。<br>type：输出格式。<br>device：Windows设备的设备编号，默认为当前设备，这个参数。<br>restoreConsole：这个参数也是跟windows图形设备相关的。</p><p>实际使用时，后两个参数默认就可以。主要是针对前两个参数。</p><p>接下来用一个案例来展示下操作。使用的是R语言默认的mtcars数据。用plot绘图和ggplot2绘图各测试一遍。但是笔者就如网上所说在Rstudio中运行savePlot报错。</p><p><img src="http://img-blog.csdn.net/20180314235754342?watermark/2/text/Ly9ibG9nLmNzZG4ubmV0L0VTQV9EU1E=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt=""></p><p>事实上这个语句只能在原生的Rgui中运行。因此将R代码存成脚本，在Rgui中直接用source调用写好的脚本即可。</p><p>plot只需直接绘图语句。而ggplot则需要多一句print语句，才能输出图片。</p><p>运行完后，打开corel draw，按下图进行操作。</p><p><img src="http://img-blog.csdn.net/20180315001842779?watermark/2/text/Ly9ibG9nLmNzZG4ubmV0L0VTQV9EU1E=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt=""></p><p><img src="http://img-blog.csdn.net/20180315001927348?watermark/2/text/Ly9ibG9nLmNzZG4ubmV0L0VTQV9EU1E=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt=""></p><p><img src="http://img-blog.csdn.net/20180315002028603?watermark/2/text/Ly9ibG9nLmNzZG4ubmV0L0VTQV9EU1E=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt=""></p><p><img src="http://img-blog.csdn.net/20180315002149925?watermark/2/text/Ly9ibG9nLmNzZG4ubmV0L0VTQV9EU1E=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt=""></p><p><img src="http://img-blog.csdn.net/20180315002157492?watermark/2/text/Ly9ibG9nLmNzZG4ubmV0L0VTQV9EU1E=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt=""></p><p>这样就能把emf转变成全部可编辑的矢量了。</p><p>当然Rstudio也有个方法。就是使用复制到剪贴板的功能，然后粘贴到Corel Draw里面。</p><p><img src="http://img-blog.csdn.net/20180315002938540?watermark/2/text/Ly9ibG9nLmNzZG4ubmV0L0VTQV9EU1E=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt=""></p><p><img src="http://img-blog.csdn.net/2018031500295111?watermark/2/text/Ly9ibG9nLmNzZG4ubmV0L0VTQV9EU1E=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt=""></p><p>这就是将R导入到Corel Draw前期工作。相比与之前压缩得非常厉害的图片，我感觉Corel Draw输出的图片质量非常高。此外，后面搜索时，我也发现了R的一个包：<a href="https://mirrors.ustc.edu.cn/CRAN/web/packages/devEMF/devEMF.pdf" target="_blank" rel="external">devEMF: EMF Graphics Output Device</a>。可以输出emf，这样在Rstudio里也可以操作了。</p><p>参考博客：<br><a href="https://www.shengxin.ren/article/73" target="_blank" rel="external">R语言可以这么玩 |高质量图片这样导出！</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;以ggplot2等包为基础的R语言可视化是科研人员非常喜爱的一个方式，不过我也在这个上遇到了些问题。就是导出高分辨率的图片之后，插入到word里，就显得模糊不清（压缩得非常厉害）。如果不压缩的话，word动辄100M以上。最近刚好有了一个解决方式，就来介绍下。
    
    </summary>
    
      <category term="Paper" scheme="https://giserdaishaoqing.github.io/categories/Paper/"/>
    
    
      <category term="R" scheme="https://giserdaishaoqing.github.io/tags/R/"/>
    
  </entry>
  
  <entry>
    <title>天不生Tobler，万古GIS如长夜</title>
    <link href="https://giserdaishaoqing.github.io/2018/02/22/%E5%A4%A9%E4%B8%8D%E7%94%9FTobler%EF%BC%8C%E4%B8%87%E5%8F%A4GIS%E5%A6%82%E9%95%BF%E5%A4%9C/"/>
    <id>https://giserdaishaoqing.github.io/2018/02/22/天不生Tobler，万古GIS如长夜/</id>
    <published>2018-02-21T16:00:00.000Z</published>
    <updated>2018-02-22T13:27:39.154Z</updated>
    
    <content type="html"><![CDATA[<script src="\assets\js\APlayer.min.js"> </script><p>今日在QQ上惊闻Waldo Tobler老先生已于昨日过世，实乃地理学界的一大憾事，特地以此文表示深切的悼念。<a id="more"></a></p><h1 id="一"><a href="#（一）" class="headerlink" title="（一）"></a>（一）</h1><p>Waldo Tobler，生于1930年，圣塔芭芭拉加州大学（UniversityofCalifornia,SantaBarbara，简称UCSB，又常译为加州大学圣塔芭芭拉分校）退休教授，美籍瑞士地理学家，制图学家。下图的帅哥就是老爷子（文字介绍来自百度百科，图片来自维基百科）。</p><p><img src="http://img.blog.csdn.net/20180222185907382?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvRVNBX0RTUQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt=""></p><p><a href="https://baike.baidu.com/item/%E5%9C%B0%E7%90%86%E5%AD%A6%E7%AC%AC%E4%B8%80%E5%AE%9A%E5%BE%8B/2362779?fr=aladdin" target="_blank" rel="external">百度百科</a></p><p><a href="https://en.wikipedia.org/wiki/Waldo_R._Tobler" target="_blank" rel="external">维基百科</a></p><p>Tobler先生最广为人知的就是他提出的观点，也就是后来被地理学界称为地理学第一定律的“Everything is related to everything else, but near things are more related to each other”。个人的翻译为：世界上的一切事物都是相关的，但是相邻的事物相关性更大，当然有各自的翻译，整体意思是一致的，空间邻近的事物具有相关性，也就是所谓的空间自相关性。小文院士在2007年在《自然杂志》上撰文《地理学第一定律与时空邻近度的提出》，对地理学第一定律做了官方的阐释。</p><p>正如题目所言，Tobler先生对于地理学界而言是个活着的传奇，他是当今GIS与空间统计研究基础的奠基人，而这一切都因为他的地理学第一定律。无论是莫兰指数、地理加权回归、克里金插值都是建立在空间自相关的基础上衍生开来的理论。正如他在第一篇提到这个的文章所说，”As a premise, I make the assumption that everything is related to everything else.“</p><p>地理学从古代发展至今，这个古老的学科曾今因为缺乏足够的合法性，而一度濒临灭亡，很多学科都有地理学深深的印记，却又在不断发展中独立出来。而当地理学的分支学科纷纷独立时，地理学本身独立存在的合法性又何在？不同地理学派对此的争论，在1950时代引发了地理学的计量革命，以及GIS的出现，给了地理学又一次新的生命。而在计量革命与GIS出现之后，随着Tobler先生的地理学第一定律提出，GIS和地理学界重新激发了蓬勃的生命力。</p><p>所以，深切地感谢Tobler先生与他所提出的地理学第一定律。</p><p><a href="http://blog.sciencenet.cn/blog-2984-16562.html" target="_blank" rel="external">时空尺度与地表过程</a></p><p><a href="http://blog.sina.com.cn/s/blog_643115fc01011pdz.html" target="_blank" rel="external">1948-2006：哈佛大学地理系的灭亡与地理学的重生</a></p><h1 id="二"><a href="#（二）" class="headerlink" title="（二）"></a>（二）</h1><p>地理学第一定律用简介的语言描述了地理学现象的规律，中国人喜欢咬文嚼字，我曾经在早前大学给一次学弟学妹的汇报里以自己的理解解读过地理学与物理学。理者，可以翻译为规律，如此翻译而来，地理就是研究地球/地球表层事物的规律，物理就是研究事物之间的规律。</p><p>当然无非提的就是地理学的定律与物理学的定律。物理学有着牛顿三大定律，而地理学目前有两大定律（第一和第二定律，分别是讲述空间自相关性与空间异质性）。两个学科都有着一些定律，却有些不同。物理学的定律是普适性的定律，放之四海而皆准，除了二次元，你怕是在任何地方都无法脱离地心引力。而地理学的定律却不一定有那么强的普适性，之前有人将地理学第一定律的中文翻译为，世界上的一切事物都是相关的，但是相邻的事物往往相关性更大。相比于我的直白翻译，他加上了一个往往。往往也就是说是可能，而非完全确定的，也就是说有些地理现象确实不存在空间自相关性，随机分布或者均匀分布。</p><p>时至今日这依旧是被诟病的点，空间自相关性确实是地理学特征，也是空间统计仰赖基础，但是空间统计却出现了一千个作者，一千种结果的情况，随着空间权重矩阵和空间关系的变化，同一个区域的空间统计结果各不相同，甚至于今日我在Research Gate上看到的一个问题：同一个空间权重矩阵（至少他认为一样），但是STATA，R和Geoda得到的莫兰指数结果各不相同。</p><p><img src="http://img.blog.csdn.net/20180222204150162?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvRVNBX0RTUQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt=""></p><p>而我的看法是，正是因为地学现象受到诸多环境因素、人类因素、生物因素的耦合影响，导致它具有非常强的复杂性。因此如何用模型去表达一个地球表层，本身是一件很困难的事。我认为空间统计已经将地学的实质之一表达出来了，但是地球表层的复杂性使得研究人员必须在了解地球表层地理现象的大体过程的同时，选择最为适宜的空间统计方法进行分析。当然我认为空间统计依旧有很多值得完善的问题，如始终横亘在地理学面前的可变面元问题，抑或者是尺度问题，抑或者是如何实现地球表层要素的渐变与突变的表达，抑或者是老生常谈的不确定性问题。而这些则需要我们去进一步地研究与挖掘。</p><p>而到目前为止，我认为这两条定律已经很好地为我们描绘了地球表层地理现象的两大基本特性，而一些潜在的其他特性，则需要我们进一步发现和刻画，从而使得对地理现象更好的了解。</p><h1 id="三"><a href="#（三）" class="headerlink" title="（三）"></a>（三）</h1><p>从微博上道听途说Tobler老先生依旧在88岁高龄的情况下亲临博士毕业答辩现场。在去年，我在Research Gate上关注了Tobler先生，而就在去年，他更新了自己的Research Gate，依旧在提出新的东西——这回是他另一个主要的研究方向，地图制图与地理投影，Tobler先生又提出了一种新的墨卡托投影。88岁高龄的先生依旧充满着活跃的思想，我也是由衷地钦佩。</p><p>用中国人的话来说，可以说先生仙风道骨，仿佛不食人间烟火，一心只有科研。同时这又让我想起了小文院士。</p><p>曾经听中国地理学会副理事长张国友老师评价道：”地理学是一门经世致用的学科“，当时为之一振。这样的学科，也正因为有这些苦心研究的学者，而更加熠熠生辉吧。</p><p>天不生Tobler，万古GIS如长夜。</p><p>向先生以及诸多地学先驱致以最高的敬意。</p><div id="aplayer0" class="aplayer" style="margin-bottom: 20px;"></div><script>var options = {"narrow":false,"autoplay":true,"showlrc":0,"mode":"random","music":[{"title":"落叶归根","author":"王力宏","url":"http://oyo5uzjmz.bkt.clouddn.com/%E7%8E%8B%E5%8A%9B%E5%AE%8F%20-%20%E8%90%BD%E5%8F%B6%E5%BD%92%E6%A0%B9.mp3","pic":"http://oyo5uzjmz.bkt.clouddn.com/250px-Waldo_Tobler_2007.jpg"}]};options.element = document.getElementById("aplayer0");new APlayer(options);</script>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;今日在QQ上惊闻Waldo Tobler老先生已于昨日过世，实乃地理学界的一大憾事，特地以此文表示深切的悼念。
    
    </summary>
    
      <category term="Personal" scheme="https://giserdaishaoqing.github.io/categories/Personal/"/>
    
    
      <category term="Consideration of Ecology and Geography" scheme="https://giserdaishaoqing.github.io/tags/Consideration-of-Ecology-and-Geography/"/>
    
  </entry>
  
  <entry>
    <title>MODIS数据的简介和下载（番外篇）——MODIS Web Service的Python客户端应用</title>
    <link href="https://giserdaishaoqing.github.io/2018/01/18/MODIS%E6%95%B0%E6%8D%AE%E7%9A%84%E7%AE%80%E4%BB%8B%E5%92%8C%E4%B8%8B%E8%BD%BD%EF%BC%88%E7%95%AA%E5%A4%96%E7%AF%87%EF%BC%89%E2%80%94%E2%80%94MODIS%20Web%20Service%E7%9A%84Python%E5%AE%A2%E6%88%B7%E7%AB%AF%E5%BA%94%E7%94%A8/"/>
    <id>https://giserdaishaoqing.github.io/2018/01/18/MODIS数据的简介和下载（番外篇）——MODIS Web Service的Python客户端应用/</id>
    <published>2018-01-17T16:00:00.000Z</published>
    <updated>2018-01-21T04:44:40.316Z</updated>
    
    <content type="html"><![CDATA[<script src="\assets\js\APlayer.min.js"> </script><p>新年开坑第一篇，关于之前MODIS系列博客的补充和番外篇。有兴趣的同学可以去翻阅前面的文章复习。</p><p><a href="https://giserdaishaoqing.github.io/2017/04/13/MODIS%E6%95%B0%E6%8D%AE%E7%9A%84%E7%AE%80%E4%BB%8B%E5%92%8C%E4%B8%8B%E8%BD%BD%EF%BC%88%E4%B8%80%EF%BC%89%E2%80%94%E2%80%94MODIS%E6%95%B0%E6%8D%AE%E7%AE%80%E4%BB%8B/">MODIS数据的简介和下载（一）——MODIS数据简介</a></p><p><a href="https://giserdaishaoqing.github.io/2017/04/14/MODIS%E6%95%B0%E6%8D%AE%E7%9A%84%E7%AE%80%E4%BB%8B%E5%92%8C%E4%B8%8B%E8%BD%BD%EF%BC%88%E4%BA%8C%EF%BC%89%E2%80%94%E2%80%94MODIS%E6%95%B0%E6%8D%AE%E4%B8%8B%E8%BD%BD%E6%96%B9%E5%BC%8F%EF%BC%88FTP%EF%BC%89/">MODIS数据的简介和下载（二）——MODIS数据下载方式（FTP）</a></p><p><a href="https://giserdaishaoqing.github.io/2017/04/15/MODIS%E6%95%B0%E6%8D%AE%E7%9A%84%E7%AE%80%E4%BB%8B%E5%92%8C%E4%B8%8B%E8%BD%BD%EF%BC%88%E4%B8%89%EF%BC%89%E2%80%94%E2%80%94MODIS%E6%95%B0%E6%8D%AE%E4%B8%8B%E8%BD%BD%E6%96%B9%E5%BC%8F%EF%BC%88%E5%9F%BA%E4%BA%8EMODIS%20Web%20Service%EF%BC%89/">MODIS数据的简介和下载（三）——MODIS数据下载方式（基于MODIS Web Service）</a></p><p>之前有小伙伴在评论区问过我，说Matlab客户端不能用了，前一段笔者自己使用的时候发现R的客户端也挂了，去官网一看，发现MODIS官网更新了产品版本，原来的这些客户端都不支持了。当时仅剩一个Python版本的客户端（不过好消息是最近又把各个语言的客户端都更新了，习惯用Matlab或者R的同学可以继续使用）。<a id="more"></a></p><p><img src="http://img.blog.csdn.net/20180118110004092?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvRVNBX0RTUQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt=""></p><p><a href="https://modis.ornl.gov/data/modis_webservice.html" target="_blank" rel="external">Web Service客户端下载地址</a></p><p>Matlab只需要解压即可，R的MODISTools包则需要下载下来离线安装（我会把新的客户端的文件：R、Matlab、Python放到网盘共享，大家也可以在文末找链接）。</p><p>今天重点还是讲Python的客户端，点击开Python客户端下载之后是一个网页显示的文本文件。本文的Python环境是基于Anaconda的2.7.12。</p><p><img src="http://img.blog.csdn.net/20180118110015958?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvRVNBX0RTUQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt=""></p><p>将页面复制下来，存成Python文件。另外还需要安装SUDS的模块，通过pip就可以安装（前面的博客已经介绍过pip）。</p><p><a href="https://giserdaishaoqing.github.io/2017/11/29/Python%E5%BC%80%E7%AF%87%E2%80%94%E2%80%94%E7%AE%80%E4%BB%8B%E3%80%81pip%E5%92%8Cconda/">Python开篇——简介、pip和conda</a></p><p>只需要在cmd里运行pip install suds（确保你的pip在系统变量路径里）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">pip install suds</div></pre></td></tr></table></figure><p>接下来就是将下载的Python文件作为包引入即可。如何引用一个别人写好的未打包成包的Python函数？其实这里有两种方式。</p><p>一种是把别人写好的Python函数放到如下的路径’Python安装路径/Lib/site-packages’，这种方式一劳永逸，这样就等同于你安装了这个Python函数。可以随意的import。</p><p>另一种方式就是现在系统路径里加入Python函数所处的路径。具体的实现如下面的代码。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> os,sys</div><div class="line">sys.path.append(<span class="string">"MODIS Web Service的Python客户端所在路径"</span>)</div><div class="line"><span class="keyword">import</span> MODISWeb</div></pre></td></tr></table></figure><p>最后import 下载的MODIS Web Service的python文件名（我这里用的MODISWeb）即可。</p><p>使用的方式与前文的MODIS和R的客户端大体相同。</p><p><img src="http://img.blog.csdn.net/20180118112040064?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvRVNBX0RTUQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt=""></p><p><img src="http://img.blog.csdn.net/20180118113215737?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvRVNBX0RTUQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt=""></p><p><img src="http://img.blog.csdn.net/20180118113224322?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvRVNBX0RTUQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt=""></p><p>因为LAI是8天合成数据，我们想通过已有的数据进行拟合，对时间序列做个简单的预测。这里用线性回归模型进行拟合。</p><p><img src="http://img.blog.csdn.net/20180118120635290?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvRVNBX0RTUQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt=""></p><p>这里使用了sklearn里面的线性模型来训练拟合线性回归模型。</p><p>绘制回归图。</p><p><img src="http://img.blog.csdn.net/20180118120842166?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvRVNBX0RTUQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt=""></p><p><img src="http://img.blog.csdn.net/20180118120901735?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvRVNBX0RTUQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt=""></p><p>上文只是简单地对MODIS数据做些简单分析，如果拥有实测数据，则可以通过遥感数据和实测数据的拟合，实现遥感数据反演。而具体的应用就待各位进一步挖掘了。</p><p>此外，MODIS系列下载区有小伙伴问过关于MODIS16蒸散发产品的下载。这一点，有位热心小伙伴找到了最新的下载方式，这里放出博客的链接，有需要的请自取。</p><p><a href="http://blog.csdn.net/chejin4069/article/details/79028870" target="_blank" rel="external">MOD16 蒸散发数据下载</a></p><p>R、Matlab、Python客户端下载链接。</p><p><a href="https://pan.baidu.com/s/1c3DsMUO" target="_blank" rel="external">https://pan.baidu.com/s/1c3DsMUO</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;新年开坑第一篇，关于之前MODIS系列博客的补充和番外篇。有兴趣的同学可以去翻阅前面的文章复习。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://giserdaishaoqing.github.io/2017/04/13/MODIS%E6%95%B0%E6%8D%AE%E7%9A%84%E7%AE%80%E4%BB%8B%E5%92%8C%E4%B8%8B%E8%BD%BD%EF%BC%88%E4%B8%80%EF%BC%89%E2%80%94%E2%80%94MODIS%E6%95%B0%E6%8D%AE%E7%AE%80%E4%BB%8B/&quot;&gt;MODIS数据的简介和下载（一）——MODIS数据简介&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://giserdaishaoqing.github.io/2017/04/14/MODIS%E6%95%B0%E6%8D%AE%E7%9A%84%E7%AE%80%E4%BB%8B%E5%92%8C%E4%B8%8B%E8%BD%BD%EF%BC%88%E4%BA%8C%EF%BC%89%E2%80%94%E2%80%94MODIS%E6%95%B0%E6%8D%AE%E4%B8%8B%E8%BD%BD%E6%96%B9%E5%BC%8F%EF%BC%88FTP%EF%BC%89/&quot;&gt;MODIS数据的简介和下载（二）——MODIS数据下载方式（FTP）&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://giserdaishaoqing.github.io/2017/04/15/MODIS%E6%95%B0%E6%8D%AE%E7%9A%84%E7%AE%80%E4%BB%8B%E5%92%8C%E4%B8%8B%E8%BD%BD%EF%BC%88%E4%B8%89%EF%BC%89%E2%80%94%E2%80%94MODIS%E6%95%B0%E6%8D%AE%E4%B8%8B%E8%BD%BD%E6%96%B9%E5%BC%8F%EF%BC%88%E5%9F%BA%E4%BA%8EMODIS%20Web%20Service%EF%BC%89/&quot;&gt;MODIS数据的简介和下载（三）——MODIS数据下载方式（基于MODIS Web Service）&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;之前有小伙伴在评论区问过我，说Matlab客户端不能用了，前一段笔者自己使用的时候发现R的客户端也挂了，去官网一看，发现MODIS官网更新了产品版本，原来的这些客户端都不支持了。当时仅剩一个Python版本的客户端（不过好消息是最近又把各个语言的客户端都更新了，习惯用Matlab或者R的同学可以继续使用）。
    
    </summary>
    
      <category term="RS" scheme="https://giserdaishaoqing.github.io/categories/RS/"/>
    
    
      <category term="MODIS" scheme="https://giserdaishaoqing.github.io/tags/MODIS/"/>
    
      <category term="Python" scheme="https://giserdaishaoqing.github.io/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>迟到的2017总结文</title>
    <link href="https://giserdaishaoqing.github.io/2018/01/10/%E8%BF%9F%E6%9D%A5%E7%9A%842017%E6%80%BB%E7%BB%93%E6%96%87/"/>
    <id>https://giserdaishaoqing.github.io/2018/01/10/迟来的2017总结文/</id>
    <published>2018-01-09T16:00:00.000Z</published>
    <updated>2018-03-14T16:49:13.418Z</updated>
    
    <content type="html"><![CDATA[<script src="\assets\js\APlayer.min.js"> </script><p>悄然过去的2017年，仿佛还来不及说再见。突然想起那天科比球衣退役时热泪盈眶地在宿舍看直播的自己。</p><p>默默做个总结来迎接新的一年。</p><a id="more"></a><p>2017年走过的城市还蛮多的。一年下来，半年北方，半年小厦门。参加的学术活动也算不少，也算有些小成果。不过我想这一年来在github和博客上确实花了不少功夫，对于开源、编程，自己也有了更深入的了解。</p><p>2017年博客一共发了44篇博客，第一次利用github搭建了自己的主页和博客。而自己的各种博客也是基本同步。</p><p>对整体的博客内容做些梳理。</p><p>第一部分：技术实践笔记杂谈，像学了半天Fortran开始配环境的、装WRF的、Hexo和NexT优化的、装系统的。</p><p>第二部分：R语言相关的编程笔记，R算是我现在比较熟练的语言，当然去年特地为了记录公选课学习内容，连载了一系列的应用统计学与R语言实践笔记（也是github上开源了的项目，前几天被人forked了下，还有点小激动）。</p><p>第三部分：地理、生态、GIS相关的，阅读量最高的MODIS系列——其实也是源自我上课的实习内容。其实今天在回顾过去的一些基础知识，发现课堂上掌握得确实还不够，仍然需要好好温习。</p><p>第四部分：学习方面的感受，esri用户大会，定量遥感讲座。</p><p>新的一年先立些flag。</p><p>（一）机器学习笔记——最近在学习吴恩达大大的公开课，希望有所斩获。有空会更新这部分的笔记。</p><p>（二）空间统计内容——这里还是要推荐虾神的白话空间统计系列，但是我也想对之前自己学习空间统计内容做些梳理（最近正在看莫兰指数推导——嗯，死去活来），数学恐惧症就跳过吧。</p><p>（三）论文推荐和阅读——我可能会把阅读文献内容也放到博客内。</p><p>（四）研究成果推荐——虽然成果不多，但也会考虑，哈哈。</p><p>如果你们还对我的博客有啥建设性意见。欢迎留言。</p><div id="aplayer1" class="aplayer" style="margin-bottom: 20px;"></div><script>var options = {"narrow":false,"autoplay":true,"showlrc":0,"mode":"random","music":[{"title":"灌篮高手","author":"青春","url":"http://oyo5uzjmz.bkt.clouddn.com/BAAD%20-%20%E5%90%9B%E3%81%8C%E5%A5%BD%E3%81%8D%E3%81%A0%E3%81%A8%E5%8F%AB%E3%81%B3%E3%81%9F%E3%81%84.mp3","pic":"http://oyo5uzjmz.bkt.clouddn.com/SD.jpg"}]};options.element = document.getElementById("aplayer1");new APlayer(options);</script>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;悄然过去的2017年，仿佛还来不及说再见。突然想起那天科比球衣退役时热泪盈眶地在宿舍看直播的自己。&lt;/p&gt;
&lt;p&gt;默默做个总结来迎接新的一年。&lt;/p&gt;
    
    </summary>
    
      <category term="Personal" scheme="https://giserdaishaoqing.github.io/categories/Personal/"/>
    
    
      <category term="Summary" scheme="https://giserdaishaoqing.github.io/tags/Summary/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu下口袋妖怪终端主题安装</title>
    <link href="https://giserdaishaoqing.github.io/2017/12/13/Ubuntu%E4%B8%8B%E5%8F%A3%E8%A2%8B%E5%A6%96%E6%80%AA%E7%BB%88%E7%AB%AF%E4%B8%BB%E9%A2%98%E5%AE%89%E8%A3%85/"/>
    <id>https://giserdaishaoqing.github.io/2017/12/13/Ubuntu下口袋妖怪终端主题安装/</id>
    <published>2017-12-12T16:00:00.000Z</published>
    <updated>2017-12-13T02:56:08.056Z</updated>
    
    <content type="html"><![CDATA[<script src="\assets\js\APlayer.min.js"> </script><p>之前看到开源中国的文章，介绍了国内最火的开源项目——Python篇。看到一个比较有意思的项目——终端的口袋妖怪主题。之前介绍安装WRF的博客，细心的同学已经发现，我已然安装上了那个主题，今天就来介绍下Ubuntu下口袋妖怪终端主题安装吧。</p><p>先上图。</p><p><img src="http://img.blog.csdn.net/20171213094603958?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvRVNBX0RTUQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt=""><br><a id="more"></a></p><p>这回先贴出这个链接。</p><p><a href="http://mp.weixin.qq.com/s?__biz=MjM5NzM0MjcyMQ==&amp;mid=2650074431&amp;idx=1&amp;sn=fcbc725ccdd6e93db3291f769b5e3217&amp;chksm=bedb365189acbf4797a36c49c571d39ac1602a2e922b5fb0513593964d33df2816926a7bd5f4&amp;mpshare=1&amp;scene=1&amp;srcid=0924NI8OqHNo5tTNSN3iUOeB#rd" target="_blank" rel="external">可能是国内最火的开源项目——Python篇</a></p><p>还有做这个主题的github链接。</p><p><a href="https://github.com/LazoCoder/Pokemon-Terminal" target="_blank" rel="external">Pokemon-Terminal github链接</a></p><p>我用的Linux是Ubuntu，接下来就按照这个进行安装。首先这个主题支持的终端模拟器主要是以下三个：iTerm2， Terminology，Tilix。这里选择安装Tilix，首先添加这个终端模拟器仓库的公钥。这里我都是以root超级用户权限操作的，如果没有的话，请在命令前面加sudo。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">add-apt-repository ppa:webupd8team/terminix</div></pre></td></tr></table></figure><p><img src="http://img.blog.csdn.net/20171213093946118?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvRVNBX0RTUQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt=""></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">apt update</div></pre></td></tr></table></figure><p><img src="http://img.blog.csdn.net/20171213094037373?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvRVNBX0RTUQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt=""></p><p>安装Tilix。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">apt install tilix</div></pre></td></tr></table></figure><p><img src="http://img.blog.csdn.net/20171213094052000?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvRVNBX0RTUQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt=""></p><p>然后打开Tilix，并锁定到启动器。</p><p><img src="http://img.blog.csdn.net/20171213094112057?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvRVNBX0RTUQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt=""></p><p><img src="http://img.blog.csdn.net/20171213094205260?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvRVNBX0RTUQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt=""></p><p><img src="http://img.blog.csdn.net/20171213094228298?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvRVNBX0RTUQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt=""></p><p>有可能出现配置问题，建议是在bashrc中添加语句。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">if</span> [ <span class="variable">$TILIX_ID</span> ] || [ <span class="variable">$VTE_VERSION</span> ]; <span class="keyword">then</span></div><div class="line">        <span class="built_in">source</span> /etc/profile.d/vte.sh</div><div class="line"><span class="keyword">fi</span></div></pre></td></tr></table></figure><p>具体问题可参照如下网址：<br><a href="https://gnunn1.github.io/tilix-web/manual/vteconfig/" target="_blank" rel="external">终端配置</a></p><p>接下来设置配置方案。</p><p><img src="http://img.blog.csdn.net/20171213094247447?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvRVNBX0RTUQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt=""></p><p><img src="http://img.blog.csdn.net/20171213094301257?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvRVNBX0RTUQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt=""></p><p><img src="http://img.blog.csdn.net/20171213094441993?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvRVNBX0RTUQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt=""></p><p><img src="http://img.blog.csdn.net/20171213094510127?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvRVNBX0RTUQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt=""></p><p>不过下面的教程是针对该主题的1.0.7版本，目前主题已经更新到1.1.1版本。如果现在安装的话，更方便的方式是，先安装Python3.6，同时安装setuptools（推荐新立得安装），然后下载github仓库。<br>接着只需要如下的命令即可。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo python3.6 setup.py install</div></pre></td></tr></table></figure><p>下面的npm安装方式只针对之前的版本（只是顺带记录，不过现在也提供了这个方式，但还是建议上面的安装方法）<br>然后安装npm，最主要Ubuntu16.04默认有个python3.5.2，npm直接安装是跟Python版本对应，而新主题要求在3.6的Python以上，也可以考虑升级原有的Python。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">apt install npm</div></pre></td></tr></table></figure><p><img src="http://img.blog.csdn.net/20171213094525429?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvRVNBX0RTUQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt=""></p><p>接着安装pokemon-terminal。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install --global pokemon-terminal</div></pre></td></tr></table></figure><p><img src="http://img.blog.csdn.net/20171213094538815?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvRVNBX0RTUQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt=""></p><p><img src="http://img.blog.csdn.net/20171213094551512?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvRVNBX0RTUQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt=""></p><p><img src="http://img.blog.csdn.net/20171213094603958?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvRVNBX0RTUQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt=""></p><p>大功告成。</p><p>主要参考：<br><a href="https://www.maketecheasier.com/customize-linux-terminal-pokemon-skins/" target="_blank" rel="external">国外大神安装教程</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;之前看到开源中国的文章，介绍了国内最火的开源项目——Python篇。看到一个比较有意思的项目——终端的口袋妖怪主题。之前介绍安装WRF的博客，细心的同学已经发现，我已然安装上了那个主题，今天就来介绍下Ubuntu下口袋妖怪终端主题安装吧。&lt;/p&gt;
&lt;p&gt;先上图。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://img.blog.csdn.net/20171213094603958?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvRVNBX0RTUQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast&quot; alt=&quot;&quot;&gt;&lt;br&gt;
    
    </summary>
    
      <category term="Linux" scheme="https://giserdaishaoqing.github.io/categories/Linux/"/>
    
    
      <category term="Python" scheme="https://giserdaishaoqing.github.io/tags/Python/"/>
    
      <category term="Ubuntu" scheme="https://giserdaishaoqing.github.io/tags/Ubuntu/"/>
    
  </entry>
  
  <entry>
    <title>Windows和Linux双系统安装教程</title>
    <link href="https://giserdaishaoqing.github.io/2017/12/12/Windows%E5%92%8CLinux%E5%8F%8C%E7%B3%BB%E7%BB%9F%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/"/>
    <id>https://giserdaishaoqing.github.io/2017/12/12/Windows和Linux双系统安装教程/</id>
    <published>2017-12-11T16:00:00.000Z</published>
    <updated>2017-12-12T08:57:24.650Z</updated>
    
    <content type="html"><![CDATA[<script src="\assets\js\APlayer.min.js"> </script><p>最近刚刚完成了Windows和Linux双系统（这里以Ubuntu安装为例）的安装，应某奔同学要求，这里简单记录下安装过程。<a id="more"></a></p><h1 id="1-系统启动盘准备"><a href="#1-系统启动盘准备" class="headerlink" title="1 系统启动盘准备"></a>1 系统启动盘准备</h1><p>因为不想装第二个系统的时候重做系统盘，所以这里做的系统启动盘本身就是Windows和Linux双系统引导的。这里用的工具前面在docker安装笔记的时候已经介绍过：YUMI。可以翻翻前面的博客进行了解。</p><p><a href="https://giserdaishaoqing.github.io/2017/11/08/%E8%8A%B1%E5%BC%8F%E5%AE%89%E8%A3%85%E8%93%9D%E9%B2%B8%E9%B1%BC%E6%9C%AD%E8%AE%B0/">花式安装蓝鲸鱼札记</a></p><p>百度搜索的时候，要准确定位，请搜YUMI USB，如果想了解点其他的（咳咳咳），去掉USB。不过另外一点是有人推荐用EFI的版本（虽然觉得差别不大），制作系统启动盘前面的博客也介绍过了。唯一要注意的就是为了做成多引导启动，在选择windows系统制作的时候，记得选择multiboot。</p><h1 id="2-windows系统安装"><a href="#2-Windows系统安装" class="headerlink" title="2 Windows系统安装"></a>2 Windows系统安装</h1><p>Windows和Linux双系统安装，通常是选择先装Windows，然后再安装Linux，最后通过Windows引导Linux系统启动。</p><p>Windows安装是比较方便的，网上教程颇多，对于还没有系统的电脑来说，其实就是把做好的启动盘插入，然后狂按某FX键（反正视电脑型号和品牌而定）。主要是设置boot，选择从U盘启动。如果是在Windows系统下重装系统，就只需要把我们的系统盘放进去。然后双击setup.exe就好了。</p><p><img src="http://img.blog.csdn.net/20171212152926584?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvRVNBX0RTUQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt=""></p><p><img src="http://img.blog.csdn.net/20171212153015136?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvRVNBX0RTUQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt=""></p><h1 id="3-分出给linux系统的磁盘空间"><a href="#3-分出给Linux系统的磁盘空间" class="headerlink" title="3 分出给Linux系统的磁盘空间"></a>3 分出给Linux系统的磁盘空间</h1><p>安装完成之后，首先先从Windows的磁盘里面分出給Linux系统的空间。</p><p>右击”我的电脑”→”管理”→”存储”→”磁盘管理”</p><p><img src="http://img.blog.csdn.net/20171212153741669?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvRVNBX0RTUQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt=""></p><p>接下来只要选择你要分出空间的盘，右击压缩卷。这个画红圈的就是设置Linux系统的大小，1024M是1G，根据情况分区。</p><p><img src="http://img.blog.csdn.net/20171212154012546?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvRVNBX0RTUQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt=""></p><h1 id="4-安装linux系统"><a href="#4-安装Linux系统" class="headerlink" title="4 安装Linux系统"></a>4 安装Linux系统</h1><p>接下来就插入系统启动盘，重启电脑，通常系统启动盘会引导进入图形安装界面，选择Linux安装。Ubuntu这里会让你选择Win10和Ubuntu共存，还是清除Windows系统，还有一个其它选项，这里选择其它选项。接下来就是Linux系统分区了。这个分区的内容以及具体安装教程参照前面的博客，之前在虚拟机上安装Ubuntu的时候我已经提过了，这里就不详细介绍。</p><p><a href="https://giserdaishaoqing.github.io/2017/10/11/VMware%20Workstation%E4%B8%8B%E5%AE%89%E8%A3%85Ubuntu%2064%E4%BD%8D%E7%B3%BB%E7%BB%9F/">VMware Workstation下安装Ubuntu 64位系统</a></p><p>注意：分区分完了，不能直接安装，最后选用引导的选项必须改选为前面Linux分区里面的”/boot”分区。不能选U盘，也不能选其他盘。然后就可以一路安装了。最后重启电脑。</p><p>于是——你发现开起来还是Windows。嗯，主要原因需要用一个多重系统启动引导的文件，这个时候最后一个主人公就要登场了。</p><h1 id="5-easybcd安装使用"><a href="#5-EasyBCD安装使用" class="headerlink" title="5 EasyBCD安装使用"></a>5 EasyBCD安装使用</h1><p>最后一个主人公就是EasyBCD啦，这个软件是用于系统配置创建多重启动系统的引导文件，也就是新创建一个启动文件，可以让你的电脑在启动的时候，有进入何种系统的选择。</p><p><a href="https://neosmart.net/EasyBCD/" target="_blank" rel="external">EasyBCD官网地址</a></p><p>“添加新条目” -“Linux/BSD”-类型“Grub 2”驱动器“自动定位和加载”-“添加条目”</p><p><img src="http://img.blog.csdn.net/20171212160156815?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvRVNBX0RTUQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt=""></p><p><img src="http://img.blog.csdn.net/20171212160143571?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvRVNBX0RTUQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt=""></p><p>一波操作猛如虎。然后重启电脑就可以了。</p><p>最后效果。</p><p><img src="http://img.blog.csdn.net/20171212161027002?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvRVNBX0RTUQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt=""></p><p>顺带感谢一波网上大神，附上链接。</p><p><a href="https://www.zhihu.com/question/19867618" target="_blank" rel="external">知乎：怎样安装 Windows 7 与 Linux 的双系统？</a></p><p><a href="http://blog.csdn.net/jayxujia123/article/details/9729561" target="_blank" rel="external">电脑安装双系统（win+Linux）的一些重要步骤总结</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近刚刚完成了Windows和Linux双系统（这里以Ubuntu安装为例）的安装，应某奔同学要求，这里简单记录下安装过程。
    
    </summary>
    
      <category term="Linux" scheme="https://giserdaishaoqing.github.io/categories/Linux/"/>
    
    
      <category term="Ubuntu" scheme="https://giserdaishaoqing.github.io/tags/Ubuntu/"/>
    
      <category term="Windows 10" scheme="https://giserdaishaoqing.github.io/tags/Windows-10/"/>
    
  </entry>
  
  <entry>
    <title>Python开篇——简介、pip和conda</title>
    <link href="https://giserdaishaoqing.github.io/2017/11/29/Python%E5%BC%80%E7%AF%87%E2%80%94%E2%80%94%E7%AE%80%E4%BB%8B%E3%80%81pip%E5%92%8Cconda/"/>
    <id>https://giserdaishaoqing.github.io/2017/11/29/Python开篇——简介、pip和conda/</id>
    <published>2017-11-28T16:00:00.000Z</published>
    <updated>2017-11-29T03:15:47.400Z</updated>
    
    <content type="html"><![CDATA[<script src="\assets\js\APlayer.min.js"> </script><p>人生苦短，我用Python。</p><p><img src="http://img.blog.csdn.net/20171129101248580?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvRVNBX0RTUQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt=""></p><a id="more"></a><p>那我还是来介绍一下它（凑一波字数）吧。</p><p>Python（英国发音：/ˈpaɪθən/ 美国发音：/ˈpaɪθɑːn/）, 是一种面向对象的解释型计算机程序设计语言，由荷兰人Guido van Rossum于1989年发明，第一个公开发行版发行于1991年。Python是纯粹的自由软件， 源代码和解释器CPython遵循 GPL(GNU General Public License)协议。Python语法简洁清晰，特色之一是强制用空白符(white space)作为语句缩进。Python具有丰富和强大的库。它常被昵称为胶水语言，能够把用其他语言制作的各种模块（尤其是C/C++）很轻松地联结在一起。常见的一种应用情形是，使用Python快速生成程序的原型（有时甚至是程序的最终界面），然后对其中有特别要求的部分，用更合适的语言改写，比如3D游戏中的图形渲染模块，性能要求特别高，就可以用C/C++重写，而后封装为Python可以调用的扩展类库。需要注意的是在您使用扩展类库时可能需要考虑平台问题，某些可能不提供跨平台的实现。7月20日，IEEE发布2017年编程语言排行榜：Python高居首位 。</p><p><a href="https://baike.baidu.com/item/Python/407313?fr=aladdin" target="_blank" rel="external">百度百科</a></p><p>也有不少新闻提了，Python在数据科学领域位居首位。可以说接着深度学习和机器学习的火热，Python再次大热了一波，当然说Python是深度学习的语言也不准确，事实上深度学习里的Python主要是胶水语言的作用，比如大家喜闻乐见的Tensorflow，其实底层是C++，只不过提供了Python接口。</p><p>总体来说Python就是一句话，写得快，跑得慢。同样的功能实现，C和C++可能要100行，Python可能只需要10行（数字不一定准，但是能节省写的时间是真的）。同时最强大的大概是Python丰富和强大的库了（这点跟R还是蛮像的，所以都很流行）。</p><p>这里简介一些重点库。</p><h1 id="1-python常用库"><a href="#1-Python常用库" class="headerlink" title="1 Python常用库"></a>1 Python常用库</h1><p>爬虫：Scrapy（举世闻名，分布式爬虫框架，不仅仅是简单的库）、beautifulsoup4、urllib、urllib2、selenium等。</p><p>机器学习：scikit-learn（灰常牛逼的一个库，几乎所有机器学习算法都囊括了应该），NLTK（自然语言处理工具包 ）等（用一个等的原因是，说起来除了scikit-learn，我还真不知道还有啥，hhh）。</p><p>网站：Django（重量级网页框架）、Flask（轻量级网页框架）等。</p><p>数据处理科学计算：Numpy（数组矩阵神器）、Scipy（科学计算神器）、Pandas（熊猫包，R语言玩家转Python的最爱）等。</p><p>可视化：matplotlib（matlab风格式的包）、seaborn（散点图矩阵神器）、ggplot（R语言可视化神器的Python版本）、plotly（这个神器是个js库，不过也有各种流行的语言接口）等。</p><p>深度学习：<a href="https://www.zhihu.com/question/30105838?sort=created" target="_blank" rel="external">看知乎吧</a>（强行蹭一波热点，深度学习是机器学习的一部分）</p><p>地学相关：basemap（画地图的库）、cartopy（画地图的库）、Folium（leaflet的Python版本 ）、GDAL（开源GIS库）、geocoder（地理编码神器）、geopandas（地理数据的熊猫包）、geopy（还没玩过）、PySAL（空间计量经济学的一个神包）等（跟地学相关的包实在太多，后面有空的话，考虑会重点介绍几个包）。</p><p>另外这里多提两个关于ArcGIS的包，一个是arcpy，熟悉ArcGIS的同学知道，这个是ArcGIS内嵌Python的神器，可以非常方便调用ArcGIS各项功能，但是有一点就是不开源（毕竟人家是商业软件嘛，所以那些老想着在自己安装的Python上import arcpy的同学可以省省功夫了），另外多提一个Esri公司新推出的ArcGIS API for Python，这个在前面的用户大会观感上提到过，是基于portal和online的一套API，还是有些可以玩的价值，后面也会考虑介绍这个内容。</p><h1 id="2-python安装"><a href="#2-Python安装" class="headerlink" title="2 Python安装"></a>2 Python安装</h1><p>安装这个事情实在太小了。毕竟开源语言，一路next安装完毕。唯一问题可能是要配个环境变量。</p><p><a href="https://www.python.org/" target="_blank" rel="external">Python官网</a></p><p>顺带一提就是现在的2.0和3.0之争。Python 2.0到3.0过渡确实还做得一般，但是3.0有它的好处，2.0目前就是比较稳定。很多包都暂时没迁移到Python3.0上。但是最近numpy的一个通知，正在显示3.0时代的到来。</p><p><a href="https://github.com/numpy/numpy/blob/master/doc/neps/dropping-python2.7-proposal.rst" target="_blank" rel="external">numpy团队宣布2020年停止支持2.0</a></p><p>笔者自己也还是用的2.7，不过还是在考虑学习3的事情（其实也不是很麻烦），如果你刚刚起步就从3.0开始也没毛病。</p><p>当然如果为了科学计算，可以考虑直接安装Anaconda，而不是从Python开始一步一步安装。</p><p><strong>anaconda （一个开源的Python发行版本）</strong><br>anaconda指的是一个开源的Python发行版本，其包含了conda、Python等180多个科学包及其依赖项。[1]  因为包含了大量的科学包，Anaconda 的下载文件比较大（约 500 MB），如果只需要某些包，或者需要节省带宽或存储空间，也可以使用Miniconda这个较小的发行版（仅包含conda和 Python）。</p><p><a href="https://baike.baidu.com/item/anaconda/20407441?fr=aladdin" target="_blank" rel="external">百度百科</a></p><h1 id="3-pip和conda"><a href="#3-pip和conda" class="headerlink" title="3 pip和conda"></a>3 pip和conda</h1><p>最后讲讲题目里的这俩货，其实conda在上面介绍Anaconda的时候已经讲到了，这两个都是Python包管理的工具。还是很不错的。这个部分也介绍下这两个工具怎么用。</p><p>pip安装就不提了，不清楚可以自己百度。</p><p>安装包的命令如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">pip install packages</div></pre></td></tr></table></figure><p>然而一顿操作猛如虎之后。</p><p><img src="http://img.blog.csdn.net/20171129110000848?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvRVNBX0RTUQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt=""></p><p>事实上，我们去找一下pip的文件就明白为什么了。</p><p><img src="http://img.blog.csdn.net/20171129110609044?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvRVNBX0RTUQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt=""></p><p>位置是Python安装路径/Scripts下。pip是个exe呀。这回只要打开cmd，定位到pip的exe文件夹下，然后pip install就OK了。用查看已经安装的包的命令测试。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">pip list</div></pre></td></tr></table></figure><p><img src="http://img.blog.csdn.net/20171129110919304?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvRVNBX0RTUQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt=""></p><p><img src="http://img.blog.csdn.net/20171129110926384?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvRVNBX0RTUQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt=""></p><p>conda其实功能命令跟pip差别不大，这里就不多做介绍了。也是献上conda查看包的结果图。</p><p><img src="http://img.blog.csdn.net/20171129111024886?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvRVNBX0RTUQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;人生苦短，我用Python。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://img.blog.csdn.net/20171129101248580?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvRVNBX0RTUQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Coding" scheme="https://giserdaishaoqing.github.io/categories/Coding/"/>
    
    
      <category term="Python" scheme="https://giserdaishaoqing.github.io/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>hexo博客评论新神器——Valine</title>
    <link href="https://giserdaishaoqing.github.io/2017/11/24/hexo%E5%8D%9A%E5%AE%A2%E8%AF%84%E8%AE%BA%E6%96%B0%E7%A5%9E%E5%99%A8%E2%80%94%E2%80%94Valine/"/>
    <id>https://giserdaishaoqing.github.io/2017/11/24/hexo博客评论新神器——Valine/</id>
    <published>2017-11-23T16:00:00.000Z</published>
    <updated>2017-11-24T09:16:42.356Z</updated>
    
    <content type="html"><![CDATA[<script src="\assets\js\APlayer.min.js"> </script><p>接着前文的hexo博客继续优化。其实也没什么大动作，这回主要是对评论系统做些整理。本文如题目所示：介绍一个神器，Valine。<a id="more"></a></p><p>本来hexo博客用的是gitment，我也非常喜欢，看着逼格就超高呀。无奈我用着bug略多，而且毕竟有github账户的小伙伴似乎并不多。于是我就忍痛准备换评论系统。然后在最近刚刚加入的hexo博客群里，看见了一个神器。也就是本篇主人公——Valine.js。</p><p>具体配置就见如下的文章吧。它的定义—— 一款极简的无后端评论系统。</p><p>在多说和网易云跟帖相继倒闭的情况下，这个简直是救人一命胜造七级浮屠呀。</p><p><a href="https://ioliu.cn/2017/add-valine-comments-to-your-blog/" target="_blank" rel="external">Valine – 一款极简的评论系统</a></p><p><a href="https://valine.js.org" target="_blank" rel="external">Valine官网</a></p><p>这个评论系统是基于LeanCloud的，大家应该对这个很熟悉，对，Hexo的博客阅读量统计也是它。官网网址如下，需要注册一个账户。</p><p><a href="https://leancloud.cn" target="_blank" rel="external">LeanCloud官网</a></p><p>另外多提一句，最近为了更好更快升级，我重新在本地部署了下我的hexo博客，就是把NexT主题利用Git方式克隆到本地，以后升级就比较快了。这个内容可以参见官网。也因为克隆了最新版本，发现已经集成了gitment和valinejs（神速）。所以配置起来就很方便了。</p><p><img src="http://img.blog.csdn.net/20171124155819854?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvRVNBX0RTUQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt=""></p><p>这里重点讲一下关于邮件提醒的事。</p><p><img src="http://img.blog.csdn.net/20171124160855406?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvRVNBX0RTUQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt=""></p><p>这样设置一下就可以了。不清楚的查看下面的链接也可以。</p><p><a href="https://valine.js.org/#/configuration" target="_blank" rel="external">valline详细配置官网</a></p><p><a href="https://github.com/xCss/Valine/wiki/Valine-%E8%AF%84%E8%AE%BA%E7%B3%BB%E7%BB%9F%E4%B8%AD%E7%9A%84%E9%82%AE%E4%BB%B6%E6%8F%90%E9%86%92%E8%AE%BE%E7%BD%AE" target="_blank" rel="external">Valine 评论系统中的邮件提醒设置</a></p><p>最后多说一句。支持导出评论和数据分析。</p><p><img src="http://img.blog.csdn.net/20171124171046951?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvRVNBX0RTUQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;接着前文的hexo博客继续优化。其实也没什么大动作，这回主要是对评论系统做些整理。本文如题目所示：介绍一个神器，Valine。
    
    </summary>
    
      <category term="Coding" scheme="https://giserdaishaoqing.github.io/categories/Coding/"/>
    
    
      <category term="hexo" scheme="https://giserdaishaoqing.github.io/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>hexo+NexT博客优化第二弹</title>
    <link href="https://giserdaishaoqing.github.io/2017/11/22/hexo+NexT%E5%8D%9A%E5%AE%A2%E4%BC%98%E5%8C%96%E7%AC%AC%E4%BA%8C%E5%BC%B9/"/>
    <id>https://giserdaishaoqing.github.io/2017/11/22/hexo+NexT博客优化第二弹/</id>
    <published>2017-11-21T16:00:00.000Z</published>
    <updated>2017-11-22T09:21:55.345Z</updated>
    
    <content type="html"><![CDATA[<script src="\assets\js\APlayer.min.js"> </script><p>最近对hexo和NexT博客又做了一次优化。主要干了三件事。</p><p><a href="https://giserdaishaoqing.github.io/">博客地址</a><a id="more"></a> </p><p>顶部加载条实现：</p><p><img src="http://img.blog.csdn.net/20171122143936321?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvRVNBX0RTUQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt=""></p><p>这个如果用的是比较新的NexT主题，只需要在配置文件里面进行修改就可以了。旧的话，就需要对/next/layout/_partials/head.swig文件做些修改，添加对应的代码。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"//cdn.bootcss.com/pace/1.0.2/pace.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">"//cdn.bootcss.com/pace/1.0.2/themes/pink/pace-theme-flash.css"</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></div><div class="line">.pace .pace-progress &#123;</div><div class="line">background: #1E92FB; /*进度条颜色*/</div><div class="line">height: 3px;</div><div class="line">&#125;</div><div class="line">.pace .pace-progress-inner &#123;</div><div class="line">box-shadow: 0 0 10px #1E92FB, 0 0 5px     #1E92FB; /*阴影颜色*/</div><div class="line">&#125;</div><div class="line">.pace .pace-activity &#123;</div><div class="line">border-top-color: #1E92FB;    /*上边框颜色*/</div><div class="line">border-left-color: #1E92FB;    /*左边框颜色*/</div><div class="line">&#125;</div><div class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></div></pre></td></tr></table></figure><p>具体的可以点击上次那篇推荐的文章。</p><p><a href="http://blog.csdn.net/qq_33699981/article/details/72716951" target="_blank" rel="external">hexo的next主题个性化教程：打造炫酷网站</a></p><p>另外就是增加了词云和运行时间。</p><p>词云其实就是标签做的，放在侧边栏上。需要安装插件。</p><pre><code>npm install hexo-tag-cloud@^2.0.* --save</code></pre><p>接着在next/layout/_macro/sidebar.swig添加如下内容。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">&#123;% if site.tags.length &gt; 1 %&#125;</div><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span> <span class="attr">src</span>=<span class="string">"/js/tagcloud.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span> <span class="attr">src</span>=<span class="string">"/js/tagcanvas.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"widget-wrap"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">h3</span> <span class="attr">class</span>=<span class="string">"widget-title"</span>&gt;</span>Tag Cloud<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"myCanvasContainer"</span> <span class="attr">class</span>=<span class="string">"widget tagcloud"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">canvas</span> <span class="attr">width</span>=<span class="string">"250"</span> <span class="attr">height</span>=<span class="string">"250"</span> <span class="attr">id</span>=<span class="string">"resCanvas"</span> <span class="attr">style</span>=<span class="string">"width=100%"</span>&gt;</span></div><div class="line">&#123;&#123; list_tags() &#125;&#125;</div><div class="line"><span class="tag">&lt;/<span class="name">canvas</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">&#123;% endif %&#125;</div></pre></td></tr></table></figure><p>运行时间的话，在next/layout/_custom/sidebar.swig文件中先添加。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"days"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">language</span>=<span class="string">"javascript"</span>&gt;</span><span class="xml"></span></div><div class="line">function show_date_time()&#123;</div><div class="line">window.setTimeout("show_date_time()", 1000);</div><div class="line">BirthDay=new Date("05/27/2017 15:00:00");</div><div class="line">today=new Date();</div><div class="line">timeold=(today.getTime()-BirthDay.getTime());</div><div class="line">sectimeold=timeold/1000</div><div class="line">secondsold=Math.floor(sectimeold);</div><div class="line">msPerDay=24*60*60*1000</div><div class="line">e_daysold=timeold/msPerDay</div><div class="line">daysold=Math.floor(e_daysold);</div><div class="line">e_hrsold=(e_daysold-daysold)*24;</div><div class="line">hrsold=setzero(Math.floor(e_hrsold));</div><div class="line">e_minsold=(e_hrsold-hrsold)*60;</div><div class="line">minsold=setzero(Math.floor((e_hrsold-hrsold)*60));</div><div class="line">seconds=setzero(Math.floor((e_minsold-minsold)*60));</div><div class="line">document.getElementById('days').innerHTML="已运行"+daysold+"天"+hrsold+"时"+minsold+"分"+seconds+"秒";</div><div class="line">&#125;</div><div class="line">function setzero(i)&#123;</div><div class="line">if (i<span class="tag">&lt;<span class="name">10)</span></span></div><div class="line">&#123;<span class="attr">i</span>=<span class="string">"0"</span> + <span class="attr">i</span>&#125;;</div><div class="line"><span class="attr">return</span> <span class="attr">i</span>;</div><div class="line">&#125;</div><div class="line"><span class="attr">show_date_time</span>();</div><div class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div></pre></td></tr></table></figure><p>接着在next/layout/_macro/sidebar.swig文件中修改。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">&#123;# Blogroll #&#125;</div><div class="line">&#123;% if theme.links %&#125;</div><div class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"links-of-blogroll motion-element &#123;&#123; "</span><span class="attr">links-of-blogroll-</span>" + <span class="attr">theme.links_layout</span> | <span class="attr">default</span>('<span class="attr">inline</span>') &#125;&#125;"&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"links-of-blogroll-title"</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"fa  fa-fw fa-&#123;&#123; theme.links_icon | default('globe') | lower &#125;&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></div><div class="line">      &#123;&#123; theme.links_title &#125;&#125;&amp;nbsp;</div><div class="line">      <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"fa  fa-fw fa-&#123;&#123; theme.links_icon | default('globe') | lower &#125;&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"links-of-blogroll-list"</span>&gt;</span></div><div class="line">      &#123;% for name, link in theme.links %&#125;</div><div class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"links-of-blogroll-item"</span>&gt;</span></div><div class="line">          <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;&#123; link &#125;&#125;"</span> <span class="attr">title</span>=<span class="string">"&#123;&#123; name &#125;&#125;"</span> <span class="attr">target</span>=<span class="string">"_blank"</span>&gt;</span>&#123;&#123; name &#125;&#125;<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">      &#123;% endfor %&#125;</div><div class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></div><div class="line">     &#123;% include '../_custom/sidebar.swig' %&#125;</div><div class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"> &#123;% endif %&#125;</div></pre></td></tr></table></figure><p>觉得需要调整颜色的还可以在/next/source/css/_custom/custom.styl加入如下的语句。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">// 自定义的侧栏时间样式</div><div class="line">#days &#123;</div><div class="line">   display: block;</div><div class="line">   color: rgb(7, 179, 155);</div><div class="line">   font-size: 13px;</div><div class="line">   margin-top: 15px;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p><img src="http://img.blog.csdn.net/20171122152720612?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvRVNBX0RTUQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt=""></p><p>另外参照着增加了Readme，增加了一些图标等。</p><p><img src="http://img.blog.csdn.net/20171122160616532?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvRVNBX0RTUQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt=""></p><p>有找到了几篇还不错的文章。以及本次优化参考的主要文章链接。</p><p><a href="https://reuixiy.github.io/technology/computer/computer-aided-art/2017/06/09/hexo-next-optimization.html#更新提示（可以最后看）" target="_blank" rel="external">打造个性超赞博客Hexo+NexT+GithubPages的超深度优化</a></p><p><a href="https://leaferx.online/2017/02/05/EnableTOConMobile/" target="_blank" rel="external">在移动设备下启用NexT主题的目录页面和回到顶部按钮</a></p><p><a href="http://blog.csdn.net/DreamHome_S/article/details/78250692" target="_blank" rel="external">Hexo博客中使用标签云hexo-tag-cloud</a></p><p><a href="https://github.com/MikeCoder/hexo-tag-cloud/blob/master/README.ZH.md" target="_blank" rel="external">Hexo 标签云插件github地址</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近对hexo和NexT博客又做了一次优化。主要干了三件事。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://giserdaishaoqing.github.io/&quot;&gt;博客地址&lt;/a&gt;
    
    </summary>
    
      <category term="Coding" scheme="https://giserdaishaoqing.github.io/categories/Coding/"/>
    
    
      <category term="hexo" scheme="https://giserdaishaoqing.github.io/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>Endnote使用小记</title>
    <link href="https://giserdaishaoqing.github.io/2017/11/20/Endnote%E4%BD%BF%E7%94%A8%E5%B0%8F%E8%AE%B0/"/>
    <id>https://giserdaishaoqing.github.io/2017/11/20/Endnote使用小记/</id>
    <published>2017-11-19T16:00:00.000Z</published>
    <updated>2017-11-20T14:17:03.442Z</updated>
    
    <content type="html"><![CDATA[<script src="\assets\js\APlayer.min.js"> </script><p>如何高效快速管理阅读的文献是研究生学习中的第一步。这里就推荐下目前正在使用的Endnote（当然还有其他平台，这里就对我用的Endnote重点介绍下）。这里提三个简单的功能小记。<a id="more"></a></p><h1 id="1-导入web-of-science的参考文献"><a href="#1-导入Web-of-Science的参考文献" class="headerlink" title="1 导入Web of Science的参考文献"></a>1 导入Web of Science的参考文献</h1><p>首先是进入Web of Science首页，这里顺带提供一个外网访问的方法。使用机构登陆，选择中科院CAS。</p><p>原理是中科院集成在WOS的机构用户登录中，是机构用户登录中唯一一个国内授权账号体系，任何用户只要注册了<strong>中国科技网通行证</strong>（目前为免费注册）即可通过该机构用户转至登录，即可实现利用中科院机构账号访问WOS的若干数据库。</p><p><img src="http://img.blog.csdn.net/20171120210742694?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvRVNBX0RTUQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt=""></p><p><img src="http://img.blog.csdn.net/20171120210750991?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvRVNBX0RTUQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt=""></p><p>具体可以参照如下的链接：<a href="http://mini.eastday.com/a/170820005727129.html" target="_blank" rel="external">科研干货之——随时随地访问Web of Science</a></p><p>有用过地理空间数据云的同学应该会对这个通行证比较熟悉，是同一个通行证。具体注册就不讲了。</p><p>这次选择的样例文章是：Urban Energy Index for Buildings (UEIB): A new method to evaluate the effect of urban form on buildings’energy demand。</p><p>来自于景观生态学中除了Landscape Ecology之外的另一本旗舰刊物——Landscape and Urban Planning。</p><p><img src="http://img.blog.csdn.net/20171120212928973?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvRVNBX0RTUQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt=""></p><p>勾选，并点击保存至“Endnote desktop”。</p><p><img src="http://img.blog.csdn.net/20171120213340738?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvRVNBX0RTUQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt=""></p><p>记录内容选择包括摘要的那个（这个其实根据个人需求）。</p><p><img src="http://img.blog.csdn.net/20171120213408846?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvRVNBX0RTUQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt=""></p><p>存储ciw文件。</p><p><img src="http://img.blog.csdn.net/20171120213445430?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvRVNBX0RTUQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt=""></p><p>Endnote中操作。</p><p><img src="http://img.blog.csdn.net/20171120213702555?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvRVNBX0RTUQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt=""></p><p>选择Web of Science Core Collection(TR)和Unicode(UTF-8)</p><p><img src="http://img.blog.csdn.net/20171120213830024?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvRVNBX0RTUQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt=""></p><p>接着就成功导入了。可以点击画圈部分链接pdf。</p><p><img src="http://img.blog.csdn.net/20171120214249375?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvRVNBX0RTUQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt=""></p><p><img src="http://img.blog.csdn.net/20171120214310455?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvRVNBX0RTUQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt=""></p><h1 id="2-在endnote上做笔记"><a href="#2-在Endnote上做笔记" class="headerlink" title="2 在Endnote上做笔记"></a>2 在Endnote上做笔记</h1><p>在看的时候我们想做些简单的笔记。</p><p><img src="http://img.blog.csdn.net/20171120215929815?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvRVNBX0RTUQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt=""></p><p><img src="http://img.blog.csdn.net/20171120220030316?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvRVNBX0RTUQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt=""></p><p>确实这篇文章最大亮点之一就是这个图摘要。第一眼就看到了这个图之后，我就直接点击下载了。</p><h1 id="3-在endnote上做文献阅读后的summary"><a href="#3-在Endnote上做文献阅读后的Summary" class="headerlink" title="3 在Endnote上做文献阅读后的Summary"></a>3 在Endnote上做文献阅读后的Summary</h1><p>在看完英文文献之后，我觉得必要的工作是做summary。那么如何在Endnote上做这个工作呢？</p><p>首先点击“edit”</p><p><img src="http://img.blog.csdn.net/20171120220449198?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvRVNBX0RTUQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt=""></p><p>Note或者Research Notes都可以。</p><p><img src="http://img.blog.csdn.net/20171120220508599?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvRVNBX0RTUQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt=""></p><p><img src="http://img.blog.csdn.net/20171120220516034?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvRVNBX0RTUQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt=""></p><p>双击打开，可以在这两个下面写你的summary</p><p><img src="http://img.blog.csdn.net/20171120220538159?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvRVNBX0RTUQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt=""></p><p>保存之后还可以显示在首页。</p><p><img src="http://img.blog.csdn.net/20171120220546998?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvRVNBX0RTUQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt=""></p><p>具体的还可以看知乎上的解答。</p><p><a href="https://www.zhihu.com/question/52898855" target="_blank" rel="external">EndNote X7 如何做笔记？</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;如何高效快速管理阅读的文献是研究生学习中的第一步。这里就推荐下目前正在使用的Endnote（当然还有其他平台，这里就对我用的Endnote重点介绍下）。这里提三个简单的功能小记。
    
    </summary>
    
      <category term="Paper" scheme="https://giserdaishaoqing.github.io/categories/Paper/"/>
    
    
      <category term="Endnote" scheme="https://giserdaishaoqing.github.io/tags/Endnote/"/>
    
  </entry>
  
  <entry>
    <title>如何实现一个以中国为中心的世界地图</title>
    <link href="https://giserdaishaoqing.github.io/2017/11/14/%E5%A6%82%E4%BD%95%E5%AE%9E%E7%8E%B0%E4%B8%80%E4%B8%AA%E4%BB%A5%E4%B8%AD%E5%9B%BD%E4%B8%BA%E4%B8%AD%E5%BF%83%E7%9A%84%E4%B8%96%E7%95%8C%E5%9C%B0%E5%9B%BE/"/>
    <id>https://giserdaishaoqing.github.io/2017/11/14/如何实现一个以中国为中心的世界地图/</id>
    <published>2017-11-13T16:00:00.000Z</published>
    <updated>2017-11-14T02:19:28.023Z</updated>
    
    <content type="html"><![CDATA[<script src="\assets\js\APlayer.min.js"> </script><p>最近屡屡有小伙伴为各种目的在询问有没有中国位于中心的世界地图。在某位同学的强烈要求下，我决定稍微记录下这个以我大中华为中心的世界地图的做法。效果图：</p><p><img src="http://img.blog.csdn.net/20171113204450958?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvRVNBX0RTUQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt=""></p><a id="more"></a> <p>原始数据。</p><p><img src="http://img.blog.csdn.net/20171113195555473?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvRVNBX0RTUQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt=""></p><h1 id="1-arcgis"><a href="#1-ArcGIS" class="headerlink" title="1 ArcGIS"></a>1 ArcGIS</h1><p>第一种就简单介绍下ArcGIS平台上如何操作吧。</p><p>首先在ArcGIS软件中，右击Layers（图层）→Properties（属性）→Coordinate System（坐标系）</p><p><img src="http://img.blog.csdn.net/20171113200704999?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvRVNBX0RTUQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt=""></p><p>然后如图所示点击生成一个新的Projected Coordinate System（投影坐标系）。</p><p><img src="http://img.blog.csdn.net/20171113203814946?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvRVNBX0RTUQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt=""></p><p>按照如图所示设置。</p><p><img src="http://img.blog.csdn.net/20171113201205962?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvRVNBX0RTUQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt=""></p><p>并用Save As，导出一个.prj的投影文件。</p><p>接着用Arctoolbox的投影工具进行投影变换（我本身数据是WGS1984的地理坐标系）。</p><p><img src="http://img.blog.csdn.net/20171113202102064?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvRVNBX0RTUQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt=""></p><p><img src="http://img.blog.csdn.net/20171113204414266?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvRVNBX0RTUQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt=""></p><p>选择投影的时候可以直接import。</p><p><img src="http://img.blog.csdn.net/20171113202842645?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvRVNBX0RTUQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt=""></p><p>等待运行。</p><p>结果图。</p><p><img src="http://img.blog.csdn.net/20171113204450958?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvRVNBX0RTUQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt=""></p><p>如上，其实过程不复杂。最关键的这个使得中国能居于中间的原因是投影参数里面的第三个参数——Central Meridian，也就是中央经线。有兴趣还可以自行调整，我这里设150结果如上，也可以自行设定，只需要双击投影文件修改属性即可。</p><h1 id="2-r"><a href="#2-R" class="headerlink" title="2 R"></a>2 R</h1><p>第二种介绍下R语言的方法。R语言做空间数据的这些处理最主要的两个包就是sp和rgdal。所以在处理前请先安装这两个包。</p><p>接下来直接进入正题。</p><p>我们需要先读入空间数据，然后对空间数据进行投影变换。</p><p>如何读空间数据就请点击前面我写过的文章，<a href="https://giserdaishaoqing.github.io/2017/04/24/R%E8%AF%AD%E8%A8%80%E8%AF%BB%E5%8F%96%E7%A9%BA%E9%97%B4%E6%95%B0%E6%8D%AE%E4%BB%A5%E5%8F%8AArcGIS%E4%B8%ADOLS%E5%B7%A5%E5%85%B7%E5%9B%9E%E5%BD%92%E7%BB%93%E6%9E%9C%E5%8F%AF%E8%A7%86%E5%8C%96R%E8%AF%AD%E8%A8%80%E7%89%88/">戳</a></p><p>其实关键步骤就是用prj4字符串构造出我们需要的投影坐标系。关于这一点，推荐看下面的这篇博客学习。</p><p><a href="http://blog.csdn.net/sf2gis2/article/details/50686811" target="_blank" rel="external">坐标详解与PROJ.4使用说明</a></p><p>此外推荐几个网站用来查询相关坐标系信息。</p><p><a href="http://epsg.io/" target="_blank" rel="external">epsg开源查询网站，托管在github上</a></p><p><a href="http://spatialreference.org/" target="_blank" rel="external">空间参考官网网站</a></p><p><a href="http://www.gdal.org/ogr_formats.html" target="_blank" rel="external">OGR驱动中的矢量格式、读写情况以及代码</a></p><p>这里直接给出对应的prj4字符串。”+proj=eqc +lat_ts=30 +lat_0=0 +lon_0=150 +ellps=WGS84 +datum=WGS84 +units=m +no_defs”</p><p>用sptransform转换投影坐标系，结果如图。</p><p><img src="http://img.blog.csdn.net/20171114094902774?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvRVNBX0RTUQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt=""></p><p>打完收工。</p><p>贴个R语言源码图。</p><p><img src="http://img.blog.csdn.net/20171114101234166?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvRVNBX0RTUQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近屡屡有小伙伴为各种目的在询问有没有中国位于中心的世界地图。在某位同学的强烈要求下，我决定稍微记录下这个以我大中华为中心的世界地图的做法。效果图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://img.blog.csdn.net/20171113204450958?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvRVNBX0RTUQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="GIS" scheme="https://giserdaishaoqing.github.io/categories/GIS/"/>
    
    
      <category term="ArcGIS" scheme="https://giserdaishaoqing.github.io/tags/ArcGIS/"/>
    
      <category term="R" scheme="https://giserdaishaoqing.github.io/tags/R/"/>
    
  </entry>
  
  <entry>
    <title>花式安装蓝鲸鱼札记</title>
    <link href="https://giserdaishaoqing.github.io/2017/11/08/%E8%8A%B1%E5%BC%8F%E5%AE%89%E8%A3%85%E8%93%9D%E9%B2%B8%E9%B1%BC%E6%9C%AD%E8%AE%B0/"/>
    <id>https://giserdaishaoqing.github.io/2017/11/08/花式安装蓝鲸鱼札记/</id>
    <published>2017-11-07T16:00:00.000Z</published>
    <updated>2017-11-09T16:07:59.203Z</updated>
    
    <content type="html"><![CDATA[<script src="\assets\js\APlayer.min.js"> </script><p>大家好，蓝鲸鱼又来了。<a id="more"></a> </p><p>自从上篇搞完蓝鲸鱼在Win 7下安装之后，笔者就看到了另一篇文章。</p><p><a href="http://blog.csdn.net/shi1451042748/article/details/52996046" target="_blank" rel="external">Win10 Docker 安装使用</a></p><p>感觉仿佛很棒的样子。于是我们就开始愉快地新系（zuo）统（si）旅程，笔者顺手就升级了Win 10系统。这里顺带介绍一个神器。</p><p><img src="http://img.blog.csdn.net/20171109230942679?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvRVNBX0RTUQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt=""></p><p>YUMI是一个多系统USB启动盘制作的软件。最早是在知乎回答上看到。</p><p><a href="https://www.zhihu.com/question/22119059" target="_blank" rel="external">如何制作支持安装多系统（Win/Linux）的U盘启动盘？</a></p><p><a href="https://www.pendrivelinux.com/yumi-multiboot-usb-creator/" target="_blank" rel="external">YUMI官网</a></p><p><a href="https://pan.baidu.com/s/1cqCmbs" target="_blank" rel="external">也可以点击这个百度网盘地址</a></p><p>操作手册。</p><p><img src="http://img.blog.csdn.net/20171109231726064?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvRVNBX0RTUQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt=""></p><p><img src="http://img.blog.csdn.net/20171109231736929?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvRVNBX0RTUQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt=""></p><p>一键安装即可。</p><p><img src="http://img.blog.csdn.net/20171109231937792?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvRVNBX0RTUQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt=""></p><p>好。回到正题。Win 10升完之后，我遇上了各种有的没的bug。。。包括蓝鲸鱼！</p><p>当然还是先简介下怎么安装。</p><hr><p>算了。。。自己看官网文档去。</p><p><a href="https://docs.docker.com/docker-for-windows/" target="_blank" rel="external">官网</a></p><p>简单地说。我遇上的问题就是如下。</p><p><img src="http://img.blog.csdn.net/20171109233141613?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvRVNBX0RTUQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt=""></p><p>其实总结起来，就是网络网卡一些问题。百度、必应、谷歌都未果。但是在github上找到了对应的issues。</p><p><a href="https://github.com/docker/for-win/issues/324" target="_blank" rel="external">Hyper-V was unable to find a virtual switch with name “DockerNAT”.</a></p><p>然后历经磨难，突然发现，是我的毒霸把一堆服务给禁止了。然后没有按顺序一个个开启，一堆毛病。于是就愉快地开启docker之旅。</p><p><img src="http://img.blog.csdn.net/20171109234556698?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvRVNBX0RTUQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt=""></p><p><img src="http://img.blog.csdn.net/20171109234651793?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvRVNBX0RTUQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt=""></p><p><img src="http://img.blog.csdn.net/20171109234659671?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvRVNBX0RTUQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;大家好，蓝鲸鱼又来了。
    
    </summary>
    
      <category term="Linux" scheme="https://giserdaishaoqing.github.io/categories/Linux/"/>
    
    
      <category term="Docker" scheme="https://giserdaishaoqing.github.io/tags/Docker/"/>
    
  </entry>
  
  <entry>
    <title>Win7下蓝鲸鱼安装以及Xshell连接操作</title>
    <link href="https://giserdaishaoqing.github.io/2017/11/06/Win7%E4%B8%8B%E8%93%9D%E9%B2%B8%E9%B1%BC%E5%AE%89%E8%A3%85%E4%BB%A5%E5%8F%8AXshell%E8%BF%9E%E6%8E%A5%E6%93%8D%E4%BD%9C/"/>
    <id>https://giserdaishaoqing.github.io/2017/11/06/Win7下蓝鲸鱼安装以及Xshell连接操作/</id>
    <published>2017-11-05T16:00:00.000Z</published>
    <updated>2017-11-06T02:54:17.652Z</updated>
    
    <content type="html"><![CDATA[<script src="\assets\js\APlayer.min.js"> </script><p>我爱吃金拱门，开封菜也不错，但我觉得最好吃的是小红帽，那我们就来安装个蓝鲸鱼吧。<a id="more"></a> </p><h1 id="1-docker简介"><a href="#1-Docker简介" class="headerlink" title="1 Docker简介"></a>1 Docker简介</h1><p>隆重推出我们的主人公——蓝鲸鱼，Docker先生。</p><p><img src="http://img.blog.csdn.net/20171106091551363?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvRVNBX0RTUQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt=""></p><p>接下来让我抄一段百度百科的简介。</p><p>Docker （基于Go语言开发！基于Go语言开发！基于Go语言开发！）是一个开源的应用容器引擎，让开发者可以打包他们的应用以及依赖包到一个可移植的容器中，然后发布到任何流行的 Linux 机器上，也可以实现虚拟化。容器是完全使用沙箱机制，相互之间不会有任何接口。<a href="https://baike.baidu.com/item/Docker/13344470?fr=aladdin" target="_blank" rel="external">看不够的点这里，看不懂的点这里</a>。</p><p>嗯，所以这东西吧，你可以把它当成小型虚拟机，貌似目前的需求也差不多，配置消耗相对虚拟机小得多，相对来说能快速部署环境是个优点。</p><p>具体的也可以查看<a href="https://www.docker.com/" target="_blank" rel="external">Docker官网</a></p><h1 id="2-win-7下安装过程"><a href="#2-Win-7下安装过程" class="headerlink" title="2 Win 7下安装过程"></a>2 Win 7下安装过程</h1><p>目前来看，Docker跟Linux和MacOS系统应该还是更相容的，但是毕竟我们是研究GIS的人员，Windows才是王道（谁让ArcGIS只有windows版本呢？呃，不过其实QGIS和GRASS GIS就有各种平台版本，功能也相当强大)。那么如何在Win 7下安装Docker呢？其实这样子我们通过Docker去运行Linux环境（用Docker的话讲，这叫容器）的话，相对更方便些，消耗资源也比虚拟机小，这也是我开始安装的目的。本文就来介绍下。</p><p>目前Docker在Win 10最新系统安装已经十分方便，而且不需要依赖Virtual Box。</p><p><a href="https://docs.docker.com/docker-for-windows/" target="_blank" rel="external">具体就看官网吧</a></p><p>直接下载Docker for Windows的app安装就可以。</p><p>而Win 7的话，上面那个不支持，所以还得依赖Virtual Box（其实说来还是得靠虚拟机）。接下来就来讲讲怎么安装吧。</p><p>Win 7上使用Docker Toolbox.exe进行安装。</p><p><a href="https://github.com/boot2docker/windows-installer/releases" target="_blank" rel="external">github下载地址</a>，但是这个地址国内下载很慢（而且似乎不是很新，也可以从<a href="https://docs.docker.com/toolbox/overview/#whats-in-the-box" target="_blank" rel="external">Docker官网</a>下载）。可以用下面的另一个地址。</p><p><a href="https://get.daocloud.io/toolbox/" target="_blank" rel="external">下载地址</a></p><p>下载下来之后，就只需双击exe开始安装。</p><p><img src="http://img.blog.csdn.net/20171106101531817?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvRVNBX0RTUQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt=""></p><p><img src="http://img.blog.csdn.net/20171106101539524?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvRVNBX0RTUQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt=""></p><p><img src="http://img.blog.csdn.net/20171106101547943?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvRVNBX0RTUQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt=""></p><p><img src="http://img.blog.csdn.net/20171106101555224?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvRVNBX0RTUQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt=""></p><p>如果第二步已经安装过Git和Virtual也可以不勾选，中间还会让安装Oracle的一些东西，全部安装即可。但是后面就不能直接双击.sh文件运行docker了，得在git bash下面运行。</p><p>安装完毕之后，应该会出现这两个文件。</p><p><img src="http://img.blog.csdn.net/20171106102524666?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvRVNBX0RTUQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt=""></p><p>通常双击什么的快速启动终端就可以了，第一次需要配置花的时间久一点。或者也可以到Docker安装文件夹下，双击.sh文件。不过后面发现这会报错，找不到boot2docker.iso文件，而这个文件就在Docker安装文件夹下。</p><p><img src="http://img.blog.csdn.net/20171106102710265?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvRVNBX0RTUQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt=""></p><p>先将这个iso文件拷贝到，C:[用户]Administrator.docker\machine\cache下，再运行就.sh文件或者运行Docker Quickstart Terminal就成功了。</p><p><img src="http://img.blog.csdn.net/20171106103832064?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvRVNBX0RTUQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt=""></p><p><img src="http://img.blog.csdn.net/20171106103840871?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvRVNBX0RTUQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt=""></p><h1 id="3-用xshell连接自己的docker"><a href="#3-用Xshell连接自己的Docker" class="headerlink" title="3 用Xshell连接自己的Docker"></a>3 用Xshell连接自己的Docker</h1><p>用单纯的命令行有很多限制，一般可以用终端模拟器来连接，这里用的Xshell，也可以用其他终端模拟器。</p><p><img src="http://img.blog.csdn.net/20171106103535312?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvRVNBX0RTUQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt=""></p><p>这里用户名为docker，密码为tcuser（默认）。</p><p><img src="http://img.blog.csdn.net/20171106103933349?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvRVNBX0RTUQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt=""></p><p><img src="http://img.blog.csdn.net/20171106104000699?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvRVNBX0RTUQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt=""></p><p>连接成功。接下来运行个hello world。</p><pre><code>docker run hello-world</code></pre><p><img src="http://img.blog.csdn.net/20171106104121302?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvRVNBX0RTUQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt=""></p><h1 id="4-docker-hub注册"><a href="#4-docker-hub注册" class="headerlink" title="4 docker hub注册"></a>4 docker hub注册</h1><p>这个就是可以将自己的镜像push到仓库里的账户，登陆的话，只需要敲入如下命令。</p><pre><code>docker login</code></pre><p>填入账户和密码即可。</p><p><img src="http://img.blog.csdn.net/20171106104346243?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvRVNBX0RTUQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt=""></p><p>账户名最好用小写字母和数字即可。</p><p>一些参考博客及文档。</p><p><a href="http://blog.csdn.net/jpiverson/article/details/50730607" target="_blank" rel="external">创建Docker Hub账号&amp;库</a></p><p><a href="http://blog.csdn.net/ljf10010/article/details/48286589" target="_blank" rel="external">你的Docker Hub账户</a></p><p><a href="http://www.widuu.com/chinese_docker/userguide/" target="_blank" rel="external">使用Docker Hub | Docker 中文指南</a></p><p><a href="http://blog.csdn.net/zistxym/article/details/42918339" target="_blank" rel="external">DOCKER windows 7 详细安装教程</a></p><p><a href="http://blog.csdn.net/jack__cj/article/details/55004929" target="_blank" rel="external">Windows7 上运行docker实战</a></p><p><a href="http://www.jianshu.com/p/d809971b1fc1" target="_blank" rel="external">完整记录在 windows7 下使用 docker 的过程</a></p><p><a href="http://www.cnblogs.com/jinjiangongzuoshi/p/6538321.html" target="_blank" rel="external">Docker在windows下的使用【一】</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;我爱吃金拱门，开封菜也不错，但我觉得最好吃的是小红帽，那我们就来安装个蓝鲸鱼吧。
    
    </summary>
    
      <category term="Linux" scheme="https://giserdaishaoqing.github.io/categories/Linux/"/>
    
    
      <category term="Docker" scheme="https://giserdaishaoqing.github.io/tags/Docker/"/>
    
  </entry>
  
  <entry>
    <title>hugo使用备忘录</title>
    <link href="https://giserdaishaoqing.github.io/2017/11/05/hugo%E4%BD%BF%E7%94%A8%E5%A4%87%E5%BF%98%E5%BD%95/"/>
    <id>https://giserdaishaoqing.github.io/2017/11/05/hugo使用备忘录/</id>
    <published>2017-11-04T16:00:00.000Z</published>
    <updated>2017-11-05T09:46:45.582Z</updated>
    
    <content type="html"><![CDATA[<script src="\assets\js\APlayer.min.js"> </script><p>最近在github上发现了除了hexo外的另一个静态网页神器：hugo，这里就简单记录下使用的一些记录。<a id="more"></a> </p><p>这里抄一下hugo官方文档的介绍。</p><p><strong>Hugo是由Go语言实现的静态网站生成器。简单、易用、高效、易扩展、快速部署</strong>。</p><p><a href="http://www.gohugo.org/" target="_blank" rel="external">官方文档地址</a></p><p>这里多说几句Go语言。该语言貌似最近挺火热，很多人看好的一门新语言。以后有空闲可以考虑看看这个语言，不得不说最近在考虑使用docker的问题（配置环境十分方便），突然发现这东西好像也是Go写的。</p><p>进入正题，使用hugo其实没那么麻烦，因为可以用编译好的exe文件（windows系统下）。<br>具体的安装教程见如下：</p><p><a href="https://georgecushen.com/create-your-website-with-hugo/#installing-hugo" target="_blank" rel="external">Install hugo</a></p><p><img src="http://img.blog.csdn.net/20171105170915601?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvRVNBX0RTUQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt=""></p><p>翻译一下：<br>第一步，从<a href="https://github.com/gohugoio/hugo/releases" target="_blank" rel="external">Hugo Release</a>页面下载hugo的压缩包。<br>第二步，在你喜欢的地方创建一个Hugo和bin的文件夹：’C:\Hugo\bin\’。<br>第三步，将下载的压缩包放到刚刚建立的文件夹里面。<br>第四步，解压压缩包文件，提取hugo.exe到’C:\Hugo\bin\’里。<br>第五步，在你的windows环境变量中加入Hugo exe路径。</p><p>顺带一提，最近用hugo的原因是，刚刚发现的一个开源hugo的学术主页框架项目。</p><p><a href="https://github.com/gcushen/hugo-academic" target="_blank" rel="external">项目地址</a></p><p>接着就开始建立站点了。</p><p>在你的Hugo exe所在文件夹下打开cmd（按住shift右击，可以在当前文件夹打开cmd）。</p><pre><code>hugo new [创建站点文件夹路径名字]</code></pre><p>这样就算创建好了。接下来就只需要拷贝主题即可，用git clone，这里需要开启Git bash。</p><p>拷贝主题之后，针对配置文件进行修改。主要修改的是content里的一些markdown的文档。其实是各个主页。而其他配置则通过根目录的config.toml，熟悉hexo的同学上手速度应该快一些，跟.yml文件类似。</p><p>接下来记录一些常用命令。</p><p>本地预览命令。</p><pre><code>hugo server</code></pre><p>访问端口，localhost:1313。</p><p>生成public文件夹，baseUrl填部署的仓库地址，这里用的github部署。</p><pre><code>hugo --theme=academic --baseUrl=&quot;https://xxxx&quot;</code></pre><p> 切换到public文件夹，并push到远程仓库。</p><pre><code>cd publicgit initgit remote add origin https://github.com/xxxx/xxx.git(从仓库的clone那里复制)git add -Agit commit -m &quot;first commit&quot;git push -u origin master</code></pre><p>之后的更新就只需要后面三句命令就可以了。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近在github上发现了除了hexo外的另一个静态网页神器：hugo，这里就简单记录下使用的一些记录。
    
    </summary>
    
      <category term="Coding" scheme="https://giserdaishaoqing.github.io/categories/Coding/"/>
    
    
      <category term="hugo" scheme="https://giserdaishaoqing.github.io/tags/hugo/"/>
    
  </entry>
  
</feed>
